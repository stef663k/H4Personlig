
ATMega328BP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800100  00000b6e  00000c02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b6e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000011  00800194  00800194  00000c96  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c96  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cf4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fbf  00000000  00000000  00000e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bb0  00000000  00000000  00001dcb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006f9  00000000  00000000  0000297b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000350  00000000  00000000  00003074  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000078d  00000000  00000000  000033c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006e1  00000000  00000000  00003b51  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00004232  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
   4:	0c 94 2a 01 	jmp	0x254	; 0x254 <__vector_1>
   8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
   c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  34:	0c 94 b7 00 	jmp	0x16e	; 0x16e <__vector_13>
  38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
  b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	ee e6       	ldi	r30, 0x6E	; 110
  c8:	fb e0       	ldi	r31, 0x0B	; 11
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a4 39       	cpi	r26, 0x94	; 148
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a4 e9       	ldi	r26, 0x94	; 148
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	a5 3a       	cpi	r26, 0xA5	; 165
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	0e 94 bb 01 	call	0x376	; 0x376 <main>
  ea:	0c 94 b5 05 	jmp	0xb6a	; 0xb6a <_exit>

000000ee <__bad_interrupt>:
  ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <MyExternalInterruptHandler>:
	{NoCallbackIsPerformedOnExternalInterrupt, 0},
	{NoCallbackIsPerformedOnExternalInterrupt, 0}
	#endif
};

void MyExternalInterruptHandler(uint16_t interruptCount) {
  f2:	cf 93       	push	r28
  f4:	df 93       	push	r29
  f6:	00 d0       	rcall	.+0      	; 0xf8 <MyExternalInterruptHandler+0x6>
  f8:	cd b7       	in	r28, 0x3d	; 61
  fa:	de b7       	in	r29, 0x3e	; 62
  fc:	9a 83       	std	Y+2, r25	; 0x02
  fe:	89 83       	std	Y+1, r24	; 0x01
	UART_PrintString("External interrupt triggered!\n");
 100:	8c e1       	ldi	r24, 0x1C	; 28
 102:	91 e0       	ldi	r25, 0x01	; 1
 104:	0e 94 65 02 	call	0x4ca	; 0x4ca <UART_PrintString>
	UART_PrintInt(interruptCount);
 108:	89 81       	ldd	r24, Y+1	; 0x01
 10a:	0e 94 86 02 	call	0x50c	; 0x50c <UART_PrintInt>
	UART_PrintString("\n");
 10e:	8b e3       	ldi	r24, 0x3B	; 59
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	0e 94 65 02 	call	0x4ca	; 0x4ca <UART_PrintString>
	UART_PrintInt(TCNT1);
 116:	84 e8       	ldi	r24, 0x84	; 132
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	fc 01       	movw	r30, r24
 11c:	80 81       	ld	r24, Z
 11e:	91 81       	ldd	r25, Z+1	; 0x01
 120:	0e 94 86 02 	call	0x50c	; 0x50c <UART_PrintInt>
}
 124:	00 00       	nop
 126:	0f 90       	pop	r0
 128:	0f 90       	pop	r0
 12a:	df 91       	pop	r29
 12c:	cf 91       	pop	r28
 12e:	08 95       	ret

00000130 <Timer1_Init>:


void Timer1_Init(void) {
 130:	cf 93       	push	r28
 132:	df 93       	push	r29
 134:	cd b7       	in	r28, 0x3d	; 61
 136:	de b7       	in	r29, 0x3e	; 62
	TCCR1B |= (1 << CS11) | (1 << CS10);
 138:	81 e8       	ldi	r24, 0x81	; 129
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	21 e8       	ldi	r18, 0x81	; 129
 13e:	30 e0       	ldi	r19, 0x00	; 0
 140:	f9 01       	movw	r30, r18
 142:	20 81       	ld	r18, Z
 144:	23 60       	ori	r18, 0x03	; 3
 146:	fc 01       	movw	r30, r24
 148:	20 83       	st	Z, r18
	TCNT1 = 0;
 14a:	84 e8       	ldi	r24, 0x84	; 132
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	fc 01       	movw	r30, r24
 150:	11 82       	std	Z+1, r1	; 0x01
 152:	10 82       	st	Z, r1
	
	TIMSK1 |= (1 << TOIE1);
 154:	8f e6       	ldi	r24, 0x6F	; 111
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	2f e6       	ldi	r18, 0x6F	; 111
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	f9 01       	movw	r30, r18
 15e:	20 81       	ld	r18, Z
 160:	21 60       	ori	r18, 0x01	; 1
 162:	fc 01       	movw	r30, r24
 164:	20 83       	st	Z, r18
}
 166:	00 00       	nop
 168:	df 91       	pop	r29
 16a:	cf 91       	pop	r28
 16c:	08 95       	ret

0000016e <__vector_13>:

ISR(TIMER1_OVF_vect) {
 16e:	1f 92       	push	r1
 170:	0f 92       	push	r0
 172:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 176:	0f 92       	push	r0
 178:	11 24       	eor	r1, r1
 17a:	2f 93       	push	r18
 17c:	3f 93       	push	r19
 17e:	4f 93       	push	r20
 180:	5f 93       	push	r21
 182:	6f 93       	push	r22
 184:	7f 93       	push	r23
 186:	8f 93       	push	r24
 188:	9f 93       	push	r25
 18a:	af 93       	push	r26
 18c:	bf 93       	push	r27
 18e:	ef 93       	push	r30
 190:	ff 93       	push	r31
 192:	cf 93       	push	r28
 194:	df 93       	push	r29
 196:	cd b7       	in	r28, 0x3d	; 61
 198:	de b7       	in	r29, 0x3e	; 62
	timerOverflowCount++;
 19a:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <timerOverflowCount>
 19e:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <timerOverflowCount+0x1>
 1a2:	01 96       	adiw	r24, 0x01	; 1
 1a4:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <timerOverflowCount+0x1>
 1a8:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <timerOverflowCount>
	if (timerOverflowCount % 10 == 0) {
 1ac:	40 91 95 01 	lds	r20, 0x0195	; 0x800195 <timerOverflowCount>
 1b0:	50 91 96 01 	lds	r21, 0x0196	; 0x800196 <timerOverflowCount+0x1>
 1b4:	9a 01       	movw	r18, r20
 1b6:	ad ec       	ldi	r26, 0xCD	; 205
 1b8:	bc ec       	ldi	r27, 0xCC	; 204
 1ba:	0e 94 bc 02 	call	0x578	; 0x578 <__umulhisi3>
 1be:	96 95       	lsr	r25
 1c0:	87 95       	ror	r24
 1c2:	96 95       	lsr	r25
 1c4:	87 95       	ror	r24
 1c6:	96 95       	lsr	r25
 1c8:	87 95       	ror	r24
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	9c 01       	movw	r18, r24
 1d0:	22 0f       	add	r18, r18
 1d2:	33 1f       	adc	r19, r19
 1d4:	22 0f       	add	r18, r18
 1d6:	33 1f       	adc	r19, r19
 1d8:	82 0f       	add	r24, r18
 1da:	93 1f       	adc	r25, r19
 1dc:	9a 01       	movw	r18, r20
 1de:	28 1b       	sub	r18, r24
 1e0:	39 0b       	sbc	r19, r25
 1e2:	c9 01       	movw	r24, r18
 1e4:	89 2b       	or	r24, r25
 1e6:	71 f4       	brne	.+28     	; 0x204 <__vector_13+0x96>
		UART_PrintString("Overflow count: ");
 1e8:	8d e3       	ldi	r24, 0x3D	; 61
 1ea:	91 e0       	ldi	r25, 0x01	; 1
 1ec:	0e 94 65 02 	call	0x4ca	; 0x4ca <UART_PrintString>
		UART_PrintInt(timerOverflowCount);
 1f0:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <timerOverflowCount>
 1f4:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <timerOverflowCount+0x1>
 1f8:	0e 94 86 02 	call	0x50c	; 0x50c <UART_PrintInt>
		UART_PrintString("\n");
 1fc:	8b e3       	ldi	r24, 0x3B	; 59
 1fe:	91 e0       	ldi	r25, 0x01	; 1
 200:	0e 94 65 02 	call	0x4ca	; 0x4ca <UART_PrintString>
	}
	
	timeElapsed++;
 204:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <timeElapsed>
 208:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <timeElapsed+0x1>
 20c:	a0 91 99 01 	lds	r26, 0x0199	; 0x800199 <timeElapsed+0x2>
 210:	b0 91 9a 01 	lds	r27, 0x019A	; 0x80019a <timeElapsed+0x3>
 214:	01 96       	adiw	r24, 0x01	; 1
 216:	a1 1d       	adc	r26, r1
 218:	b1 1d       	adc	r27, r1
 21a:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <timeElapsed>
 21e:	90 93 98 01 	sts	0x0198, r25	; 0x800198 <timeElapsed+0x1>
 222:	a0 93 99 01 	sts	0x0199, r26	; 0x800199 <timeElapsed+0x2>
 226:	b0 93 9a 01 	sts	0x019A, r27	; 0x80019a <timeElapsed+0x3>
}
 22a:	00 00       	nop
 22c:	df 91       	pop	r29
 22e:	cf 91       	pop	r28
 230:	ff 91       	pop	r31
 232:	ef 91       	pop	r30
 234:	bf 91       	pop	r27
 236:	af 91       	pop	r26
 238:	9f 91       	pop	r25
 23a:	8f 91       	pop	r24
 23c:	7f 91       	pop	r23
 23e:	6f 91       	pop	r22
 240:	5f 91       	pop	r21
 242:	4f 91       	pop	r20
 244:	3f 91       	pop	r19
 246:	2f 91       	pop	r18
 248:	0f 90       	pop	r0
 24a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 24e:	0f 90       	pop	r0
 250:	1f 90       	pop	r1
 252:	18 95       	reti

00000254 <__vector_1>:


ISR(INT0_vect) {
 254:	1f 92       	push	r1
 256:	0f 92       	push	r0
 258:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 25c:	0f 92       	push	r0
 25e:	11 24       	eor	r1, r1
 260:	2f 93       	push	r18
 262:	3f 93       	push	r19
 264:	4f 93       	push	r20
 266:	5f 93       	push	r21
 268:	6f 93       	push	r22
 26a:	7f 93       	push	r23
 26c:	8f 93       	push	r24
 26e:	9f 93       	push	r25
 270:	af 93       	push	r26
 272:	bf 93       	push	r27
 274:	ef 93       	push	r30
 276:	ff 93       	push	r31
 278:	cf 93       	push	r28
 27a:	df 93       	push	r29
 27c:	00 d0       	rcall	.+0      	; 0x27e <__vector_1+0x2a>
 27e:	cd b7       	in	r28, 0x3d	; 61
 280:	de b7       	in	r29, 0x3e	; 62
	UART_PrintString("INT0 interrupt triggered");
 282:	8e e4       	ldi	r24, 0x4E	; 78
 284:	91 e0       	ldi	r25, 0x01	; 1
 286:	0e 94 65 02 	call	0x4ca	; 0x4ca <UART_PrintString>
	uint16_t currentTime = timeElapsed;
 28a:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <timeElapsed>
 28e:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <timeElapsed+0x1>
 292:	a0 91 99 01 	lds	r26, 0x0199	; 0x800199 <timeElapsed+0x2>
 296:	b0 91 9a 01 	lds	r27, 0x019A	; 0x80019a <timeElapsed+0x3>
 29a:	9a 83       	std	Y+2, r25	; 0x02
 29c:	89 83       	std	Y+1, r24	; 0x01
	
	if (currentTime - lastInterruptTime > 2) { 
 29e:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <lastInterruptTime>
 2a2:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <lastInterruptTime+0x1>
 2a6:	9c 01       	movw	r18, r24
 2a8:	89 81       	ldd	r24, Y+1	; 0x01
 2aa:	9a 81       	ldd	r25, Y+2	; 0x02
 2ac:	82 1b       	sub	r24, r18
 2ae:	93 0b       	sbc	r25, r19
 2b0:	03 97       	sbiw	r24, 0x03	; 3
 2b2:	48 f0       	brcs	.+18     	; 0x2c6 <__vector_1+0x72>
		int0Triggered = true; 
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <__data_end>
		lastInterruptTime = currentTime;
 2ba:	89 81       	ldd	r24, Y+1	; 0x01
 2bc:	9a 81       	ldd	r25, Y+2	; 0x02
 2be:	90 93 9c 01 	sts	0x019C, r25	; 0x80019c <lastInterruptTime+0x1>
 2c2:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <lastInterruptTime>
	}
	EIFR |= (1 << TOIE1);
 2c6:	8c e3       	ldi	r24, 0x3C	; 60
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	2c e3       	ldi	r18, 0x3C	; 60
 2cc:	30 e0       	ldi	r19, 0x00	; 0
 2ce:	f9 01       	movw	r30, r18
 2d0:	20 81       	ld	r18, Z
 2d2:	21 60       	ori	r18, 0x01	; 1
 2d4:	fc 01       	movw	r30, r24
 2d6:	20 83       	st	Z, r18
	
}
 2d8:	00 00       	nop
 2da:	0f 90       	pop	r0
 2dc:	0f 90       	pop	r0
 2de:	df 91       	pop	r29
 2e0:	cf 91       	pop	r28
 2e2:	ff 91       	pop	r31
 2e4:	ef 91       	pop	r30
 2e6:	bf 91       	pop	r27
 2e8:	af 91       	pop	r26
 2ea:	9f 91       	pop	r25
 2ec:	8f 91       	pop	r24
 2ee:	7f 91       	pop	r23
 2f0:	6f 91       	pop	r22
 2f2:	5f 91       	pop	r21
 2f4:	4f 91       	pop	r20
 2f6:	3f 91       	pop	r19
 2f8:	2f 91       	pop	r18
 2fa:	0f 90       	pop	r0
 2fc:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 300:	0f 90       	pop	r0
 302:	1f 90       	pop	r1
 304:	18 95       	reti

00000306 <processInterrupts>:

void processInterrupts(void) {
 306:	cf 93       	push	r28
 308:	df 93       	push	r29
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
	if (int0Triggered && timeElapsed >= FIVE_SECOND_THRESHOLD) {
 30e:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <__data_end>
 312:	88 23       	and	r24, r24
 314:	61 f1       	breq	.+88     	; 0x36e <processInterrupts+0x68>
 316:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <timeElapsed>
 31a:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <timeElapsed+0x1>
 31e:	a0 91 99 01 	lds	r26, 0x0199	; 0x800199 <timeElapsed+0x2>
 322:	b0 91 9a 01 	lds	r27, 0x019A	; 0x80019a <timeElapsed+0x3>
 326:	8b 34       	cpi	r24, 0x4B	; 75
 328:	9c 44       	sbci	r25, 0x4C	; 76
 32a:	a1 05       	cpc	r26, r1
 32c:	b1 05       	cpc	r27, r1
 32e:	f8 f0       	brcs	.+62     	; 0x36e <processInterrupts+0x68>
		UART_PrintString("Processing interrupt!\n");
 330:	87 e6       	ldi	r24, 0x67	; 103
 332:	91 e0       	ldi	r25, 0x01	; 1
 334:	0e 94 65 02 	call	0x4ca	; 0x4ca <UART_PrintString>
		int0Triggered = false; 
 338:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <__data_end>
		interruptCount++;
 33c:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <interruptCount>
 340:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <interruptCount+0x1>
 344:	01 96       	adiw	r24, 0x01	; 1
 346:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <interruptCount+0x1>
 34a:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <interruptCount>
		MyExternalInterruptHandler(interruptCount);
 34e:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <interruptCount>
 352:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <interruptCount+0x1>
 356:	0e 94 79 00 	call	0xf2	; 0xf2 <MyExternalInterruptHandler>
		PORTB ^= (1 << LED_PINBUT); 
 35a:	85 e2       	ldi	r24, 0x25	; 37
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	25 e2       	ldi	r18, 0x25	; 37
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	f9 01       	movw	r30, r18
 364:	30 81       	ld	r19, Z
 366:	20 e2       	ldi	r18, 0x20	; 32
 368:	23 27       	eor	r18, r19
 36a:	fc 01       	movw	r30, r24
 36c:	20 83       	st	Z, r18
	}
}
 36e:	00 00       	nop
 370:	df 91       	pop	r29
 372:	cf 91       	pop	r28
 374:	08 95       	ret

00000376 <main>:
#include "ExternalInterrupt.h"
#include "ProjectDefines.h"
#include "UART.h"


int main(void) {
 376:	cf 93       	push	r28
 378:	df 93       	push	r29
 37a:	cd b7       	in	r28, 0x3d	; 61
 37c:	de b7       	in	r29, 0x3e	; 62
	RS232Init();
 37e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <RS232Init>
	Timer1_Init();
 382:	0e 94 98 00 	call	0x130	; 0x130 <Timer1_Init>
	
	DDRB |= (1 << LED_PINBUT);
 386:	84 e2       	ldi	r24, 0x24	; 36
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	24 e2       	ldi	r18, 0x24	; 36
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	f9 01       	movw	r30, r18
 390:	20 81       	ld	r18, Z
 392:	20 62       	ori	r18, 0x20	; 32
 394:	fc 01       	movw	r30, r24
 396:	20 83       	st	Z, r18
	PORTB |= (1 << LED_PINBUT);
 398:	85 e2       	ldi	r24, 0x25	; 37
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	25 e2       	ldi	r18, 0x25	; 37
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	f9 01       	movw	r30, r18
 3a2:	20 81       	ld	r18, Z
 3a4:	20 62       	ori	r18, 0x20	; 32
 3a6:	fc 01       	movw	r30, r24
 3a8:	20 83       	st	Z, r18
	
	DDRD &= ~(1 << BUTTON_PIN);
 3aa:	8a e2       	ldi	r24, 0x2A	; 42
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	2a e2       	ldi	r18, 0x2A	; 42
 3b0:	30 e0       	ldi	r19, 0x00	; 0
 3b2:	f9 01       	movw	r30, r18
 3b4:	20 81       	ld	r18, Z
 3b6:	2b 7f       	andi	r18, 0xFB	; 251
 3b8:	fc 01       	movw	r30, r24
 3ba:	20 83       	st	Z, r18
	PORTD |= (1 << BUTTON_PIN);
 3bc:	8b e2       	ldi	r24, 0x2B	; 43
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	2b e2       	ldi	r18, 0x2B	; 43
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	f9 01       	movw	r30, r18
 3c6:	20 81       	ld	r18, Z
 3c8:	24 60       	ori	r18, 0x04	; 4
 3ca:	fc 01       	movw	r30, r24
 3cc:	20 83       	st	Z, r18

	EICRA = (1 << ISC01) | (1 << ISC00);  
 3ce:	89 e6       	ldi	r24, 0x69	; 105
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	23 e0       	ldi	r18, 0x03	; 3
 3d4:	fc 01       	movw	r30, r24
 3d6:	20 83       	st	Z, r18
	EIMSK = (1 << INT0);
 3d8:	8d e3       	ldi	r24, 0x3D	; 61
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	21 e0       	ldi	r18, 0x01	; 1
 3de:	fc 01       	movw	r30, r24
 3e0:	20 83       	st	Z, r18
	

	sei();  
 3e2:	78 94       	sei

	while (1) {
		processInterrupts();
 3e4:	0e 94 83 01 	call	0x306	; 0x306 <processInterrupts>
	}
 3e8:	fd cf       	rjmp	.-6      	; 0x3e4 <main+0x6e>

000003ea <RS232Init>:
		binaryStr[i] = (value & (1 << (7 - i))) ? '1' : '0';
	}
	binaryStr[8] = '\0';
	UART_PrintString(binaryStr);
	UART_PrintString("\n");
}
 3ea:	cf 93       	push	r28
 3ec:	df 93       	push	r29
 3ee:	00 d0       	rcall	.+0      	; 0x3f0 <RS232Init+0x6>
 3f0:	cd b7       	in	r28, 0x3d	; 61
 3f2:	de b7       	in	r29, 0x3e	; 62
 3f4:	87 e6       	ldi	r24, 0x67	; 103
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	9a 83       	std	Y+2, r25	; 0x02
 3fa:	89 83       	std	Y+1, r24	; 0x01
 3fc:	8c ec       	ldi	r24, 0xCC	; 204
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	29 81       	ldd	r18, Y+1	; 0x01
 402:	fc 01       	movw	r30, r24
 404:	20 83       	st	Z, r18
 406:	8d ec       	ldi	r24, 0xCD	; 205
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	29 81       	ldd	r18, Y+1	; 0x01
 40c:	3a 81       	ldd	r19, Y+2	; 0x02
 40e:	23 2f       	mov	r18, r19
 410:	33 27       	eor	r19, r19
 412:	fc 01       	movw	r30, r24
 414:	20 83       	st	Z, r18
 416:	88 ec       	ldi	r24, 0xC8	; 200
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	fc 01       	movw	r30, r24
 41c:	10 82       	st	Z, r1
 41e:	89 ec       	ldi	r24, 0xC9	; 201
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	28 e1       	ldi	r18, 0x18	; 24
 424:	fc 01       	movw	r30, r24
 426:	20 83       	st	Z, r18
 428:	8a ec       	ldi	r24, 0xCA	; 202
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	26 e0       	ldi	r18, 0x06	; 6
 42e:	fc 01       	movw	r30, r24
 430:	20 83       	st	Z, r18
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	91 e0       	ldi	r25, 0x01	; 1
 436:	90 93 a2 01 	sts	0x01A2, r25	; 0x8001a2 <__iob+0x3>
 43a:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <__iob+0x2>
 43e:	8e e0       	ldi	r24, 0x0E	; 14
 440:	91 e0       	ldi	r25, 0x01	; 1
 442:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <__iob+0x1>
 446:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <__iob>
 44a:	00 00       	nop
 44c:	0f 90       	pop	r0
 44e:	0f 90       	pop	r0
 450:	df 91       	pop	r29
 452:	cf 91       	pop	r28
 454:	08 95       	ret

00000456 <uart_getch>:
 456:	cf 93       	push	r28
 458:	df 93       	push	r29
 45a:	00 d0       	rcall	.+0      	; 0x45c <uart_getch+0x6>
 45c:	cd b7       	in	r28, 0x3d	; 61
 45e:	de b7       	in	r29, 0x3e	; 62
 460:	9a 83       	std	Y+2, r25	; 0x02
 462:	89 83       	std	Y+1, r24	; 0x01
 464:	00 00       	nop
 466:	88 ec       	ldi	r24, 0xC8	; 200
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	fc 01       	movw	r30, r24
 46c:	80 81       	ld	r24, Z
 46e:	88 23       	and	r24, r24
 470:	d4 f7       	brge	.-12     	; 0x466 <uart_getch+0x10>
 472:	8e ec       	ldi	r24, 0xCE	; 206
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	fc 01       	movw	r30, r24
 478:	80 81       	ld	r24, Z
 47a:	88 2f       	mov	r24, r24
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	0f 90       	pop	r0
 480:	0f 90       	pop	r0
 482:	df 91       	pop	r29
 484:	cf 91       	pop	r28
 486:	08 95       	ret

00000488 <uart_putch>:
 488:	cf 93       	push	r28
 48a:	df 93       	push	r29
 48c:	00 d0       	rcall	.+0      	; 0x48e <uart_putch+0x6>
 48e:	1f 92       	push	r1
 490:	cd b7       	in	r28, 0x3d	; 61
 492:	de b7       	in	r29, 0x3e	; 62
 494:	89 83       	std	Y+1, r24	; 0x01
 496:	7b 83       	std	Y+3, r23	; 0x03
 498:	6a 83       	std	Y+2, r22	; 0x02
 49a:	00 00       	nop
 49c:	88 ec       	ldi	r24, 0xC8	; 200
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	fc 01       	movw	r30, r24
 4a2:	80 81       	ld	r24, Z
 4a4:	88 2f       	mov	r24, r24
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	80 72       	andi	r24, 0x20	; 32
 4aa:	99 27       	eor	r25, r25
 4ac:	89 2b       	or	r24, r25
 4ae:	b1 f3       	breq	.-20     	; 0x49c <uart_putch+0x14>
 4b0:	8e ec       	ldi	r24, 0xCE	; 206
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	29 81       	ldd	r18, Y+1	; 0x01
 4b6:	fc 01       	movw	r30, r24
 4b8:	20 83       	st	Z, r18
 4ba:	80 e0       	ldi	r24, 0x00	; 0
 4bc:	90 e0       	ldi	r25, 0x00	; 0
 4be:	0f 90       	pop	r0
 4c0:	0f 90       	pop	r0
 4c2:	0f 90       	pop	r0
 4c4:	df 91       	pop	r29
 4c6:	cf 91       	pop	r28
 4c8:	08 95       	ret

000004ca <UART_PrintString>:
 4ca:	cf 93       	push	r28
 4cc:	df 93       	push	r29
 4ce:	00 d0       	rcall	.+0      	; 0x4d0 <UART_PrintString+0x6>
 4d0:	cd b7       	in	r28, 0x3d	; 61
 4d2:	de b7       	in	r29, 0x3e	; 62
 4d4:	9a 83       	std	Y+2, r25	; 0x02
 4d6:	89 83       	std	Y+1, r24	; 0x01
 4d8:	0d c0       	rjmp	.+26     	; 0x4f4 <UART_PrintString+0x2a>
 4da:	89 81       	ldd	r24, Y+1	; 0x01
 4dc:	9a 81       	ldd	r25, Y+2	; 0x02
 4de:	9c 01       	movw	r18, r24
 4e0:	2f 5f       	subi	r18, 0xFF	; 255
 4e2:	3f 4f       	sbci	r19, 0xFF	; 255
 4e4:	3a 83       	std	Y+2, r19	; 0x02
 4e6:	29 83       	std	Y+1, r18	; 0x01
 4e8:	fc 01       	movw	r30, r24
 4ea:	80 81       	ld	r24, Z
 4ec:	60 e0       	ldi	r22, 0x00	; 0
 4ee:	70 e0       	ldi	r23, 0x00	; 0
 4f0:	0e 94 44 02 	call	0x488	; 0x488 <uart_putch>
 4f4:	89 81       	ldd	r24, Y+1	; 0x01
 4f6:	9a 81       	ldd	r25, Y+2	; 0x02
 4f8:	fc 01       	movw	r30, r24
 4fa:	80 81       	ld	r24, Z
 4fc:	88 23       	and	r24, r24
 4fe:	69 f7       	brne	.-38     	; 0x4da <UART_PrintString+0x10>
 500:	00 00       	nop
 502:	0f 90       	pop	r0
 504:	0f 90       	pop	r0
 506:	df 91       	pop	r29
 508:	cf 91       	pop	r28
 50a:	08 95       	ret

0000050c <UART_PrintInt>:

void UART_PrintInt(uint8_t value) {
 50c:	cf 93       	push	r28
 50e:	df 93       	push	r29
 510:	cd b7       	in	r28, 0x3d	; 61
 512:	de b7       	in	r29, 0x3e	; 62
 514:	2d 97       	sbiw	r28, 0x0d	; 13
 516:	0f b6       	in	r0, 0x3f	; 63
 518:	f8 94       	cli
 51a:	de bf       	out	0x3e, r29	; 62
 51c:	0f be       	out	0x3f, r0	; 63
 51e:	cd bf       	out	0x3d, r28	; 61
 520:	8d 87       	std	Y+13, r24	; 0x0d
	char buffer[12]; 
	sprintf(buffer, "%d", value);
 522:	8d 85       	ldd	r24, Y+13	; 0x0d
 524:	88 2f       	mov	r24, r24
 526:	90 e0       	ldi	r25, 0x00	; 0
 528:	29 2f       	mov	r18, r25
 52a:	2f 93       	push	r18
 52c:	8f 93       	push	r24
 52e:	81 e9       	ldi	r24, 0x91	; 145
 530:	91 e0       	ldi	r25, 0x01	; 1
 532:	89 2f       	mov	r24, r25
 534:	8f 93       	push	r24
 536:	81 e9       	ldi	r24, 0x91	; 145
 538:	91 e0       	ldi	r25, 0x01	; 1
 53a:	8f 93       	push	r24
 53c:	ce 01       	movw	r24, r28
 53e:	01 96       	adiw	r24, 0x01	; 1
 540:	9f 93       	push	r25
 542:	8f 93       	push	r24
 544:	0e 94 cb 02 	call	0x596	; 0x596 <sprintf>
 548:	0f 90       	pop	r0
 54a:	0f 90       	pop	r0
 54c:	0f 90       	pop	r0
 54e:	0f 90       	pop	r0
 550:	0f 90       	pop	r0
 552:	0f 90       	pop	r0
	UART_PrintString(buffer);
 554:	ce 01       	movw	r24, r28
 556:	01 96       	adiw	r24, 0x01	; 1
 558:	0e 94 65 02 	call	0x4ca	; 0x4ca <UART_PrintString>
	UART_PrintString("\n");
 55c:	8f e8       	ldi	r24, 0x8F	; 143
 55e:	91 e0       	ldi	r25, 0x01	; 1
 560:	0e 94 65 02 	call	0x4ca	; 0x4ca <UART_PrintString>
}
 564:	00 00       	nop
 566:	2d 96       	adiw	r28, 0x0d	; 13
 568:	0f b6       	in	r0, 0x3f	; 63
 56a:	f8 94       	cli
 56c:	de bf       	out	0x3e, r29	; 62
 56e:	0f be       	out	0x3f, r0	; 63
 570:	cd bf       	out	0x3d, r28	; 61
 572:	df 91       	pop	r29
 574:	cf 91       	pop	r28
 576:	08 95       	ret

00000578 <__umulhisi3>:
 578:	a2 9f       	mul	r26, r18
 57a:	b0 01       	movw	r22, r0
 57c:	b3 9f       	mul	r27, r19
 57e:	c0 01       	movw	r24, r0
 580:	a3 9f       	mul	r26, r19
 582:	70 0d       	add	r23, r0
 584:	81 1d       	adc	r24, r1
 586:	11 24       	eor	r1, r1
 588:	91 1d       	adc	r25, r1
 58a:	b2 9f       	mul	r27, r18
 58c:	70 0d       	add	r23, r0
 58e:	81 1d       	adc	r24, r1
 590:	11 24       	eor	r1, r1
 592:	91 1d       	adc	r25, r1
 594:	08 95       	ret

00000596 <sprintf>:
 596:	ae e0       	ldi	r26, 0x0E	; 14
 598:	b0 e0       	ldi	r27, 0x00	; 0
 59a:	e1 ed       	ldi	r30, 0xD1	; 209
 59c:	f2 e0       	ldi	r31, 0x02	; 2
 59e:	0c 94 8c 05 	jmp	0xb18	; 0xb18 <__prologue_saves__+0x1c>
 5a2:	0d 89       	ldd	r16, Y+21	; 0x15
 5a4:	1e 89       	ldd	r17, Y+22	; 0x16
 5a6:	86 e0       	ldi	r24, 0x06	; 6
 5a8:	8c 83       	std	Y+4, r24	; 0x04
 5aa:	1a 83       	std	Y+2, r17	; 0x02
 5ac:	09 83       	std	Y+1, r16	; 0x01
 5ae:	8f ef       	ldi	r24, 0xFF	; 255
 5b0:	9f e7       	ldi	r25, 0x7F	; 127
 5b2:	9e 83       	std	Y+6, r25	; 0x06
 5b4:	8d 83       	std	Y+5, r24	; 0x05
 5b6:	ae 01       	movw	r20, r28
 5b8:	47 5e       	subi	r20, 0xE7	; 231
 5ba:	5f 4f       	sbci	r21, 0xFF	; 255
 5bc:	6f 89       	ldd	r22, Y+23	; 0x17
 5be:	78 8d       	ldd	r23, Y+24	; 0x18
 5c0:	ce 01       	movw	r24, r28
 5c2:	01 96       	adiw	r24, 0x01	; 1
 5c4:	0e 94 ed 02 	call	0x5da	; 0x5da <vfprintf>
 5c8:	ef 81       	ldd	r30, Y+7	; 0x07
 5ca:	f8 85       	ldd	r31, Y+8	; 0x08
 5cc:	e0 0f       	add	r30, r16
 5ce:	f1 1f       	adc	r31, r17
 5d0:	10 82       	st	Z, r1
 5d2:	2e 96       	adiw	r28, 0x0e	; 14
 5d4:	e4 e0       	ldi	r30, 0x04	; 4
 5d6:	0c 94 a8 05 	jmp	0xb50	; 0xb50 <__epilogue_restores__+0x1c>

000005da <vfprintf>:
 5da:	ab e0       	ldi	r26, 0x0B	; 11
 5dc:	b0 e0       	ldi	r27, 0x00	; 0
 5de:	e3 ef       	ldi	r30, 0xF3	; 243
 5e0:	f2 e0       	ldi	r31, 0x02	; 2
 5e2:	0c 94 7e 05 	jmp	0xafc	; 0xafc <__prologue_saves__>
 5e6:	6c 01       	movw	r12, r24
 5e8:	7b 01       	movw	r14, r22
 5ea:	8a 01       	movw	r16, r20
 5ec:	fc 01       	movw	r30, r24
 5ee:	17 82       	std	Z+7, r1	; 0x07
 5f0:	16 82       	std	Z+6, r1	; 0x06
 5f2:	83 81       	ldd	r24, Z+3	; 0x03
 5f4:	81 ff       	sbrs	r24, 1
 5f6:	cc c1       	rjmp	.+920    	; 0x990 <__stack+0x91>
 5f8:	ce 01       	movw	r24, r28
 5fa:	01 96       	adiw	r24, 0x01	; 1
 5fc:	3c 01       	movw	r6, r24
 5fe:	f6 01       	movw	r30, r12
 600:	93 81       	ldd	r25, Z+3	; 0x03
 602:	f7 01       	movw	r30, r14
 604:	93 fd       	sbrc	r25, 3
 606:	85 91       	lpm	r24, Z+
 608:	93 ff       	sbrs	r25, 3
 60a:	81 91       	ld	r24, Z+
 60c:	7f 01       	movw	r14, r30
 60e:	88 23       	and	r24, r24
 610:	09 f4       	brne	.+2      	; 0x614 <vfprintf+0x3a>
 612:	ba c1       	rjmp	.+884    	; 0x988 <__stack+0x89>
 614:	85 32       	cpi	r24, 0x25	; 37
 616:	39 f4       	brne	.+14     	; 0x626 <vfprintf+0x4c>
 618:	93 fd       	sbrc	r25, 3
 61a:	85 91       	lpm	r24, Z+
 61c:	93 ff       	sbrs	r25, 3
 61e:	81 91       	ld	r24, Z+
 620:	7f 01       	movw	r14, r30
 622:	85 32       	cpi	r24, 0x25	; 37
 624:	29 f4       	brne	.+10     	; 0x630 <vfprintf+0x56>
 626:	b6 01       	movw	r22, r12
 628:	90 e0       	ldi	r25, 0x00	; 0
 62a:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <fputc>
 62e:	e7 cf       	rjmp	.-50     	; 0x5fe <vfprintf+0x24>
 630:	91 2c       	mov	r9, r1
 632:	21 2c       	mov	r2, r1
 634:	31 2c       	mov	r3, r1
 636:	ff e1       	ldi	r31, 0x1F	; 31
 638:	f3 15       	cp	r31, r3
 63a:	d8 f0       	brcs	.+54     	; 0x672 <vfprintf+0x98>
 63c:	8b 32       	cpi	r24, 0x2B	; 43
 63e:	79 f0       	breq	.+30     	; 0x65e <vfprintf+0x84>
 640:	38 f4       	brcc	.+14     	; 0x650 <vfprintf+0x76>
 642:	80 32       	cpi	r24, 0x20	; 32
 644:	79 f0       	breq	.+30     	; 0x664 <vfprintf+0x8a>
 646:	83 32       	cpi	r24, 0x23	; 35
 648:	a1 f4       	brne	.+40     	; 0x672 <vfprintf+0x98>
 64a:	23 2d       	mov	r18, r3
 64c:	20 61       	ori	r18, 0x10	; 16
 64e:	1d c0       	rjmp	.+58     	; 0x68a <vfprintf+0xb0>
 650:	8d 32       	cpi	r24, 0x2D	; 45
 652:	61 f0       	breq	.+24     	; 0x66c <vfprintf+0x92>
 654:	80 33       	cpi	r24, 0x30	; 48
 656:	69 f4       	brne	.+26     	; 0x672 <vfprintf+0x98>
 658:	23 2d       	mov	r18, r3
 65a:	21 60       	ori	r18, 0x01	; 1
 65c:	16 c0       	rjmp	.+44     	; 0x68a <vfprintf+0xb0>
 65e:	83 2d       	mov	r24, r3
 660:	82 60       	ori	r24, 0x02	; 2
 662:	38 2e       	mov	r3, r24
 664:	e3 2d       	mov	r30, r3
 666:	e4 60       	ori	r30, 0x04	; 4
 668:	3e 2e       	mov	r3, r30
 66a:	2a c0       	rjmp	.+84     	; 0x6c0 <vfprintf+0xe6>
 66c:	f3 2d       	mov	r31, r3
 66e:	f8 60       	ori	r31, 0x08	; 8
 670:	1d c0       	rjmp	.+58     	; 0x6ac <vfprintf+0xd2>
 672:	37 fc       	sbrc	r3, 7
 674:	2d c0       	rjmp	.+90     	; 0x6d0 <vfprintf+0xf6>
 676:	20 ed       	ldi	r18, 0xD0	; 208
 678:	28 0f       	add	r18, r24
 67a:	2a 30       	cpi	r18, 0x0A	; 10
 67c:	40 f0       	brcs	.+16     	; 0x68e <vfprintf+0xb4>
 67e:	8e 32       	cpi	r24, 0x2E	; 46
 680:	b9 f4       	brne	.+46     	; 0x6b0 <vfprintf+0xd6>
 682:	36 fc       	sbrc	r3, 6
 684:	81 c1       	rjmp	.+770    	; 0x988 <__stack+0x89>
 686:	23 2d       	mov	r18, r3
 688:	20 64       	ori	r18, 0x40	; 64
 68a:	32 2e       	mov	r3, r18
 68c:	19 c0       	rjmp	.+50     	; 0x6c0 <vfprintf+0xe6>
 68e:	36 fe       	sbrs	r3, 6
 690:	06 c0       	rjmp	.+12     	; 0x69e <vfprintf+0xc4>
 692:	8a e0       	ldi	r24, 0x0A	; 10
 694:	98 9e       	mul	r9, r24
 696:	20 0d       	add	r18, r0
 698:	11 24       	eor	r1, r1
 69a:	92 2e       	mov	r9, r18
 69c:	11 c0       	rjmp	.+34     	; 0x6c0 <vfprintf+0xe6>
 69e:	ea e0       	ldi	r30, 0x0A	; 10
 6a0:	2e 9e       	mul	r2, r30
 6a2:	20 0d       	add	r18, r0
 6a4:	11 24       	eor	r1, r1
 6a6:	22 2e       	mov	r2, r18
 6a8:	f3 2d       	mov	r31, r3
 6aa:	f0 62       	ori	r31, 0x20	; 32
 6ac:	3f 2e       	mov	r3, r31
 6ae:	08 c0       	rjmp	.+16     	; 0x6c0 <vfprintf+0xe6>
 6b0:	8c 36       	cpi	r24, 0x6C	; 108
 6b2:	21 f4       	brne	.+8      	; 0x6bc <vfprintf+0xe2>
 6b4:	83 2d       	mov	r24, r3
 6b6:	80 68       	ori	r24, 0x80	; 128
 6b8:	38 2e       	mov	r3, r24
 6ba:	02 c0       	rjmp	.+4      	; 0x6c0 <vfprintf+0xe6>
 6bc:	88 36       	cpi	r24, 0x68	; 104
 6be:	41 f4       	brne	.+16     	; 0x6d0 <vfprintf+0xf6>
 6c0:	f7 01       	movw	r30, r14
 6c2:	93 fd       	sbrc	r25, 3
 6c4:	85 91       	lpm	r24, Z+
 6c6:	93 ff       	sbrs	r25, 3
 6c8:	81 91       	ld	r24, Z+
 6ca:	7f 01       	movw	r14, r30
 6cc:	81 11       	cpse	r24, r1
 6ce:	b3 cf       	rjmp	.-154    	; 0x636 <vfprintf+0x5c>
 6d0:	98 2f       	mov	r25, r24
 6d2:	9f 7d       	andi	r25, 0xDF	; 223
 6d4:	95 54       	subi	r25, 0x45	; 69
 6d6:	93 30       	cpi	r25, 0x03	; 3
 6d8:	28 f4       	brcc	.+10     	; 0x6e4 <vfprintf+0x10a>
 6da:	0c 5f       	subi	r16, 0xFC	; 252
 6dc:	1f 4f       	sbci	r17, 0xFF	; 255
 6de:	9f e3       	ldi	r25, 0x3F	; 63
 6e0:	99 83       	std	Y+1, r25	; 0x01
 6e2:	0d c0       	rjmp	.+26     	; 0x6fe <vfprintf+0x124>
 6e4:	83 36       	cpi	r24, 0x63	; 99
 6e6:	31 f0       	breq	.+12     	; 0x6f4 <vfprintf+0x11a>
 6e8:	83 37       	cpi	r24, 0x73	; 115
 6ea:	71 f0       	breq	.+28     	; 0x708 <vfprintf+0x12e>
 6ec:	83 35       	cpi	r24, 0x53	; 83
 6ee:	09 f0       	breq	.+2      	; 0x6f2 <vfprintf+0x118>
 6f0:	59 c0       	rjmp	.+178    	; 0x7a4 <vfprintf+0x1ca>
 6f2:	21 c0       	rjmp	.+66     	; 0x736 <vfprintf+0x15c>
 6f4:	f8 01       	movw	r30, r16
 6f6:	80 81       	ld	r24, Z
 6f8:	89 83       	std	Y+1, r24	; 0x01
 6fa:	0e 5f       	subi	r16, 0xFE	; 254
 6fc:	1f 4f       	sbci	r17, 0xFF	; 255
 6fe:	88 24       	eor	r8, r8
 700:	83 94       	inc	r8
 702:	91 2c       	mov	r9, r1
 704:	53 01       	movw	r10, r6
 706:	13 c0       	rjmp	.+38     	; 0x72e <vfprintf+0x154>
 708:	28 01       	movw	r4, r16
 70a:	f2 e0       	ldi	r31, 0x02	; 2
 70c:	4f 0e       	add	r4, r31
 70e:	51 1c       	adc	r5, r1
 710:	f8 01       	movw	r30, r16
 712:	a0 80       	ld	r10, Z
 714:	b1 80       	ldd	r11, Z+1	; 0x01
 716:	36 fe       	sbrs	r3, 6
 718:	03 c0       	rjmp	.+6      	; 0x720 <vfprintf+0x146>
 71a:	69 2d       	mov	r22, r9
 71c:	70 e0       	ldi	r23, 0x00	; 0
 71e:	02 c0       	rjmp	.+4      	; 0x724 <vfprintf+0x14a>
 720:	6f ef       	ldi	r22, 0xFF	; 255
 722:	7f ef       	ldi	r23, 0xFF	; 255
 724:	c5 01       	movw	r24, r10
 726:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <strnlen>
 72a:	4c 01       	movw	r8, r24
 72c:	82 01       	movw	r16, r4
 72e:	f3 2d       	mov	r31, r3
 730:	ff 77       	andi	r31, 0x7F	; 127
 732:	3f 2e       	mov	r3, r31
 734:	16 c0       	rjmp	.+44     	; 0x762 <vfprintf+0x188>
 736:	28 01       	movw	r4, r16
 738:	22 e0       	ldi	r18, 0x02	; 2
 73a:	42 0e       	add	r4, r18
 73c:	51 1c       	adc	r5, r1
 73e:	f8 01       	movw	r30, r16
 740:	a0 80       	ld	r10, Z
 742:	b1 80       	ldd	r11, Z+1	; 0x01
 744:	36 fe       	sbrs	r3, 6
 746:	03 c0       	rjmp	.+6      	; 0x74e <vfprintf+0x174>
 748:	69 2d       	mov	r22, r9
 74a:	70 e0       	ldi	r23, 0x00	; 0
 74c:	02 c0       	rjmp	.+4      	; 0x752 <vfprintf+0x178>
 74e:	6f ef       	ldi	r22, 0xFF	; 255
 750:	7f ef       	ldi	r23, 0xFF	; 255
 752:	c5 01       	movw	r24, r10
 754:	0e 94 ce 04 	call	0x99c	; 0x99c <strnlen_P>
 758:	4c 01       	movw	r8, r24
 75a:	f3 2d       	mov	r31, r3
 75c:	f0 68       	ori	r31, 0x80	; 128
 75e:	3f 2e       	mov	r3, r31
 760:	82 01       	movw	r16, r4
 762:	33 fc       	sbrc	r3, 3
 764:	1b c0       	rjmp	.+54     	; 0x79c <vfprintf+0x1c2>
 766:	82 2d       	mov	r24, r2
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	88 16       	cp	r8, r24
 76c:	99 06       	cpc	r9, r25
 76e:	b0 f4       	brcc	.+44     	; 0x79c <vfprintf+0x1c2>
 770:	b6 01       	movw	r22, r12
 772:	80 e2       	ldi	r24, 0x20	; 32
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <fputc>
 77a:	2a 94       	dec	r2
 77c:	f4 cf       	rjmp	.-24     	; 0x766 <vfprintf+0x18c>
 77e:	f5 01       	movw	r30, r10
 780:	37 fc       	sbrc	r3, 7
 782:	85 91       	lpm	r24, Z+
 784:	37 fe       	sbrs	r3, 7
 786:	81 91       	ld	r24, Z+
 788:	5f 01       	movw	r10, r30
 78a:	b6 01       	movw	r22, r12
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <fputc>
 792:	21 10       	cpse	r2, r1
 794:	2a 94       	dec	r2
 796:	21 e0       	ldi	r18, 0x01	; 1
 798:	82 1a       	sub	r8, r18
 79a:	91 08       	sbc	r9, r1
 79c:	81 14       	cp	r8, r1
 79e:	91 04       	cpc	r9, r1
 7a0:	71 f7       	brne	.-36     	; 0x77e <vfprintf+0x1a4>
 7a2:	e8 c0       	rjmp	.+464    	; 0x974 <__stack+0x75>
 7a4:	84 36       	cpi	r24, 0x64	; 100
 7a6:	11 f0       	breq	.+4      	; 0x7ac <vfprintf+0x1d2>
 7a8:	89 36       	cpi	r24, 0x69	; 105
 7aa:	41 f5       	brne	.+80     	; 0x7fc <vfprintf+0x222>
 7ac:	f8 01       	movw	r30, r16
 7ae:	37 fe       	sbrs	r3, 7
 7b0:	07 c0       	rjmp	.+14     	; 0x7c0 <vfprintf+0x1e6>
 7b2:	60 81       	ld	r22, Z
 7b4:	71 81       	ldd	r23, Z+1	; 0x01
 7b6:	82 81       	ldd	r24, Z+2	; 0x02
 7b8:	93 81       	ldd	r25, Z+3	; 0x03
 7ba:	0c 5f       	subi	r16, 0xFC	; 252
 7bc:	1f 4f       	sbci	r17, 0xFF	; 255
 7be:	08 c0       	rjmp	.+16     	; 0x7d0 <vfprintf+0x1f6>
 7c0:	60 81       	ld	r22, Z
 7c2:	71 81       	ldd	r23, Z+1	; 0x01
 7c4:	07 2e       	mov	r0, r23
 7c6:	00 0c       	add	r0, r0
 7c8:	88 0b       	sbc	r24, r24
 7ca:	99 0b       	sbc	r25, r25
 7cc:	0e 5f       	subi	r16, 0xFE	; 254
 7ce:	1f 4f       	sbci	r17, 0xFF	; 255
 7d0:	f3 2d       	mov	r31, r3
 7d2:	ff 76       	andi	r31, 0x6F	; 111
 7d4:	3f 2e       	mov	r3, r31
 7d6:	97 ff       	sbrs	r25, 7
 7d8:	09 c0       	rjmp	.+18     	; 0x7ec <vfprintf+0x212>
 7da:	90 95       	com	r25
 7dc:	80 95       	com	r24
 7de:	70 95       	com	r23
 7e0:	61 95       	neg	r22
 7e2:	7f 4f       	sbci	r23, 0xFF	; 255
 7e4:	8f 4f       	sbci	r24, 0xFF	; 255
 7e6:	9f 4f       	sbci	r25, 0xFF	; 255
 7e8:	f0 68       	ori	r31, 0x80	; 128
 7ea:	3f 2e       	mov	r3, r31
 7ec:	2a e0       	ldi	r18, 0x0A	; 10
 7ee:	30 e0       	ldi	r19, 0x00	; 0
 7f0:	a3 01       	movw	r20, r6
 7f2:	0e 94 20 05 	call	0xa40	; 0xa40 <__ultoa_invert>
 7f6:	88 2e       	mov	r8, r24
 7f8:	86 18       	sub	r8, r6
 7fa:	45 c0       	rjmp	.+138    	; 0x886 <__DATA_REGION_LENGTH__+0x86>
 7fc:	85 37       	cpi	r24, 0x75	; 117
 7fe:	31 f4       	brne	.+12     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 800:	23 2d       	mov	r18, r3
 802:	2f 7e       	andi	r18, 0xEF	; 239
 804:	b2 2e       	mov	r11, r18
 806:	2a e0       	ldi	r18, 0x0A	; 10
 808:	30 e0       	ldi	r19, 0x00	; 0
 80a:	25 c0       	rjmp	.+74     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 80c:	93 2d       	mov	r25, r3
 80e:	99 7f       	andi	r25, 0xF9	; 249
 810:	b9 2e       	mov	r11, r25
 812:	8f 36       	cpi	r24, 0x6F	; 111
 814:	c1 f0       	breq	.+48     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 816:	18 f4       	brcc	.+6      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 818:	88 35       	cpi	r24, 0x58	; 88
 81a:	79 f0       	breq	.+30     	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 81c:	b5 c0       	rjmp	.+362    	; 0x988 <__stack+0x89>
 81e:	80 37       	cpi	r24, 0x70	; 112
 820:	19 f0       	breq	.+6      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 822:	88 37       	cpi	r24, 0x78	; 120
 824:	21 f0       	breq	.+8      	; 0x82e <__DATA_REGION_LENGTH__+0x2e>
 826:	b0 c0       	rjmp	.+352    	; 0x988 <__stack+0x89>
 828:	e9 2f       	mov	r30, r25
 82a:	e0 61       	ori	r30, 0x10	; 16
 82c:	be 2e       	mov	r11, r30
 82e:	b4 fe       	sbrs	r11, 4
 830:	0d c0       	rjmp	.+26     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 832:	fb 2d       	mov	r31, r11
 834:	f4 60       	ori	r31, 0x04	; 4
 836:	bf 2e       	mov	r11, r31
 838:	09 c0       	rjmp	.+18     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 83a:	34 fe       	sbrs	r3, 4
 83c:	0a c0       	rjmp	.+20     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 83e:	29 2f       	mov	r18, r25
 840:	26 60       	ori	r18, 0x06	; 6
 842:	b2 2e       	mov	r11, r18
 844:	06 c0       	rjmp	.+12     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 846:	28 e0       	ldi	r18, 0x08	; 8
 848:	30 e0       	ldi	r19, 0x00	; 0
 84a:	05 c0       	rjmp	.+10     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 84c:	20 e1       	ldi	r18, 0x10	; 16
 84e:	30 e0       	ldi	r19, 0x00	; 0
 850:	02 c0       	rjmp	.+4      	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 852:	20 e1       	ldi	r18, 0x10	; 16
 854:	32 e0       	ldi	r19, 0x02	; 2
 856:	f8 01       	movw	r30, r16
 858:	b7 fe       	sbrs	r11, 7
 85a:	07 c0       	rjmp	.+14     	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
 85c:	60 81       	ld	r22, Z
 85e:	71 81       	ldd	r23, Z+1	; 0x01
 860:	82 81       	ldd	r24, Z+2	; 0x02
 862:	93 81       	ldd	r25, Z+3	; 0x03
 864:	0c 5f       	subi	r16, 0xFC	; 252
 866:	1f 4f       	sbci	r17, 0xFF	; 255
 868:	06 c0       	rjmp	.+12     	; 0x876 <__DATA_REGION_LENGTH__+0x76>
 86a:	60 81       	ld	r22, Z
 86c:	71 81       	ldd	r23, Z+1	; 0x01
 86e:	80 e0       	ldi	r24, 0x00	; 0
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	0e 5f       	subi	r16, 0xFE	; 254
 874:	1f 4f       	sbci	r17, 0xFF	; 255
 876:	a3 01       	movw	r20, r6
 878:	0e 94 20 05 	call	0xa40	; 0xa40 <__ultoa_invert>
 87c:	88 2e       	mov	r8, r24
 87e:	86 18       	sub	r8, r6
 880:	fb 2d       	mov	r31, r11
 882:	ff 77       	andi	r31, 0x7F	; 127
 884:	3f 2e       	mov	r3, r31
 886:	36 fe       	sbrs	r3, 6
 888:	0d c0       	rjmp	.+26     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 88a:	23 2d       	mov	r18, r3
 88c:	2e 7f       	andi	r18, 0xFE	; 254
 88e:	a2 2e       	mov	r10, r18
 890:	89 14       	cp	r8, r9
 892:	58 f4       	brcc	.+22     	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
 894:	34 fe       	sbrs	r3, 4
 896:	0b c0       	rjmp	.+22     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 898:	32 fc       	sbrc	r3, 2
 89a:	09 c0       	rjmp	.+18     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 89c:	83 2d       	mov	r24, r3
 89e:	8e 7e       	andi	r24, 0xEE	; 238
 8a0:	a8 2e       	mov	r10, r24
 8a2:	05 c0       	rjmp	.+10     	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 8a4:	b8 2c       	mov	r11, r8
 8a6:	a3 2c       	mov	r10, r3
 8a8:	03 c0       	rjmp	.+6      	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 8aa:	b8 2c       	mov	r11, r8
 8ac:	01 c0       	rjmp	.+2      	; 0x8b0 <__DATA_REGION_LENGTH__+0xb0>
 8ae:	b9 2c       	mov	r11, r9
 8b0:	a4 fe       	sbrs	r10, 4
 8b2:	0f c0       	rjmp	.+30     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8b4:	fe 01       	movw	r30, r28
 8b6:	e8 0d       	add	r30, r8
 8b8:	f1 1d       	adc	r31, r1
 8ba:	80 81       	ld	r24, Z
 8bc:	80 33       	cpi	r24, 0x30	; 48
 8be:	21 f4       	brne	.+8      	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 8c0:	9a 2d       	mov	r25, r10
 8c2:	99 7e       	andi	r25, 0xE9	; 233
 8c4:	a9 2e       	mov	r10, r25
 8c6:	09 c0       	rjmp	.+18     	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8c8:	a2 fe       	sbrs	r10, 2
 8ca:	06 c0       	rjmp	.+12     	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
 8cc:	b3 94       	inc	r11
 8ce:	b3 94       	inc	r11
 8d0:	04 c0       	rjmp	.+8      	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8d2:	8a 2d       	mov	r24, r10
 8d4:	86 78       	andi	r24, 0x86	; 134
 8d6:	09 f0       	breq	.+2      	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8d8:	b3 94       	inc	r11
 8da:	a3 fc       	sbrc	r10, 3
 8dc:	11 c0       	rjmp	.+34     	; 0x900 <__stack+0x1>
 8de:	a0 fe       	sbrs	r10, 0
 8e0:	06 c0       	rjmp	.+12     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8e2:	b2 14       	cp	r11, r2
 8e4:	88 f4       	brcc	.+34     	; 0x908 <__stack+0x9>
 8e6:	28 0c       	add	r2, r8
 8e8:	92 2c       	mov	r9, r2
 8ea:	9b 18       	sub	r9, r11
 8ec:	0e c0       	rjmp	.+28     	; 0x90a <__stack+0xb>
 8ee:	b2 14       	cp	r11, r2
 8f0:	60 f4       	brcc	.+24     	; 0x90a <__stack+0xb>
 8f2:	b6 01       	movw	r22, r12
 8f4:	80 e2       	ldi	r24, 0x20	; 32
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <fputc>
 8fc:	b3 94       	inc	r11
 8fe:	f7 cf       	rjmp	.-18     	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 900:	b2 14       	cp	r11, r2
 902:	18 f4       	brcc	.+6      	; 0x90a <__stack+0xb>
 904:	2b 18       	sub	r2, r11
 906:	02 c0       	rjmp	.+4      	; 0x90c <__stack+0xd>
 908:	98 2c       	mov	r9, r8
 90a:	21 2c       	mov	r2, r1
 90c:	a4 fe       	sbrs	r10, 4
 90e:	10 c0       	rjmp	.+32     	; 0x930 <__stack+0x31>
 910:	b6 01       	movw	r22, r12
 912:	80 e3       	ldi	r24, 0x30	; 48
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <fputc>
 91a:	a2 fe       	sbrs	r10, 2
 91c:	17 c0       	rjmp	.+46     	; 0x94c <__stack+0x4d>
 91e:	a1 fc       	sbrc	r10, 1
 920:	03 c0       	rjmp	.+6      	; 0x928 <__stack+0x29>
 922:	88 e7       	ldi	r24, 0x78	; 120
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	02 c0       	rjmp	.+4      	; 0x92c <__stack+0x2d>
 928:	88 e5       	ldi	r24, 0x58	; 88
 92a:	90 e0       	ldi	r25, 0x00	; 0
 92c:	b6 01       	movw	r22, r12
 92e:	0c c0       	rjmp	.+24     	; 0x948 <__stack+0x49>
 930:	8a 2d       	mov	r24, r10
 932:	86 78       	andi	r24, 0x86	; 134
 934:	59 f0       	breq	.+22     	; 0x94c <__stack+0x4d>
 936:	a1 fe       	sbrs	r10, 1
 938:	02 c0       	rjmp	.+4      	; 0x93e <__stack+0x3f>
 93a:	8b e2       	ldi	r24, 0x2B	; 43
 93c:	01 c0       	rjmp	.+2      	; 0x940 <__stack+0x41>
 93e:	80 e2       	ldi	r24, 0x20	; 32
 940:	a7 fc       	sbrc	r10, 7
 942:	8d e2       	ldi	r24, 0x2D	; 45
 944:	b6 01       	movw	r22, r12
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <fputc>
 94c:	89 14       	cp	r8, r9
 94e:	38 f4       	brcc	.+14     	; 0x95e <__stack+0x5f>
 950:	b6 01       	movw	r22, r12
 952:	80 e3       	ldi	r24, 0x30	; 48
 954:	90 e0       	ldi	r25, 0x00	; 0
 956:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <fputc>
 95a:	9a 94       	dec	r9
 95c:	f7 cf       	rjmp	.-18     	; 0x94c <__stack+0x4d>
 95e:	8a 94       	dec	r8
 960:	f3 01       	movw	r30, r6
 962:	e8 0d       	add	r30, r8
 964:	f1 1d       	adc	r31, r1
 966:	80 81       	ld	r24, Z
 968:	b6 01       	movw	r22, r12
 96a:	90 e0       	ldi	r25, 0x00	; 0
 96c:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <fputc>
 970:	81 10       	cpse	r8, r1
 972:	f5 cf       	rjmp	.-22     	; 0x95e <__stack+0x5f>
 974:	22 20       	and	r2, r2
 976:	09 f4       	brne	.+2      	; 0x97a <__stack+0x7b>
 978:	42 ce       	rjmp	.-892    	; 0x5fe <vfprintf+0x24>
 97a:	b6 01       	movw	r22, r12
 97c:	80 e2       	ldi	r24, 0x20	; 32
 97e:	90 e0       	ldi	r25, 0x00	; 0
 980:	0e 94 e4 04 	call	0x9c8	; 0x9c8 <fputc>
 984:	2a 94       	dec	r2
 986:	f6 cf       	rjmp	.-20     	; 0x974 <__stack+0x75>
 988:	f6 01       	movw	r30, r12
 98a:	86 81       	ldd	r24, Z+6	; 0x06
 98c:	97 81       	ldd	r25, Z+7	; 0x07
 98e:	02 c0       	rjmp	.+4      	; 0x994 <__stack+0x95>
 990:	8f ef       	ldi	r24, 0xFF	; 255
 992:	9f ef       	ldi	r25, 0xFF	; 255
 994:	2b 96       	adiw	r28, 0x0b	; 11
 996:	e2 e1       	ldi	r30, 0x12	; 18
 998:	0c 94 9a 05 	jmp	0xb34	; 0xb34 <__epilogue_restores__>

0000099c <strnlen_P>:
 99c:	fc 01       	movw	r30, r24
 99e:	05 90       	lpm	r0, Z+
 9a0:	61 50       	subi	r22, 0x01	; 1
 9a2:	70 40       	sbci	r23, 0x00	; 0
 9a4:	01 10       	cpse	r0, r1
 9a6:	d8 f7       	brcc	.-10     	; 0x99e <strnlen_P+0x2>
 9a8:	80 95       	com	r24
 9aa:	90 95       	com	r25
 9ac:	8e 0f       	add	r24, r30
 9ae:	9f 1f       	adc	r25, r31
 9b0:	08 95       	ret

000009b2 <strnlen>:
 9b2:	fc 01       	movw	r30, r24
 9b4:	61 50       	subi	r22, 0x01	; 1
 9b6:	70 40       	sbci	r23, 0x00	; 0
 9b8:	01 90       	ld	r0, Z+
 9ba:	01 10       	cpse	r0, r1
 9bc:	d8 f7       	brcc	.-10     	; 0x9b4 <strnlen+0x2>
 9be:	80 95       	com	r24
 9c0:	90 95       	com	r25
 9c2:	8e 0f       	add	r24, r30
 9c4:	9f 1f       	adc	r25, r31
 9c6:	08 95       	ret

000009c8 <fputc>:
 9c8:	0f 93       	push	r16
 9ca:	1f 93       	push	r17
 9cc:	cf 93       	push	r28
 9ce:	df 93       	push	r29
 9d0:	fb 01       	movw	r30, r22
 9d2:	23 81       	ldd	r18, Z+3	; 0x03
 9d4:	21 fd       	sbrc	r18, 1
 9d6:	03 c0       	rjmp	.+6      	; 0x9de <fputc+0x16>
 9d8:	8f ef       	ldi	r24, 0xFF	; 255
 9da:	9f ef       	ldi	r25, 0xFF	; 255
 9dc:	2c c0       	rjmp	.+88     	; 0xa36 <fputc+0x6e>
 9de:	22 ff       	sbrs	r18, 2
 9e0:	16 c0       	rjmp	.+44     	; 0xa0e <fputc+0x46>
 9e2:	46 81       	ldd	r20, Z+6	; 0x06
 9e4:	57 81       	ldd	r21, Z+7	; 0x07
 9e6:	24 81       	ldd	r18, Z+4	; 0x04
 9e8:	35 81       	ldd	r19, Z+5	; 0x05
 9ea:	42 17       	cp	r20, r18
 9ec:	53 07       	cpc	r21, r19
 9ee:	44 f4       	brge	.+16     	; 0xa00 <fputc+0x38>
 9f0:	a0 81       	ld	r26, Z
 9f2:	b1 81       	ldd	r27, Z+1	; 0x01
 9f4:	9d 01       	movw	r18, r26
 9f6:	2f 5f       	subi	r18, 0xFF	; 255
 9f8:	3f 4f       	sbci	r19, 0xFF	; 255
 9fa:	31 83       	std	Z+1, r19	; 0x01
 9fc:	20 83       	st	Z, r18
 9fe:	8c 93       	st	X, r24
 a00:	26 81       	ldd	r18, Z+6	; 0x06
 a02:	37 81       	ldd	r19, Z+7	; 0x07
 a04:	2f 5f       	subi	r18, 0xFF	; 255
 a06:	3f 4f       	sbci	r19, 0xFF	; 255
 a08:	37 83       	std	Z+7, r19	; 0x07
 a0a:	26 83       	std	Z+6, r18	; 0x06
 a0c:	14 c0       	rjmp	.+40     	; 0xa36 <fputc+0x6e>
 a0e:	8b 01       	movw	r16, r22
 a10:	ec 01       	movw	r28, r24
 a12:	fb 01       	movw	r30, r22
 a14:	00 84       	ldd	r0, Z+8	; 0x08
 a16:	f1 85       	ldd	r31, Z+9	; 0x09
 a18:	e0 2d       	mov	r30, r0
 a1a:	09 95       	icall
 a1c:	89 2b       	or	r24, r25
 a1e:	e1 f6       	brne	.-72     	; 0x9d8 <fputc+0x10>
 a20:	d8 01       	movw	r26, r16
 a22:	16 96       	adiw	r26, 0x06	; 6
 a24:	8d 91       	ld	r24, X+
 a26:	9c 91       	ld	r25, X
 a28:	17 97       	sbiw	r26, 0x07	; 7
 a2a:	01 96       	adiw	r24, 0x01	; 1
 a2c:	17 96       	adiw	r26, 0x07	; 7
 a2e:	9c 93       	st	X, r25
 a30:	8e 93       	st	-X, r24
 a32:	16 97       	sbiw	r26, 0x06	; 6
 a34:	ce 01       	movw	r24, r28
 a36:	df 91       	pop	r29
 a38:	cf 91       	pop	r28
 a3a:	1f 91       	pop	r17
 a3c:	0f 91       	pop	r16
 a3e:	08 95       	ret

00000a40 <__ultoa_invert>:
 a40:	fa 01       	movw	r30, r20
 a42:	aa 27       	eor	r26, r26
 a44:	28 30       	cpi	r18, 0x08	; 8
 a46:	51 f1       	breq	.+84     	; 0xa9c <__ultoa_invert+0x5c>
 a48:	20 31       	cpi	r18, 0x10	; 16
 a4a:	81 f1       	breq	.+96     	; 0xaac <__ultoa_invert+0x6c>
 a4c:	e8 94       	clt
 a4e:	6f 93       	push	r22
 a50:	6e 7f       	andi	r22, 0xFE	; 254
 a52:	6e 5f       	subi	r22, 0xFE	; 254
 a54:	7f 4f       	sbci	r23, 0xFF	; 255
 a56:	8f 4f       	sbci	r24, 0xFF	; 255
 a58:	9f 4f       	sbci	r25, 0xFF	; 255
 a5a:	af 4f       	sbci	r26, 0xFF	; 255
 a5c:	b1 e0       	ldi	r27, 0x01	; 1
 a5e:	3e d0       	rcall	.+124    	; 0xadc <__ultoa_invert+0x9c>
 a60:	b4 e0       	ldi	r27, 0x04	; 4
 a62:	3c d0       	rcall	.+120    	; 0xadc <__ultoa_invert+0x9c>
 a64:	67 0f       	add	r22, r23
 a66:	78 1f       	adc	r23, r24
 a68:	89 1f       	adc	r24, r25
 a6a:	9a 1f       	adc	r25, r26
 a6c:	a1 1d       	adc	r26, r1
 a6e:	68 0f       	add	r22, r24
 a70:	79 1f       	adc	r23, r25
 a72:	8a 1f       	adc	r24, r26
 a74:	91 1d       	adc	r25, r1
 a76:	a1 1d       	adc	r26, r1
 a78:	6a 0f       	add	r22, r26
 a7a:	71 1d       	adc	r23, r1
 a7c:	81 1d       	adc	r24, r1
 a7e:	91 1d       	adc	r25, r1
 a80:	a1 1d       	adc	r26, r1
 a82:	20 d0       	rcall	.+64     	; 0xac4 <__ultoa_invert+0x84>
 a84:	09 f4       	brne	.+2      	; 0xa88 <__ultoa_invert+0x48>
 a86:	68 94       	set
 a88:	3f 91       	pop	r19
 a8a:	2a e0       	ldi	r18, 0x0A	; 10
 a8c:	26 9f       	mul	r18, r22
 a8e:	11 24       	eor	r1, r1
 a90:	30 19       	sub	r19, r0
 a92:	30 5d       	subi	r19, 0xD0	; 208
 a94:	31 93       	st	Z+, r19
 a96:	de f6       	brtc	.-74     	; 0xa4e <__ultoa_invert+0xe>
 a98:	cf 01       	movw	r24, r30
 a9a:	08 95       	ret
 a9c:	46 2f       	mov	r20, r22
 a9e:	47 70       	andi	r20, 0x07	; 7
 aa0:	40 5d       	subi	r20, 0xD0	; 208
 aa2:	41 93       	st	Z+, r20
 aa4:	b3 e0       	ldi	r27, 0x03	; 3
 aa6:	0f d0       	rcall	.+30     	; 0xac6 <__ultoa_invert+0x86>
 aa8:	c9 f7       	brne	.-14     	; 0xa9c <__ultoa_invert+0x5c>
 aaa:	f6 cf       	rjmp	.-20     	; 0xa98 <__ultoa_invert+0x58>
 aac:	46 2f       	mov	r20, r22
 aae:	4f 70       	andi	r20, 0x0F	; 15
 ab0:	40 5d       	subi	r20, 0xD0	; 208
 ab2:	4a 33       	cpi	r20, 0x3A	; 58
 ab4:	18 f0       	brcs	.+6      	; 0xabc <__ultoa_invert+0x7c>
 ab6:	49 5d       	subi	r20, 0xD9	; 217
 ab8:	31 fd       	sbrc	r19, 1
 aba:	40 52       	subi	r20, 0x20	; 32
 abc:	41 93       	st	Z+, r20
 abe:	02 d0       	rcall	.+4      	; 0xac4 <__ultoa_invert+0x84>
 ac0:	a9 f7       	brne	.-22     	; 0xaac <__ultoa_invert+0x6c>
 ac2:	ea cf       	rjmp	.-44     	; 0xa98 <__ultoa_invert+0x58>
 ac4:	b4 e0       	ldi	r27, 0x04	; 4
 ac6:	a6 95       	lsr	r26
 ac8:	97 95       	ror	r25
 aca:	87 95       	ror	r24
 acc:	77 95       	ror	r23
 ace:	67 95       	ror	r22
 ad0:	ba 95       	dec	r27
 ad2:	c9 f7       	brne	.-14     	; 0xac6 <__ultoa_invert+0x86>
 ad4:	00 97       	sbiw	r24, 0x00	; 0
 ad6:	61 05       	cpc	r22, r1
 ad8:	71 05       	cpc	r23, r1
 ada:	08 95       	ret
 adc:	9b 01       	movw	r18, r22
 ade:	ac 01       	movw	r20, r24
 ae0:	0a 2e       	mov	r0, r26
 ae2:	06 94       	lsr	r0
 ae4:	57 95       	ror	r21
 ae6:	47 95       	ror	r20
 ae8:	37 95       	ror	r19
 aea:	27 95       	ror	r18
 aec:	ba 95       	dec	r27
 aee:	c9 f7       	brne	.-14     	; 0xae2 <__ultoa_invert+0xa2>
 af0:	62 0f       	add	r22, r18
 af2:	73 1f       	adc	r23, r19
 af4:	84 1f       	adc	r24, r20
 af6:	95 1f       	adc	r25, r21
 af8:	a0 1d       	adc	r26, r0
 afa:	08 95       	ret

00000afc <__prologue_saves__>:
 afc:	2f 92       	push	r2
 afe:	3f 92       	push	r3
 b00:	4f 92       	push	r4
 b02:	5f 92       	push	r5
 b04:	6f 92       	push	r6
 b06:	7f 92       	push	r7
 b08:	8f 92       	push	r8
 b0a:	9f 92       	push	r9
 b0c:	af 92       	push	r10
 b0e:	bf 92       	push	r11
 b10:	cf 92       	push	r12
 b12:	df 92       	push	r13
 b14:	ef 92       	push	r14
 b16:	ff 92       	push	r15
 b18:	0f 93       	push	r16
 b1a:	1f 93       	push	r17
 b1c:	cf 93       	push	r28
 b1e:	df 93       	push	r29
 b20:	cd b7       	in	r28, 0x3d	; 61
 b22:	de b7       	in	r29, 0x3e	; 62
 b24:	ca 1b       	sub	r28, r26
 b26:	db 0b       	sbc	r29, r27
 b28:	0f b6       	in	r0, 0x3f	; 63
 b2a:	f8 94       	cli
 b2c:	de bf       	out	0x3e, r29	; 62
 b2e:	0f be       	out	0x3f, r0	; 63
 b30:	cd bf       	out	0x3d, r28	; 61
 b32:	09 94       	ijmp

00000b34 <__epilogue_restores__>:
 b34:	2a 88       	ldd	r2, Y+18	; 0x12
 b36:	39 88       	ldd	r3, Y+17	; 0x11
 b38:	48 88       	ldd	r4, Y+16	; 0x10
 b3a:	5f 84       	ldd	r5, Y+15	; 0x0f
 b3c:	6e 84       	ldd	r6, Y+14	; 0x0e
 b3e:	7d 84       	ldd	r7, Y+13	; 0x0d
 b40:	8c 84       	ldd	r8, Y+12	; 0x0c
 b42:	9b 84       	ldd	r9, Y+11	; 0x0b
 b44:	aa 84       	ldd	r10, Y+10	; 0x0a
 b46:	b9 84       	ldd	r11, Y+9	; 0x09
 b48:	c8 84       	ldd	r12, Y+8	; 0x08
 b4a:	df 80       	ldd	r13, Y+7	; 0x07
 b4c:	ee 80       	ldd	r14, Y+6	; 0x06
 b4e:	fd 80       	ldd	r15, Y+5	; 0x05
 b50:	0c 81       	ldd	r16, Y+4	; 0x04
 b52:	1b 81       	ldd	r17, Y+3	; 0x03
 b54:	aa 81       	ldd	r26, Y+2	; 0x02
 b56:	b9 81       	ldd	r27, Y+1	; 0x01
 b58:	ce 0f       	add	r28, r30
 b5a:	d1 1d       	adc	r29, r1
 b5c:	0f b6       	in	r0, 0x3f	; 63
 b5e:	f8 94       	cli
 b60:	de bf       	out	0x3e, r29	; 62
 b62:	0f be       	out	0x3f, r0	; 63
 b64:	cd bf       	out	0x3d, r28	; 61
 b66:	ed 01       	movw	r28, r26
 b68:	08 95       	ret

00000b6a <_exit>:
 b6a:	f8 94       	cli

00000b6c <__stop_program>:
 b6c:	ff cf       	rjmp	.-2      	; 0xb6c <__stop_program>
