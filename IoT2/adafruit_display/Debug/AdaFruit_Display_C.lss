
AdaFruit_Display_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000003c2  00800100  00001c8a  00001d1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c8a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000052  008004c2  008004c2  000020e0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000020e0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000213c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001d0  00000000  00000000  0000217c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d59  00000000  00000000  0000234c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e3a  00000000  00000000  000040a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000185d  00000000  00000000  00004edf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006a0  00000000  00000000  0000673c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b6b  00000000  00000000  00006ddc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e16  00000000  00000000  00007947  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  0000875d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5f c1       	rjmp	.+702    	; 0x2c0 <__ctors_end>
       2:	00 00       	nop
       4:	7a c1       	rjmp	.+756    	; 0x2fa <__bad_interrupt>
       6:	00 00       	nop
       8:	78 c1       	rjmp	.+752    	; 0x2fa <__bad_interrupt>
       a:	00 00       	nop
       c:	76 c1       	rjmp	.+748    	; 0x2fa <__bad_interrupt>
       e:	00 00       	nop
      10:	74 c1       	rjmp	.+744    	; 0x2fa <__bad_interrupt>
      12:	00 00       	nop
      14:	72 c1       	rjmp	.+740    	; 0x2fa <__bad_interrupt>
      16:	00 00       	nop
      18:	70 c1       	rjmp	.+736    	; 0x2fa <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6e c1       	rjmp	.+732    	; 0x2fa <__bad_interrupt>
      1e:	00 00       	nop
      20:	6c c1       	rjmp	.+728    	; 0x2fa <__bad_interrupt>
      22:	00 00       	nop
      24:	6a c1       	rjmp	.+724    	; 0x2fa <__bad_interrupt>
      26:	00 00       	nop
      28:	68 c1       	rjmp	.+720    	; 0x2fa <__bad_interrupt>
      2a:	00 00       	nop
      2c:	66 c1       	rjmp	.+716    	; 0x2fa <__bad_interrupt>
      2e:	00 00       	nop
      30:	64 c1       	rjmp	.+712    	; 0x2fa <__bad_interrupt>
      32:	00 00       	nop
      34:	62 c1       	rjmp	.+708    	; 0x2fa <__bad_interrupt>
      36:	00 00       	nop
      38:	60 c1       	rjmp	.+704    	; 0x2fa <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5e c1       	rjmp	.+700    	; 0x2fa <__bad_interrupt>
      3e:	00 00       	nop
      40:	5c c1       	rjmp	.+696    	; 0x2fa <__bad_interrupt>
      42:	00 00       	nop
      44:	5a c1       	rjmp	.+692    	; 0x2fa <__bad_interrupt>
      46:	00 00       	nop
      48:	58 c1       	rjmp	.+688    	; 0x2fa <__bad_interrupt>
      4a:	00 00       	nop
      4c:	56 c1       	rjmp	.+684    	; 0x2fa <__bad_interrupt>
      4e:	00 00       	nop
      50:	54 c1       	rjmp	.+680    	; 0x2fa <__bad_interrupt>
      52:	00 00       	nop
      54:	52 c1       	rjmp	.+676    	; 0x2fa <__bad_interrupt>
      56:	00 00       	nop
      58:	50 c1       	rjmp	.+672    	; 0x2fa <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4e c1       	rjmp	.+668    	; 0x2fa <__bad_interrupt>
      5e:	00 00       	nop
      60:	4c c1       	rjmp	.+664    	; 0x2fa <__bad_interrupt>
      62:	00 00       	nop
      64:	4a c1       	rjmp	.+660    	; 0x2fa <__bad_interrupt>
      66:	00 00       	nop
      68:	48 c1       	rjmp	.+656    	; 0x2fa <__bad_interrupt>
      6a:	00 00       	nop
      6c:	46 c1       	rjmp	.+652    	; 0x2fa <__bad_interrupt>
      6e:	00 00       	nop
      70:	0c 94 8b 08 	jmp	0x1116	; 0x1116 <__vector_28>
      74:	42 c1       	rjmp	.+644    	; 0x2fa <__bad_interrupt>
      76:	00 00       	nop
      78:	40 c1       	rjmp	.+640    	; 0x2fa <__bad_interrupt>
      7a:	00 00       	nop
      7c:	3e c1       	rjmp	.+636    	; 0x2fa <__bad_interrupt>
      7e:	00 00       	nop
      80:	3c c1       	rjmp	.+632    	; 0x2fa <__bad_interrupt>
      82:	00 00       	nop
      84:	3a c1       	rjmp	.+628    	; 0x2fa <__bad_interrupt>
      86:	00 00       	nop
      88:	38 c1       	rjmp	.+624    	; 0x2fa <__bad_interrupt>
      8a:	00 00       	nop
      8c:	36 c1       	rjmp	.+620    	; 0x2fa <__bad_interrupt>
      8e:	00 00       	nop
      90:	34 c1       	rjmp	.+616    	; 0x2fa <__bad_interrupt>
      92:	00 00       	nop
      94:	32 c1       	rjmp	.+612    	; 0x2fa <__bad_interrupt>
      96:	00 00       	nop
      98:	30 c1       	rjmp	.+608    	; 0x2fa <__bad_interrupt>
      9a:	00 00       	nop
      9c:	2e c1       	rjmp	.+604    	; 0x2fa <__bad_interrupt>
      9e:	00 00       	nop
      a0:	2c c1       	rjmp	.+600    	; 0x2fa <__bad_interrupt>
      a2:	00 00       	nop
      a4:	2a c1       	rjmp	.+596    	; 0x2fa <__bad_interrupt>
      a6:	00 00       	nop
      a8:	28 c1       	rjmp	.+592    	; 0x2fa <__bad_interrupt>
      aa:	00 00       	nop
      ac:	26 c1       	rjmp	.+588    	; 0x2fa <__bad_interrupt>
      ae:	00 00       	nop
      b0:	24 c1       	rjmp	.+584    	; 0x2fa <__bad_interrupt>
	...

000000b4 <__trampolines_end>:
      b4:	00 00       	nop
      b6:	00 00       	nop
      b8:	00 81       	ld	r16, Z
      ba:	81 18       	sub	r8, r1
      bc:	81 81       	ldd	r24, Z+1	; 0x01
      be:	00 07       	cpc	r16, r16
      c0:	00 07       	cpc	r16, r16
      c2:	00 14       	cp	r0, r0
      c4:	7f 14       	cp	r7, r15
      c6:	7f 14       	cp	r7, r15
      c8:	24 2a       	or	r2, r20
      ca:	7f 2a       	or	r7, r31
      cc:	12 23       	and	r17, r18
      ce:	13 08       	sbc	r1, r3
      d0:	64 62       	ori	r22, 0x24	; 36
      d2:	36 49       	sbci	r19, 0x96	; 150
      d4:	55 22       	and	r5, r21
      d6:	50 00       	.word	0x0050	; ????
      d8:	05 03       	mulsu	r16, r21
      da:	00 00       	nop
      dc:	00 1c       	adc	r0, r0
      de:	22 41       	sbci	r18, 0x12	; 18
      e0:	00 00       	nop
      e2:	41 22       	and	r4, r17
      e4:	1c 00       	.word	0x001c	; ????
      e6:	14 08       	sbc	r1, r4
      e8:	3e 08       	sbc	r3, r14
      ea:	14 08       	sbc	r1, r4
      ec:	08 3e       	cpi	r16, 0xE8	; 232
      ee:	08 08       	sbc	r0, r8
      f0:	00 50       	subi	r16, 0x00	; 0
      f2:	30 00       	.word	0x0030	; ????
      f4:	00 08       	sbc	r0, r0
      f6:	08 08       	sbc	r0, r8
      f8:	08 08       	sbc	r0, r8
      fa:	00 60       	ori	r16, 0x00	; 0
      fc:	60 00       	.word	0x0060	; ????
      fe:	00 20       	and	r0, r0
     100:	10 08       	sbc	r1, r0
     102:	04 02       	muls	r16, r20
     104:	3e 51       	subi	r19, 0x1E	; 30
     106:	49 45       	sbci	r20, 0x59	; 89
     108:	3e 00       	.word	0x003e	; ????
     10a:	42 7f       	andi	r20, 0xF2	; 242
     10c:	40 00       	.word	0x0040	; ????
     10e:	42 61       	ori	r20, 0x12	; 18
     110:	51 49       	sbci	r21, 0x91	; 145
     112:	46 21       	and	r20, r6
     114:	41 45       	sbci	r20, 0x51	; 81
     116:	4b 31       	cpi	r20, 0x1B	; 27
     118:	18 14       	cp	r1, r8
     11a:	12 7f       	andi	r17, 0xF2	; 242
     11c:	10 27       	eor	r17, r16
     11e:	45 45       	sbci	r20, 0x55	; 85
     120:	45 39       	cpi	r20, 0x95	; 149
     122:	3c 4a       	sbci	r19, 0xAC	; 172
     124:	49 49       	sbci	r20, 0x99	; 153
     126:	30 01       	movw	r6, r0
     128:	71 09       	sbc	r23, r1
     12a:	05 03       	mulsu	r16, r21
     12c:	36 49       	sbci	r19, 0x96	; 150
     12e:	49 49       	sbci	r20, 0x99	; 153
     130:	36 06       	cpc	r3, r22
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	29 1e       	adc	r2, r25
     136:	00 36       	cpi	r16, 0x60	; 96
     138:	36 00       	.word	0x0036	; ????
     13a:	00 00       	nop
     13c:	56 36       	cpi	r21, 0x66	; 102
     13e:	00 00       	nop
     140:	08 14       	cp	r0, r8
     142:	22 41       	sbci	r18, 0x12	; 18
     144:	00 14       	cp	r0, r0
     146:	14 14       	cp	r1, r4
     148:	14 14       	cp	r1, r4
     14a:	00 41       	sbci	r16, 0x10	; 16
     14c:	22 14       	cp	r2, r2
     14e:	08 02       	muls	r16, r24
     150:	01 51       	subi	r16, 0x11	; 17
     152:	09 06       	cpc	r0, r25
     154:	32 49       	sbci	r19, 0x92	; 146
     156:	79 41       	sbci	r23, 0x19	; 25
     158:	3e 7e       	andi	r19, 0xEE	; 238
     15a:	11 11       	cpse	r17, r1
     15c:	11 7e       	andi	r17, 0xE1	; 225
     15e:	7f 49       	sbci	r23, 0x9F	; 159
     160:	49 49       	sbci	r20, 0x99	; 153
     162:	36 3e       	cpi	r19, 0xE6	; 230
     164:	41 41       	sbci	r20, 0x11	; 17
     166:	41 22       	and	r4, r17
     168:	7f 41       	sbci	r23, 0x1F	; 31
     16a:	41 22       	and	r4, r17
     16c:	1c 7f       	andi	r17, 0xFC	; 252
     16e:	49 49       	sbci	r20, 0x99	; 153
     170:	49 41       	sbci	r20, 0x19	; 25
     172:	7f 09       	sbc	r23, r15
     174:	09 09       	sbc	r16, r9
     176:	01 3e       	cpi	r16, 0xE1	; 225
     178:	41 49       	sbci	r20, 0x91	; 145
     17a:	49 7a       	andi	r20, 0xA9	; 169
     17c:	7f 08       	sbc	r7, r15
     17e:	08 08       	sbc	r0, r8
     180:	7f 00       	.word	0x007f	; ????
     182:	41 7f       	andi	r20, 0xF1	; 241
     184:	41 00       	.word	0x0041	; ????
     186:	20 40       	sbci	r18, 0x00	; 0
     188:	41 3f       	cpi	r20, 0xF1	; 241
     18a:	01 7f       	andi	r16, 0xF1	; 241
     18c:	08 14       	cp	r0, r8
     18e:	22 41       	sbci	r18, 0x12	; 18
     190:	7f 40       	sbci	r23, 0x0F	; 15
     192:	40 40       	sbci	r20, 0x00	; 0
     194:	40 7f       	andi	r20, 0xF0	; 240
     196:	02 0c       	add	r0, r2
     198:	02 7f       	andi	r16, 0xF2	; 242
     19a:	7f 04       	cpc	r7, r15
     19c:	08 10       	cpse	r0, r8
     19e:	7f 3e       	cpi	r23, 0xEF	; 239
     1a0:	41 41       	sbci	r20, 0x11	; 17
     1a2:	41 3e       	cpi	r20, 0xE1	; 225
     1a4:	7f 09       	sbc	r23, r15
     1a6:	09 09       	sbc	r16, r9
     1a8:	06 3e       	cpi	r16, 0xE6	; 230
     1aa:	41 51       	subi	r20, 0x11	; 17
     1ac:	21 5e       	subi	r18, 0xE1	; 225
     1ae:	7f 09       	sbc	r23, r15
     1b0:	19 29       	or	r17, r9
     1b2:	46 46       	sbci	r20, 0x66	; 102
     1b4:	49 49       	sbci	r20, 0x99	; 153
     1b6:	49 31       	cpi	r20, 0x19	; 25
     1b8:	01 01       	movw	r0, r2
     1ba:	7f 01       	movw	r14, r30
     1bc:	01 3f       	cpi	r16, 0xF1	; 241
     1be:	40 40       	sbci	r20, 0x00	; 0
     1c0:	40 3f       	cpi	r20, 0xF0	; 240
     1c2:	1f 20       	and	r1, r15
     1c4:	40 20       	and	r4, r0
     1c6:	1f 3f       	cpi	r17, 0xFF	; 255
     1c8:	40 38       	cpi	r20, 0x80	; 128
     1ca:	40 3f       	cpi	r20, 0xF0	; 240
     1cc:	63 14       	cp	r6, r3
     1ce:	08 14       	cp	r0, r8
     1d0:	63 07       	cpc	r22, r19
     1d2:	08 70       	andi	r16, 0x08	; 8
     1d4:	08 07       	cpc	r16, r24
     1d6:	61 51       	subi	r22, 0x11	; 17
     1d8:	49 45       	sbci	r20, 0x59	; 89
     1da:	43 00       	.word	0x0043	; ????
     1dc:	7f 41       	sbci	r23, 0x1F	; 31
     1de:	41 00       	.word	0x0041	; ????
     1e0:	02 04       	cpc	r0, r2
     1e2:	08 10       	cpse	r0, r8
     1e4:	20 00       	.word	0x0020	; ????
     1e6:	41 41       	sbci	r20, 0x11	; 17
     1e8:	7f 00       	.word	0x007f	; ????
     1ea:	04 02       	muls	r16, r20
     1ec:	01 02       	muls	r16, r17
     1ee:	04 40       	sbci	r16, 0x04	; 4
     1f0:	40 40       	sbci	r20, 0x00	; 0
     1f2:	40 40       	sbci	r20, 0x00	; 0
     1f4:	00 01       	movw	r0, r0
     1f6:	02 04       	cpc	r0, r2
     1f8:	00 20       	and	r0, r0
     1fa:	54 54       	subi	r21, 0x44	; 68
     1fc:	54 78       	andi	r21, 0x84	; 132
     1fe:	7f 48       	sbci	r23, 0x8F	; 143
     200:	44 44       	sbci	r20, 0x44	; 68
     202:	38 38       	cpi	r19, 0x88	; 136
     204:	44 44       	sbci	r20, 0x44	; 68
     206:	44 20       	and	r4, r4
     208:	38 44       	sbci	r19, 0x48	; 72
     20a:	44 48       	sbci	r20, 0x84	; 132
     20c:	7f 38       	cpi	r23, 0x8F	; 143
     20e:	54 54       	subi	r21, 0x44	; 68
     210:	54 18       	sub	r5, r4
     212:	08 7e       	andi	r16, 0xE8	; 232
     214:	09 01       	movw	r0, r18
     216:	02 0c       	add	r0, r2
     218:	52 52       	subi	r21, 0x22	; 34
     21a:	52 3e       	cpi	r21, 0xE2	; 226
     21c:	7f 08       	sbc	r7, r15
     21e:	04 04       	cpc	r0, r4
     220:	78 00       	.word	0x0078	; ????
     222:	44 7d       	andi	r20, 0xD4	; 212
     224:	40 00       	.word	0x0040	; ????
     226:	20 40       	sbci	r18, 0x00	; 0
     228:	44 3d       	cpi	r20, 0xD4	; 212
     22a:	00 7f       	andi	r16, 0xF0	; 240
     22c:	10 28       	or	r1, r0
     22e:	44 00       	.word	0x0044	; ????
     230:	00 41       	sbci	r16, 0x10	; 16
     232:	7f 40       	sbci	r23, 0x0F	; 15
     234:	00 7c       	andi	r16, 0xC0	; 192
     236:	04 18       	sub	r0, r4
     238:	04 78       	andi	r16, 0x84	; 132
     23a:	7c 08       	sbc	r7, r12
     23c:	04 04       	cpc	r0, r4
     23e:	78 38       	cpi	r23, 0x88	; 136
     240:	44 44       	sbci	r20, 0x44	; 68
     242:	44 38       	cpi	r20, 0x84	; 132
     244:	7c 14       	cp	r7, r12
     246:	14 14       	cp	r1, r4
     248:	08 08       	sbc	r0, r8
     24a:	14 14       	cp	r1, r4
     24c:	14 7c       	andi	r17, 0xC4	; 196
     24e:	7c 08       	sbc	r7, r12
     250:	04 04       	cpc	r0, r4
     252:	08 48       	sbci	r16, 0x88	; 136
     254:	54 54       	subi	r21, 0x44	; 68
     256:	54 20       	and	r5, r4
     258:	04 3f       	cpi	r16, 0xF4	; 244
     25a:	44 40       	sbci	r20, 0x04	; 4
     25c:	20 3c       	cpi	r18, 0xC0	; 192
     25e:	40 40       	sbci	r20, 0x00	; 0
     260:	20 7c       	andi	r18, 0xC0	; 192
     262:	1c 20       	and	r1, r12
     264:	40 20       	and	r4, r0
     266:	1c 3c       	cpi	r17, 0xCC	; 204
     268:	40 30       	cpi	r20, 0x00	; 0
     26a:	40 3c       	cpi	r20, 0xC0	; 192
     26c:	44 28       	or	r4, r4
     26e:	10 28       	or	r1, r0
     270:	44 0c       	add	r4, r4
     272:	50 50       	subi	r21, 0x00	; 0
     274:	50 3c       	cpi	r21, 0xC0	; 192
     276:	44 64       	ori	r20, 0x44	; 68
     278:	54 4c       	sbci	r21, 0xC4	; 196
     27a:	44 00       	.word	0x0044	; ????
     27c:	08 36       	cpi	r16, 0x68	; 104
     27e:	41 00       	.word	0x0041	; ????
     280:	00 00       	nop
     282:	7f 00       	.word	0x007f	; ????
     284:	00 00       	nop
     286:	41 36       	cpi	r20, 0x61	; 97
     288:	08 00       	.word	0x0008	; ????
     28a:	10 08       	sbc	r1, r0
     28c:	08 10       	cpse	r0, r8
     28e:	08 00       	.word	0x0008	; ????
     290:	00 00       	nop
	...

00000294 <INIT_SSD1306>:
     294:	11 ae 00 a8 01 3f 20 01 00 40 00 d3 01 00 a1 00     .....? ..@......
     2a4:	c8 00 da 01 12 81 01 7f a4 00 a6 00 d5 01 80 d9     ................
     2b4:	01 c2 db 01 20 8d 01 14 2e 00 af 00                 .... .......

000002c0 <__ctors_end>:
     2c0:	11 24       	eor	r1, r1
     2c2:	1f be       	out	0x3f, r1	; 63
     2c4:	cf ef       	ldi	r28, 0xFF	; 255
     2c6:	d8 e0       	ldi	r29, 0x08	; 8
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	cd bf       	out	0x3d, r28	; 61

000002cc <__do_copy_data>:
     2cc:	14 e0       	ldi	r17, 0x04	; 4
     2ce:	a0 e0       	ldi	r26, 0x00	; 0
     2d0:	b1 e0       	ldi	r27, 0x01	; 1
     2d2:	ea e8       	ldi	r30, 0x8A	; 138
     2d4:	fc e1       	ldi	r31, 0x1C	; 28
     2d6:	02 c0       	rjmp	.+4      	; 0x2dc <__do_copy_data+0x10>
     2d8:	05 90       	lpm	r0, Z+
     2da:	0d 92       	st	X+, r0
     2dc:	a2 3c       	cpi	r26, 0xC2	; 194
     2de:	b1 07       	cpc	r27, r17
     2e0:	d9 f7       	brne	.-10     	; 0x2d8 <__do_copy_data+0xc>

000002e2 <__do_clear_bss>:
     2e2:	25 e0       	ldi	r18, 0x05	; 5
     2e4:	a2 ec       	ldi	r26, 0xC2	; 194
     2e6:	b4 e0       	ldi	r27, 0x04	; 4
     2e8:	01 c0       	rjmp	.+2      	; 0x2ec <.do_clear_bss_start>

000002ea <.do_clear_bss_loop>:
     2ea:	1d 92       	st	X+, r1

000002ec <.do_clear_bss_start>:
     2ec:	a4 31       	cpi	r26, 0x14	; 20
     2ee:	b2 07       	cpc	r27, r18
     2f0:	e1 f7       	brne	.-8      	; 0x2ea <.do_clear_bss_loop>
     2f2:	0e 94 dc 09 	call	0x13b8	; 0x13b8 <main>
     2f6:	0c 94 43 0e 	jmp	0x1c86	; 0x1c86 <_exit>

000002fa <__bad_interrupt>:
     2fa:	82 ce       	rjmp	.-764    	; 0x0 <__vectors>

000002fc <SSD1306_Send_StartAndSLAW>:
		printf("Error sending command 0x%02X, retrying... Attempt %d\n", command, retries);
		// Optionally, add a small delay between retries (e.g., 10ms)
		_delay_ms(10); // Replace with your platform's delay function
	}
	return SSD1306_ERROR;  // Return error if retries exhausted
}
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	00 d0       	rcall	.+0      	; 0x302 <SSD1306_Send_StartAndSLAW+0x6>
     302:	cd b7       	in	r28, 0x3d	; 61
     304:	de b7       	in	r29, 0x3e	; 62
     306:	8a 83       	std	Y+2, r24	; 0x02
     308:	8f ef       	ldi	r24, 0xFF	; 255
     30a:	89 83       	std	Y+1, r24	; 0x01
     30c:	43 d4       	rcall	.+2182   	; 0xb94 <TWI_MT_Start>
     30e:	89 83       	std	Y+1, r24	; 0x01
     310:	89 81       	ldd	r24, Y+1	; 0x01
     312:	88 23       	and	r24, r24
     314:	11 f0       	breq	.+4      	; 0x31a <SSD1306_Send_StartAndSLAW+0x1e>
     316:	89 81       	ldd	r24, Y+1	; 0x01
     318:	09 c0       	rjmp	.+18     	; 0x32c <SSD1306_Send_StartAndSLAW+0x30>
     31a:	8a 81       	ldd	r24, Y+2	; 0x02
     31c:	72 d4       	rcall	.+2276   	; 0xc02 <TWI_MT_Send_SLAW>
     31e:	89 83       	std	Y+1, r24	; 0x01
     320:	89 81       	ldd	r24, Y+1	; 0x01
     322:	88 23       	and	r24, r24
     324:	11 f0       	breq	.+4      	; 0x32a <SSD1306_Send_StartAndSLAW+0x2e>
     326:	89 81       	ldd	r24, Y+1	; 0x01
     328:	01 c0       	rjmp	.+2      	; 0x32c <SSD1306_Send_StartAndSLAW+0x30>
     32a:	80 e0       	ldi	r24, 0x00	; 0
     32c:	0f 90       	pop	r0
     32e:	0f 90       	pop	r0
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	08 95       	ret

00000336 <SSD1306_Send_Command>:
     336:	cf 93       	push	r28
     338:	df 93       	push	r29
     33a:	00 d0       	rcall	.+0      	; 0x33c <SSD1306_Send_Command+0x6>
     33c:	cd b7       	in	r28, 0x3d	; 61
     33e:	de b7       	in	r29, 0x3e	; 62
     340:	8a 83       	std	Y+2, r24	; 0x02
     342:	8f ef       	ldi	r24, 0xFF	; 255
     344:	89 83       	std	Y+1, r24	; 0x01
     346:	80 e8       	ldi	r24, 0x80	; 128
     348:	89 d4       	rcall	.+2322   	; 0xc5c <TWI_MT_Send_Data>
     34a:	89 83       	std	Y+1, r24	; 0x01
     34c:	89 81       	ldd	r24, Y+1	; 0x01
     34e:	88 23       	and	r24, r24
     350:	11 f0       	breq	.+4      	; 0x356 <SSD1306_Send_Command+0x20>
     352:	89 81       	ldd	r24, Y+1	; 0x01
     354:	09 c0       	rjmp	.+18     	; 0x368 <SSD1306_Send_Command+0x32>
     356:	8a 81       	ldd	r24, Y+2	; 0x02
     358:	81 d4       	rcall	.+2306   	; 0xc5c <TWI_MT_Send_Data>
     35a:	89 83       	std	Y+1, r24	; 0x01
     35c:	89 81       	ldd	r24, Y+1	; 0x01
     35e:	88 23       	and	r24, r24
     360:	11 f0       	breq	.+4      	; 0x366 <SSD1306_Send_Command+0x30>
     362:	89 81       	ldd	r24, Y+1	; 0x01
     364:	01 c0       	rjmp	.+2      	; 0x368 <SSD1306_Send_Command+0x32>
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	08 95       	ret

00000372 <SSD1306_Init>:
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	cd b7       	in	r28, 0x3d	; 61
     378:	de b7       	in	r29, 0x3e	; 62
     37a:	a0 97       	sbiw	r28, 0x20	; 32
     37c:	0f b6       	in	r0, 0x3f	; 63
     37e:	f8 94       	cli
     380:	de bf       	out	0x3e, r29	; 62
     382:	0f be       	out	0x3f, r0	; 63
     384:	cd bf       	out	0x3d, r28	; 61
     386:	88 a3       	std	Y+32, r24	; 0x20
     388:	84 e9       	ldi	r24, 0x94	; 148
     38a:	92 e0       	ldi	r25, 0x02	; 2
     38c:	9a 83       	std	Y+2, r25	; 0x02
     38e:	89 83       	std	Y+1, r24	; 0x01
     390:	8f ef       	ldi	r24, 0xFF	; 255
     392:	8d 83       	std	Y+5, r24	; 0x05
     394:	89 81       	ldd	r24, Y+1	; 0x01
     396:	9a 81       	ldd	r25, Y+2	; 0x02
     398:	9c 01       	movw	r18, r24
     39a:	2f 5f       	subi	r18, 0xFF	; 255
     39c:	3f 4f       	sbci	r19, 0xFF	; 255
     39e:	3a 83       	std	Y+2, r19	; 0x02
     3a0:	29 83       	std	Y+1, r18	; 0x01
     3a2:	9f 83       	std	Y+7, r25	; 0x07
     3a4:	8e 83       	std	Y+6, r24	; 0x06
     3a6:	8e 81       	ldd	r24, Y+6	; 0x06
     3a8:	9f 81       	ldd	r25, Y+7	; 0x07
     3aa:	fc 01       	movw	r30, r24
     3ac:	84 91       	lpm	r24, Z
     3ae:	88 87       	std	Y+8, r24	; 0x08
     3b0:	88 85       	ldd	r24, Y+8	; 0x08
     3b2:	8c 83       	std	Y+4, r24	; 0x04
     3b4:	cd d3       	rcall	.+1946   	; 0xb50 <TWI_Init>
     3b6:	88 a1       	ldd	r24, Y+32	; 0x20
     3b8:	a1 df       	rcall	.-190    	; 0x2fc <SSD1306_Send_StartAndSLAW>
     3ba:	8d 83       	std	Y+5, r24	; 0x05
     3bc:	8d 81       	ldd	r24, Y+5	; 0x05
     3be:	88 23       	and	r24, r24
     3c0:	11 f0       	breq	.+4      	; 0x3c6 <SSD1306_Init+0x54>
     3c2:	8d 81       	ldd	r24, Y+5	; 0x05
     3c4:	c6 c0       	rjmp	.+396    	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
     3c6:	84 ee       	ldi	r24, 0xE4	; 228
     3c8:	b6 df       	rcall	.-148    	; 0x336 <SSD1306_Send_Command>
     3ca:	8d 83       	std	Y+5, r24	; 0x05
     3cc:	8d 81       	ldd	r24, Y+5	; 0x05
     3ce:	88 23       	and	r24, r24
     3d0:	11 f0       	breq	.+4      	; 0x3d6 <SSD1306_Init+0x64>
     3d2:	8d 81       	ldd	r24, Y+5	; 0x05
     3d4:	be c0       	rjmp	.+380    	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
     3d6:	80 e0       	ldi	r24, 0x00	; 0
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	a0 e8       	ldi	r26, 0x80	; 128
     3dc:	bf e3       	ldi	r27, 0x3F	; 63
     3de:	8a 8b       	std	Y+18, r24	; 0x12
     3e0:	9b 8b       	std	Y+19, r25	; 0x13
     3e2:	ac 8b       	std	Y+20, r26	; 0x14
     3e4:	bd 8b       	std	Y+21, r27	; 0x15
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	4a e7       	ldi	r20, 0x7A	; 122
     3ec:	53 e4       	ldi	r21, 0x43	; 67
     3ee:	6a 89       	ldd	r22, Y+18	; 0x12
     3f0:	7b 89       	ldd	r23, Y+19	; 0x13
     3f2:	8c 89       	ldd	r24, Y+20	; 0x14
     3f4:	9d 89       	ldd	r25, Y+21	; 0x15
     3f6:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__mulsf3>
     3fa:	dc 01       	movw	r26, r24
     3fc:	cb 01       	movw	r24, r22
     3fe:	8e 8b       	std	Y+22, r24	; 0x16
     400:	9f 8b       	std	Y+23, r25	; 0x17
     402:	a8 8f       	std	Y+24, r26	; 0x18
     404:	b9 8f       	std	Y+25, r27	; 0x19
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	30 e0       	ldi	r19, 0x00	; 0
     40a:	40 e8       	ldi	r20, 0x80	; 128
     40c:	5f e3       	ldi	r21, 0x3F	; 63
     40e:	6e 89       	ldd	r22, Y+22	; 0x16
     410:	7f 89       	ldd	r23, Y+23	; 0x17
     412:	88 8d       	ldd	r24, Y+24	; 0x18
     414:	99 8d       	ldd	r25, Y+25	; 0x19
     416:	0e 94 3b 0a 	call	0x1476	; 0x1476 <__cmpsf2>
     41a:	88 23       	and	r24, r24
     41c:	2c f4       	brge	.+10     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     41e:	81 e0       	ldi	r24, 0x01	; 1
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	9b 8f       	std	Y+27, r25	; 0x1b
     424:	8a 8f       	std	Y+26, r24	; 0x1a
     426:	3e c0       	rjmp	.+124    	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
     428:	20 e0       	ldi	r18, 0x00	; 0
     42a:	3f ef       	ldi	r19, 0xFF	; 255
     42c:	4f e7       	ldi	r20, 0x7F	; 127
     42e:	57 e4       	ldi	r21, 0x47	; 71
     430:	6e 89       	ldd	r22, Y+22	; 0x16
     432:	7f 89       	ldd	r23, Y+23	; 0x17
     434:	88 8d       	ldd	r24, Y+24	; 0x18
     436:	99 8d       	ldd	r25, Y+25	; 0x19
     438:	0e 94 b8 0a 	call	0x1570	; 0x1570 <__gesf2>
     43c:	18 16       	cp	r1, r24
     43e:	4c f5       	brge	.+82     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
     440:	20 e0       	ldi	r18, 0x00	; 0
     442:	30 e0       	ldi	r19, 0x00	; 0
     444:	40 e2       	ldi	r20, 0x20	; 32
     446:	51 e4       	ldi	r21, 0x41	; 65
     448:	6a 89       	ldd	r22, Y+18	; 0x12
     44a:	7b 89       	ldd	r23, Y+19	; 0x13
     44c:	8c 89       	ldd	r24, Y+20	; 0x14
     44e:	9d 89       	ldd	r25, Y+21	; 0x15
     450:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__mulsf3>
     454:	dc 01       	movw	r26, r24
     456:	cb 01       	movw	r24, r22
     458:	bc 01       	movw	r22, r24
     45a:	cd 01       	movw	r24, r26
     45c:	0e 94 3f 0a 	call	0x147e	; 0x147e <__fixunssfsi>
     460:	dc 01       	movw	r26, r24
     462:	cb 01       	movw	r24, r22
     464:	9b 8f       	std	Y+27, r25	; 0x1b
     466:	8a 8f       	std	Y+26, r24	; 0x1a
     468:	0f c0       	rjmp	.+30     	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
     46a:	89 e1       	ldi	r24, 0x19	; 25
     46c:	90 e0       	ldi	r25, 0x00	; 0
     46e:	9d 8f       	std	Y+29, r25	; 0x1d
     470:	8c 8f       	std	Y+28, r24	; 0x1c
     472:	8c 8d       	ldd	r24, Y+28	; 0x1c
     474:	9d 8d       	ldd	r25, Y+29	; 0x1d
     476:	01 97       	sbiw	r24, 0x01	; 1
     478:	f1 f7       	brne	.-4      	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
     47a:	9d 8f       	std	Y+29, r25	; 0x1d
     47c:	8c 8f       	std	Y+28, r24	; 0x1c
     47e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     480:	9b 8d       	ldd	r25, Y+27	; 0x1b
     482:	01 97       	sbiw	r24, 0x01	; 1
     484:	9b 8f       	std	Y+27, r25	; 0x1b
     486:	8a 8f       	std	Y+26, r24	; 0x1a
     488:	8a 8d       	ldd	r24, Y+26	; 0x1a
     48a:	9b 8d       	ldd	r25, Y+27	; 0x1b
     48c:	89 2b       	or	r24, r25
     48e:	69 f7       	brne	.-38     	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
     490:	13 c0       	rjmp	.+38     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
     492:	6e 89       	ldd	r22, Y+22	; 0x16
     494:	7f 89       	ldd	r23, Y+23	; 0x17
     496:	88 8d       	ldd	r24, Y+24	; 0x18
     498:	99 8d       	ldd	r25, Y+25	; 0x19
     49a:	f1 d7       	rcall	.+4066   	; 0x147e <__fixunssfsi>
     49c:	dc 01       	movw	r26, r24
     49e:	cb 01       	movw	r24, r22
     4a0:	9b 8f       	std	Y+27, r25	; 0x1b
     4a2:	8a 8f       	std	Y+26, r24	; 0x1a
     4a4:	8a 8d       	ldd	r24, Y+26	; 0x1a
     4a6:	9b 8d       	ldd	r25, Y+27	; 0x1b
     4a8:	9f 8f       	std	Y+31, r25	; 0x1f
     4aa:	8e 8f       	std	Y+30, r24	; 0x1e
     4ac:	8e 8d       	ldd	r24, Y+30	; 0x1e
     4ae:	9f 8d       	ldd	r25, Y+31	; 0x1f
     4b0:	01 97       	sbiw	r24, 0x01	; 1
     4b2:	f1 f7       	brne	.-4      	; 0x4b0 <__EEPROM_REGION_LENGTH__+0xb0>
     4b4:	9f 8f       	std	Y+31, r25	; 0x1f
     4b6:	8e 8f       	std	Y+30, r24	; 0x1e
     4b8:	43 c0       	rjmp	.+134    	; 0x540 <__EEPROM_REGION_LENGTH__+0x140>
     4ba:	89 81       	ldd	r24, Y+1	; 0x01
     4bc:	9a 81       	ldd	r25, Y+2	; 0x02
     4be:	9c 01       	movw	r18, r24
     4c0:	2f 5f       	subi	r18, 0xFF	; 255
     4c2:	3f 4f       	sbci	r19, 0xFF	; 255
     4c4:	3a 83       	std	Y+2, r19	; 0x02
     4c6:	29 83       	std	Y+1, r18	; 0x01
     4c8:	9a 87       	std	Y+10, r25	; 0x0a
     4ca:	89 87       	std	Y+9, r24	; 0x09
     4cc:	89 85       	ldd	r24, Y+9	; 0x09
     4ce:	9a 85       	ldd	r25, Y+10	; 0x0a
     4d0:	fc 01       	movw	r30, r24
     4d2:	84 91       	lpm	r24, Z
     4d4:	8b 87       	std	Y+11, r24	; 0x0b
     4d6:	8b 85       	ldd	r24, Y+11	; 0x0b
     4d8:	2e df       	rcall	.-420    	; 0x336 <SSD1306_Send_Command>
     4da:	8d 83       	std	Y+5, r24	; 0x05
     4dc:	8d 81       	ldd	r24, Y+5	; 0x05
     4de:	88 23       	and	r24, r24
     4e0:	11 f0       	breq	.+4      	; 0x4e6 <__EEPROM_REGION_LENGTH__+0xe6>
     4e2:	8d 81       	ldd	r24, Y+5	; 0x05
     4e4:	36 c0       	rjmp	.+108    	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
     4e6:	89 81       	ldd	r24, Y+1	; 0x01
     4e8:	9a 81       	ldd	r25, Y+2	; 0x02
     4ea:	9c 01       	movw	r18, r24
     4ec:	2f 5f       	subi	r18, 0xFF	; 255
     4ee:	3f 4f       	sbci	r19, 0xFF	; 255
     4f0:	3a 83       	std	Y+2, r19	; 0x02
     4f2:	29 83       	std	Y+1, r18	; 0x01
     4f4:	9d 87       	std	Y+13, r25	; 0x0d
     4f6:	8c 87       	std	Y+12, r24	; 0x0c
     4f8:	8c 85       	ldd	r24, Y+12	; 0x0c
     4fa:	9d 85       	ldd	r25, Y+13	; 0x0d
     4fc:	fc 01       	movw	r30, r24
     4fe:	84 91       	lpm	r24, Z
     500:	8e 87       	std	Y+14, r24	; 0x0e
     502:	8e 85       	ldd	r24, Y+14	; 0x0e
     504:	8b 83       	std	Y+3, r24	; 0x03
     506:	16 c0       	rjmp	.+44     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
     508:	89 81       	ldd	r24, Y+1	; 0x01
     50a:	9a 81       	ldd	r25, Y+2	; 0x02
     50c:	9c 01       	movw	r18, r24
     50e:	2f 5f       	subi	r18, 0xFF	; 255
     510:	3f 4f       	sbci	r19, 0xFF	; 255
     512:	3a 83       	std	Y+2, r19	; 0x02
     514:	29 83       	std	Y+1, r18	; 0x01
     516:	98 8b       	std	Y+16, r25	; 0x10
     518:	8f 87       	std	Y+15, r24	; 0x0f
     51a:	8f 85       	ldd	r24, Y+15	; 0x0f
     51c:	98 89       	ldd	r25, Y+16	; 0x10
     51e:	fc 01       	movw	r30, r24
     520:	84 91       	lpm	r24, Z
     522:	89 8b       	std	Y+17, r24	; 0x11
     524:	89 89       	ldd	r24, Y+17	; 0x11
     526:	07 df       	rcall	.-498    	; 0x336 <SSD1306_Send_Command>
     528:	8d 83       	std	Y+5, r24	; 0x05
     52a:	8d 81       	ldd	r24, Y+5	; 0x05
     52c:	88 23       	and	r24, r24
     52e:	11 f0       	breq	.+4      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
     530:	8d 81       	ldd	r24, Y+5	; 0x05
     532:	0f c0       	rjmp	.+30     	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
     534:	8b 81       	ldd	r24, Y+3	; 0x03
     536:	9f ef       	ldi	r25, 0xFF	; 255
     538:	98 0f       	add	r25, r24
     53a:	9b 83       	std	Y+3, r25	; 0x03
     53c:	88 23       	and	r24, r24
     53e:	21 f7       	brne	.-56     	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
     540:	8c 81       	ldd	r24, Y+4	; 0x04
     542:	9f ef       	ldi	r25, 0xFF	; 255
     544:	98 0f       	add	r25, r24
     546:	9c 83       	std	Y+4, r25	; 0x04
     548:	88 23       	and	r24, r24
     54a:	09 f0       	breq	.+2      	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
     54c:	b6 cf       	rjmp	.-148    	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     54e:	b2 d3       	rcall	.+1892   	; 0xcb4 <TWI_Stop>
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	a0 96       	adiw	r28, 0x20	; 32
     554:	0f b6       	in	r0, 0x3f	; 63
     556:	f8 94       	cli
     558:	de bf       	out	0x3e, r29	; 62
     55a:	0f be       	out	0x3f, r0	; 63
     55c:	cd bf       	out	0x3d, r28	; 61
     55e:	df 91       	pop	r29
     560:	cf 91       	pop	r28
     562:	08 95       	ret

00000564 <SSD1306_ClearScreen>:
     564:	cf 93       	push	r28
     566:	df 93       	push	r29
     568:	00 d0       	rcall	.+0      	; 0x56a <SSD1306_ClearScreen+0x6>
     56a:	1f 92       	push	r1
     56c:	cd b7       	in	r28, 0x3d	; 61
     56e:	de b7       	in	r29, 0x3e	; 62
     570:	8f ef       	ldi	r24, 0xFF	; 255
     572:	8b 83       	std	Y+3, r24	; 0x03
     574:	8c e3       	ldi	r24, 0x3C	; 60
     576:	c2 de       	rcall	.-636    	; 0x2fc <SSD1306_Send_StartAndSLAW>
     578:	8b 83       	std	Y+3, r24	; 0x03
     57a:	8b 81       	ldd	r24, Y+3	; 0x03
     57c:	88 23       	and	r24, r24
     57e:	11 f0       	breq	.+4      	; 0x584 <SSD1306_ClearScreen+0x20>
     580:	8b 81       	ldd	r24, Y+3	; 0x03
     582:	57 c0       	rjmp	.+174    	; 0x632 <SSD1306_ClearScreen+0xce>
     584:	81 e2       	ldi	r24, 0x21	; 33
     586:	d7 de       	rcall	.-594    	; 0x336 <SSD1306_Send_Command>
     588:	8b 83       	std	Y+3, r24	; 0x03
     58a:	8b 81       	ldd	r24, Y+3	; 0x03
     58c:	88 23       	and	r24, r24
     58e:	11 f0       	breq	.+4      	; 0x594 <SSD1306_ClearScreen+0x30>
     590:	8b 81       	ldd	r24, Y+3	; 0x03
     592:	4f c0       	rjmp	.+158    	; 0x632 <SSD1306_ClearScreen+0xce>
     594:	80 e0       	ldi	r24, 0x00	; 0
     596:	cf de       	rcall	.-610    	; 0x336 <SSD1306_Send_Command>
     598:	8b 83       	std	Y+3, r24	; 0x03
     59a:	8b 81       	ldd	r24, Y+3	; 0x03
     59c:	88 23       	and	r24, r24
     59e:	11 f0       	breq	.+4      	; 0x5a4 <SSD1306_ClearScreen+0x40>
     5a0:	8b 81       	ldd	r24, Y+3	; 0x03
     5a2:	47 c0       	rjmp	.+142    	; 0x632 <SSD1306_ClearScreen+0xce>
     5a4:	8f e7       	ldi	r24, 0x7F	; 127
     5a6:	c7 de       	rcall	.-626    	; 0x336 <SSD1306_Send_Command>
     5a8:	8b 83       	std	Y+3, r24	; 0x03
     5aa:	8b 81       	ldd	r24, Y+3	; 0x03
     5ac:	88 23       	and	r24, r24
     5ae:	11 f0       	breq	.+4      	; 0x5b4 <SSD1306_ClearScreen+0x50>
     5b0:	8b 81       	ldd	r24, Y+3	; 0x03
     5b2:	3f c0       	rjmp	.+126    	; 0x632 <SSD1306_ClearScreen+0xce>
     5b4:	10 92 c3 04 	sts	0x04C3, r1	; 0x8004c3 <__data_end+0x1>
     5b8:	10 92 c2 04 	sts	0x04C2, r1	; 0x8004c2 <__data_end>
     5bc:	82 e2       	ldi	r24, 0x22	; 34
     5be:	bb de       	rcall	.-650    	; 0x336 <SSD1306_Send_Command>
     5c0:	8b 83       	std	Y+3, r24	; 0x03
     5c2:	8b 81       	ldd	r24, Y+3	; 0x03
     5c4:	88 23       	and	r24, r24
     5c6:	11 f0       	breq	.+4      	; 0x5cc <SSD1306_ClearScreen+0x68>
     5c8:	8b 81       	ldd	r24, Y+3	; 0x03
     5ca:	33 c0       	rjmp	.+102    	; 0x632 <SSD1306_ClearScreen+0xce>
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	b3 de       	rcall	.-666    	; 0x336 <SSD1306_Send_Command>
     5d0:	8b 83       	std	Y+3, r24	; 0x03
     5d2:	8b 81       	ldd	r24, Y+3	; 0x03
     5d4:	88 23       	and	r24, r24
     5d6:	11 f0       	breq	.+4      	; 0x5dc <SSD1306_ClearScreen+0x78>
     5d8:	8b 81       	ldd	r24, Y+3	; 0x03
     5da:	2b c0       	rjmp	.+86     	; 0x632 <SSD1306_ClearScreen+0xce>
     5dc:	87 e0       	ldi	r24, 0x07	; 7
     5de:	ab de       	rcall	.-682    	; 0x336 <SSD1306_Send_Command>
     5e0:	8b 83       	std	Y+3, r24	; 0x03
     5e2:	8b 81       	ldd	r24, Y+3	; 0x03
     5e4:	88 23       	and	r24, r24
     5e6:	11 f0       	breq	.+4      	; 0x5ec <SSD1306_ClearScreen+0x88>
     5e8:	8b 81       	ldd	r24, Y+3	; 0x03
     5ea:	23 c0       	rjmp	.+70     	; 0x632 <SSD1306_ClearScreen+0xce>
     5ec:	10 92 c5 04 	sts	0x04C5, r1	; 0x8004c5 <_indexPage+0x1>
     5f0:	10 92 c4 04 	sts	0x04C4, r1	; 0x8004c4 <_indexPage>
     5f4:	80 e4       	ldi	r24, 0x40	; 64
     5f6:	32 d3       	rcall	.+1636   	; 0xc5c <TWI_MT_Send_Data>
     5f8:	8b 83       	std	Y+3, r24	; 0x03
     5fa:	8b 81       	ldd	r24, Y+3	; 0x03
     5fc:	88 23       	and	r24, r24
     5fe:	11 f0       	breq	.+4      	; 0x604 <SSD1306_ClearScreen+0xa0>
     600:	8b 81       	ldd	r24, Y+3	; 0x03
     602:	17 c0       	rjmp	.+46     	; 0x632 <SSD1306_ClearScreen+0xce>
     604:	1a 82       	std	Y+2, r1	; 0x02
     606:	19 82       	std	Y+1, r1	; 0x01
     608:	0d c0       	rjmp	.+26     	; 0x624 <SSD1306_ClearScreen+0xc0>
     60a:	80 e0       	ldi	r24, 0x00	; 0
     60c:	27 d3       	rcall	.+1614   	; 0xc5c <TWI_MT_Send_Data>
     60e:	8b 83       	std	Y+3, r24	; 0x03
     610:	8b 81       	ldd	r24, Y+3	; 0x03
     612:	88 23       	and	r24, r24
     614:	11 f0       	breq	.+4      	; 0x61a <SSD1306_ClearScreen+0xb6>
     616:	8b 81       	ldd	r24, Y+3	; 0x03
     618:	0c c0       	rjmp	.+24     	; 0x632 <SSD1306_ClearScreen+0xce>
     61a:	89 81       	ldd	r24, Y+1	; 0x01
     61c:	9a 81       	ldd	r25, Y+2	; 0x02
     61e:	01 96       	adiw	r24, 0x01	; 1
     620:	9a 83       	std	Y+2, r25	; 0x02
     622:	89 83       	std	Y+1, r24	; 0x01
     624:	89 81       	ldd	r24, Y+1	; 0x01
     626:	9a 81       	ldd	r25, Y+2	; 0x02
     628:	81 15       	cp	r24, r1
     62a:	94 40       	sbci	r25, 0x04	; 4
     62c:	70 f3       	brcs	.-36     	; 0x60a <SSD1306_ClearScreen+0xa6>
     62e:	42 d3       	rcall	.+1668   	; 0xcb4 <TWI_Stop>
     630:	80 e0       	ldi	r24, 0x00	; 0
     632:	0f 90       	pop	r0
     634:	0f 90       	pop	r0
     636:	0f 90       	pop	r0
     638:	df 91       	pop	r29
     63a:	cf 91       	pop	r28
     63c:	08 95       	ret

0000063e <SSD1306_SetWindow>:
     63e:	cf 93       	push	r28
     640:	df 93       	push	r29
     642:	00 d0       	rcall	.+0      	; 0x644 <SSD1306_SetWindow+0x6>
     644:	00 d0       	rcall	.+0      	; 0x646 <SSD1306_SetWindow+0x8>
     646:	1f 92       	push	r1
     648:	cd b7       	in	r28, 0x3d	; 61
     64a:	de b7       	in	r29, 0x3e	; 62
     64c:	8a 83       	std	Y+2, r24	; 0x02
     64e:	6b 83       	std	Y+3, r22	; 0x03
     650:	4c 83       	std	Y+4, r20	; 0x04
     652:	2d 83       	std	Y+5, r18	; 0x05
     654:	8f ef       	ldi	r24, 0xFF	; 255
     656:	89 83       	std	Y+1, r24	; 0x01
     658:	8c e3       	ldi	r24, 0x3C	; 60
     65a:	50 de       	rcall	.-864    	; 0x2fc <SSD1306_Send_StartAndSLAW>
     65c:	89 83       	std	Y+1, r24	; 0x01
     65e:	89 81       	ldd	r24, Y+1	; 0x01
     660:	88 23       	and	r24, r24
     662:	11 f0       	breq	.+4      	; 0x668 <SSD1306_SetWindow+0x2a>
     664:	89 81       	ldd	r24, Y+1	; 0x01
     666:	40 c0       	rjmp	.+128    	; 0x6e8 <SSD1306_SetWindow+0xaa>
     668:	81 e2       	ldi	r24, 0x21	; 33
     66a:	65 de       	rcall	.-822    	; 0x336 <SSD1306_Send_Command>
     66c:	89 83       	std	Y+1, r24	; 0x01
     66e:	89 81       	ldd	r24, Y+1	; 0x01
     670:	88 23       	and	r24, r24
     672:	11 f0       	breq	.+4      	; 0x678 <SSD1306_SetWindow+0x3a>
     674:	89 81       	ldd	r24, Y+1	; 0x01
     676:	38 c0       	rjmp	.+112    	; 0x6e8 <SSD1306_SetWindow+0xaa>
     678:	8a 81       	ldd	r24, Y+2	; 0x02
     67a:	5d de       	rcall	.-838    	; 0x336 <SSD1306_Send_Command>
     67c:	89 83       	std	Y+1, r24	; 0x01
     67e:	89 81       	ldd	r24, Y+1	; 0x01
     680:	88 23       	and	r24, r24
     682:	11 f0       	breq	.+4      	; 0x688 <SSD1306_SetWindow+0x4a>
     684:	89 81       	ldd	r24, Y+1	; 0x01
     686:	30 c0       	rjmp	.+96     	; 0x6e8 <SSD1306_SetWindow+0xaa>
     688:	8b 81       	ldd	r24, Y+3	; 0x03
     68a:	55 de       	rcall	.-854    	; 0x336 <SSD1306_Send_Command>
     68c:	89 83       	std	Y+1, r24	; 0x01
     68e:	89 81       	ldd	r24, Y+1	; 0x01
     690:	88 23       	and	r24, r24
     692:	11 f0       	breq	.+4      	; 0x698 <SSD1306_SetWindow+0x5a>
     694:	89 81       	ldd	r24, Y+1	; 0x01
     696:	28 c0       	rjmp	.+80     	; 0x6e8 <SSD1306_SetWindow+0xaa>
     698:	8a 81       	ldd	r24, Y+2	; 0x02
     69a:	88 2f       	mov	r24, r24
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	90 93 c3 04 	sts	0x04C3, r25	; 0x8004c3 <__data_end+0x1>
     6a2:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <__data_end>
     6a6:	82 e2       	ldi	r24, 0x22	; 34
     6a8:	46 de       	rcall	.-884    	; 0x336 <SSD1306_Send_Command>
     6aa:	89 83       	std	Y+1, r24	; 0x01
     6ac:	89 81       	ldd	r24, Y+1	; 0x01
     6ae:	88 23       	and	r24, r24
     6b0:	11 f0       	breq	.+4      	; 0x6b6 <SSD1306_SetWindow+0x78>
     6b2:	89 81       	ldd	r24, Y+1	; 0x01
     6b4:	19 c0       	rjmp	.+50     	; 0x6e8 <SSD1306_SetWindow+0xaa>
     6b6:	8c 81       	ldd	r24, Y+4	; 0x04
     6b8:	3e de       	rcall	.-900    	; 0x336 <SSD1306_Send_Command>
     6ba:	89 83       	std	Y+1, r24	; 0x01
     6bc:	89 81       	ldd	r24, Y+1	; 0x01
     6be:	88 23       	and	r24, r24
     6c0:	11 f0       	breq	.+4      	; 0x6c6 <SSD1306_SetWindow+0x88>
     6c2:	89 81       	ldd	r24, Y+1	; 0x01
     6c4:	11 c0       	rjmp	.+34     	; 0x6e8 <SSD1306_SetWindow+0xaa>
     6c6:	8d 81       	ldd	r24, Y+5	; 0x05
     6c8:	36 de       	rcall	.-916    	; 0x336 <SSD1306_Send_Command>
     6ca:	89 83       	std	Y+1, r24	; 0x01
     6cc:	89 81       	ldd	r24, Y+1	; 0x01
     6ce:	88 23       	and	r24, r24
     6d0:	11 f0       	breq	.+4      	; 0x6d6 <SSD1306_SetWindow+0x98>
     6d2:	89 81       	ldd	r24, Y+1	; 0x01
     6d4:	09 c0       	rjmp	.+18     	; 0x6e8 <SSD1306_SetWindow+0xaa>
     6d6:	8c 81       	ldd	r24, Y+4	; 0x04
     6d8:	88 2f       	mov	r24, r24
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	90 93 c5 04 	sts	0x04C5, r25	; 0x8004c5 <_indexPage+0x1>
     6e0:	80 93 c4 04 	sts	0x04C4, r24	; 0x8004c4 <_indexPage>
     6e4:	e7 d2       	rcall	.+1486   	; 0xcb4 <TWI_Stop>
     6e6:	80 e0       	ldi	r24, 0x00	; 0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0
     6ee:	0f 90       	pop	r0
     6f0:	0f 90       	pop	r0
     6f2:	df 91       	pop	r29
     6f4:	cf 91       	pop	r28
     6f6:	08 95       	ret

000006f8 <SSD1306_SetPosition>:
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	00 d0       	rcall	.+0      	; 0x6fe <SSD1306_SetPosition+0x6>
     6fe:	00 d0       	rcall	.+0      	; 0x700 <SSD1306_SetPosition+0x8>
     700:	1f 92       	push	r1
     702:	cd b7       	in	r28, 0x3d	; 61
     704:	de b7       	in	r29, 0x3e	; 62
     706:	8c 83       	std	Y+4, r24	; 0x04
     708:	6d 83       	std	Y+5, r22	; 0x05
     70a:	8f ef       	ldi	r24, 0xFF	; 255
     70c:	89 83       	std	Y+1, r24	; 0x01
     70e:	8f e7       	ldi	r24, 0x7F	; 127
     710:	8a 83       	std	Y+2, r24	; 0x02
     712:	87 e0       	ldi	r24, 0x07	; 7
     714:	8b 83       	std	Y+3, r24	; 0x03
     716:	2b 81       	ldd	r18, Y+3	; 0x03
     718:	4d 81       	ldd	r20, Y+5	; 0x05
     71a:	6a 81       	ldd	r22, Y+2	; 0x02
     71c:	8c 81       	ldd	r24, Y+4	; 0x04
     71e:	8f df       	rcall	.-226    	; 0x63e <SSD1306_SetWindow>
     720:	89 83       	std	Y+1, r24	; 0x01
     722:	89 81       	ldd	r24, Y+1	; 0x01
     724:	88 23       	and	r24, r24
     726:	11 f0       	breq	.+4      	; 0x72c <SSD1306_SetPosition+0x34>
     728:	89 81       	ldd	r24, Y+1	; 0x01
     72a:	01 c0       	rjmp	.+2      	; 0x72e <SSD1306_SetPosition+0x36>
     72c:	80 e0       	ldi	r24, 0x00	; 0
     72e:	0f 90       	pop	r0
     730:	0f 90       	pop	r0
     732:	0f 90       	pop	r0
     734:	0f 90       	pop	r0
     736:	0f 90       	pop	r0
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	08 95       	ret

0000073e <SSD1306_UpdatePosition>:
     73e:	cf 93       	push	r28
     740:	df 93       	push	r29
     742:	00 d0       	rcall	.+0      	; 0x744 <SSD1306_UpdatePosition+0x6>
     744:	1f 92       	push	r1
     746:	cd b7       	in	r28, 0x3d	; 61
     748:	de b7       	in	r29, 0x3e	; 62
     74a:	8a 83       	std	Y+2, r24	; 0x02
     74c:	6b 83       	std	Y+3, r22	; 0x03
     74e:	8f ef       	ldi	r24, 0xFF	; 255
     750:	89 83       	std	Y+1, r24	; 0x01
     752:	8a 81       	ldd	r24, Y+2	; 0x02
     754:	88 23       	and	r24, r24
     756:	44 f5       	brge	.+80     	; 0x7a8 <SSD1306_UpdatePosition+0x6a>
     758:	8b 81       	ldd	r24, Y+3	; 0x03
     75a:	87 30       	cpi	r24, 0x07	; 7
     75c:	00 f5       	brcc	.+64     	; 0x79e <SSD1306_UpdatePosition+0x60>
     75e:	82 e0       	ldi	r24, 0x02	; 2
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	90 93 c3 04 	sts	0x04C3, r25	; 0x8004c3 <__data_end+0x1>
     766:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <__data_end>
     76a:	80 91 c4 04 	lds	r24, 0x04C4	; 0x8004c4 <_indexPage>
     76e:	90 91 c5 04 	lds	r25, 0x04C5	; 0x8004c5 <_indexPage+0x1>
     772:	01 96       	adiw	r24, 0x01	; 1
     774:	90 93 c5 04 	sts	0x04C5, r25	; 0x8004c5 <_indexPage+0x1>
     778:	80 93 c4 04 	sts	0x04C4, r24	; 0x8004c4 <_indexPage>
     77c:	80 91 c4 04 	lds	r24, 0x04C4	; 0x8004c4 <_indexPage>
     780:	90 91 c5 04 	lds	r25, 0x04C5	; 0x8004c5 <_indexPage+0x1>
     784:	28 2f       	mov	r18, r24
     786:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <__data_end>
     78a:	90 91 c3 04 	lds	r25, 0x04C3	; 0x8004c3 <__data_end+0x1>
     78e:	62 2f       	mov	r22, r18
     790:	b3 df       	rcall	.-154    	; 0x6f8 <SSD1306_SetPosition>
     792:	89 83       	std	Y+1, r24	; 0x01
     794:	89 81       	ldd	r24, Y+1	; 0x01
     796:	88 23       	and	r24, r24
     798:	11 f0       	breq	.+4      	; 0x79e <SSD1306_UpdatePosition+0x60>
     79a:	89 81       	ldd	r24, Y+1	; 0x01
     79c:	06 c0       	rjmp	.+12     	; 0x7aa <SSD1306_UpdatePosition+0x6c>
     79e:	8b 81       	ldd	r24, Y+3	; 0x03
     7a0:	87 30       	cpi	r24, 0x07	; 7
     7a2:	10 f0       	brcs	.+4      	; 0x7a8 <SSD1306_UpdatePosition+0x6a>
     7a4:	81 e0       	ldi	r24, 0x01	; 1
     7a6:	01 c0       	rjmp	.+2      	; 0x7aa <SSD1306_UpdatePosition+0x6c>
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	0f 90       	pop	r0
     7ac:	0f 90       	pop	r0
     7ae:	0f 90       	pop	r0
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	08 95       	ret

000007b6 <SSD1306_DrawChar>:
     7b6:	cf 93       	push	r28
     7b8:	df 93       	push	r29
     7ba:	cd b7       	in	r28, 0x3d	; 61
     7bc:	de b7       	in	r29, 0x3e	; 62
     7be:	2e 97       	sbiw	r28, 0x0e	; 14
     7c0:	0f b6       	in	r0, 0x3f	; 63
     7c2:	f8 94       	cli
     7c4:	de bf       	out	0x3e, r29	; 62
     7c6:	0f be       	out	0x3f, r0	; 63
     7c8:	cd bf       	out	0x3d, r28	; 61
     7ca:	8d 87       	std	Y+13, r24	; 0x0d
     7cc:	6e 87       	std	Y+14, r22	; 0x0e
     7ce:	8f ef       	ldi	r24, 0xFF	; 255
     7d0:	8b 83       	std	Y+3, r24	; 0x03
     7d2:	19 82       	std	Y+1, r1	; 0x01
     7d4:	1a 82       	std	Y+2, r1	; 0x02
     7d6:	8e 85       	ldd	r24, Y+14	; 0x0e
     7d8:	88 2f       	mov	r24, r24
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	8f 70       	andi	r24, 0x0F	; 15
     7de:	99 27       	eor	r25, r25
     7e0:	89 2b       	or	r24, r25
     7e2:	09 f0       	breq	.+2      	; 0x7e6 <SSD1306_DrawChar+0x30>
     7e4:	64 c0       	rjmp	.+200    	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
     7e6:	8e 85       	ldd	r24, Y+14	; 0x0e
     7e8:	88 2f       	mov	r24, r24
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	80 7f       	andi	r24, 0xF0	; 240
     7ee:	99 27       	eor	r25, r25
     7f0:	89 2b       	or	r24, r25
     7f2:	11 f0       	breq	.+4      	; 0x7f8 <SSD1306_DrawChar+0x42>
     7f4:	80 e8       	ldi	r24, 0x80	; 128
     7f6:	8a 83       	std	Y+2, r24	; 0x02
     7f8:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <__data_end>
     7fc:	90 91 c3 04 	lds	r25, 0x04C3	; 0x8004c3 <__data_end+0x1>
     800:	8b 5f       	subi	r24, 0xFB	; 251
     802:	8c 83       	std	Y+4, r24	; 0x04
     804:	80 91 c4 04 	lds	r24, 0x04C4	; 0x8004c4 <_indexPage>
     808:	90 91 c5 04 	lds	r25, 0x04C5	; 0x8004c5 <_indexPage+0x1>
     80c:	8d 83       	std	Y+5, r24	; 0x05
     80e:	6d 81       	ldd	r22, Y+5	; 0x05
     810:	8c 81       	ldd	r24, Y+4	; 0x04
     812:	95 df       	rcall	.-214    	; 0x73e <SSD1306_UpdatePosition>
     814:	8b 83       	std	Y+3, r24	; 0x03
     816:	8b 81       	ldd	r24, Y+3	; 0x03
     818:	88 23       	and	r24, r24
     81a:	11 f0       	breq	.+4      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
     81c:	8b 81       	ldd	r24, Y+3	; 0x03
     81e:	d1 c0       	rjmp	.+418    	; 0x9c2 <__stack+0xc3>
     820:	8c e3       	ldi	r24, 0x3C	; 60
     822:	6c dd       	rcall	.-1320   	; 0x2fc <SSD1306_Send_StartAndSLAW>
     824:	8b 83       	std	Y+3, r24	; 0x03
     826:	8b 81       	ldd	r24, Y+3	; 0x03
     828:	88 23       	and	r24, r24
     82a:	11 f0       	breq	.+4      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
     82c:	8b 81       	ldd	r24, Y+3	; 0x03
     82e:	c9 c0       	rjmp	.+402    	; 0x9c2 <__stack+0xc3>
     830:	80 e4       	ldi	r24, 0x40	; 64
     832:	14 d2       	rcall	.+1064   	; 0xc5c <TWI_MT_Send_Data>
     834:	8b 83       	std	Y+3, r24	; 0x03
     836:	8b 81       	ldd	r24, Y+3	; 0x03
     838:	88 23       	and	r24, r24
     83a:	a9 f1       	breq	.+106    	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
     83c:	8b 81       	ldd	r24, Y+3	; 0x03
     83e:	c1 c0       	rjmp	.+386    	; 0x9c2 <__stack+0xc3>
     840:	8d 85       	ldd	r24, Y+13	; 0x0d
     842:	88 2f       	mov	r24, r24
     844:	90 e0       	ldi	r25, 0x00	; 0
     846:	9c 01       	movw	r18, r24
     848:	20 52       	subi	r18, 0x20	; 32
     84a:	31 09       	sbc	r19, r1
     84c:	89 81       	ldd	r24, Y+1	; 0x01
     84e:	91 e0       	ldi	r25, 0x01	; 1
     850:	98 0f       	add	r25, r24
     852:	99 83       	std	Y+1, r25	; 0x01
     854:	48 2f       	mov	r20, r24
     856:	50 e0       	ldi	r21, 0x00	; 0
     858:	c9 01       	movw	r24, r18
     85a:	88 0f       	add	r24, r24
     85c:	99 1f       	adc	r25, r25
     85e:	88 0f       	add	r24, r24
     860:	99 1f       	adc	r25, r25
     862:	82 0f       	add	r24, r18
     864:	93 1f       	adc	r25, r19
     866:	84 0f       	add	r24, r20
     868:	95 1f       	adc	r25, r21
     86a:	8c 54       	subi	r24, 0x4C	; 76
     86c:	9f 4f       	sbci	r25, 0xFF	; 255
     86e:	9f 83       	std	Y+7, r25	; 0x07
     870:	8e 83       	std	Y+6, r24	; 0x06
     872:	8e 81       	ldd	r24, Y+6	; 0x06
     874:	9f 81       	ldd	r25, Y+7	; 0x07
     876:	fc 01       	movw	r30, r24
     878:	84 91       	lpm	r24, Z
     87a:	88 87       	std	Y+8, r24	; 0x08
     87c:	88 85       	ldd	r24, Y+8	; 0x08
     87e:	89 87       	std	Y+9, r24	; 0x09
     880:	99 85       	ldd	r25, Y+9	; 0x09
     882:	8a 81       	ldd	r24, Y+2	; 0x02
     884:	89 2b       	or	r24, r25
     886:	ea d1       	rcall	.+980    	; 0xc5c <TWI_MT_Send_Data>
     888:	8b 83       	std	Y+3, r24	; 0x03
     88a:	8b 81       	ldd	r24, Y+3	; 0x03
     88c:	88 23       	and	r24, r24
     88e:	11 f0       	breq	.+4      	; 0x894 <__DATA_REGION_LENGTH__+0x94>
     890:	8b 81       	ldd	r24, Y+3	; 0x03
     892:	97 c0       	rjmp	.+302    	; 0x9c2 <__stack+0xc3>
     894:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <__data_end>
     898:	90 91 c3 04 	lds	r25, 0x04C3	; 0x8004c3 <__data_end+0x1>
     89c:	01 96       	adiw	r24, 0x01	; 1
     89e:	90 93 c3 04 	sts	0x04C3, r25	; 0x8004c3 <__data_end+0x1>
     8a2:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <__data_end>
     8a6:	89 81       	ldd	r24, Y+1	; 0x01
     8a8:	85 30       	cpi	r24, 0x05	; 5
     8aa:	50 f2       	brcs	.-108    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     8ac:	77 c0       	rjmp	.+238    	; 0x99c <__stack+0x9d>
     8ae:	8e 85       	ldd	r24, Y+14	; 0x0e
     8b0:	88 2f       	mov	r24, r24
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	8f 70       	andi	r24, 0x0F	; 15
     8b6:	99 27       	eor	r25, r25
     8b8:	01 97       	sbiw	r24, 0x01	; 1
     8ba:	09 f0       	breq	.+2      	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     8bc:	6f c0       	rjmp	.+222    	; 0x99c <__stack+0x9d>
     8be:	8e 85       	ldd	r24, Y+14	; 0x0e
     8c0:	88 2f       	mov	r24, r24
     8c2:	90 e0       	ldi	r25, 0x00	; 0
     8c4:	80 7f       	andi	r24, 0xF0	; 240
     8c6:	99 27       	eor	r25, r25
     8c8:	89 2b       	or	r24, r25
     8ca:	11 f0       	breq	.+4      	; 0x8d0 <__DATA_REGION_LENGTH__+0xd0>
     8cc:	80 e8       	ldi	r24, 0x80	; 128
     8ce:	8a 83       	std	Y+2, r24	; 0x02
     8d0:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <__data_end>
     8d4:	90 91 c3 04 	lds	r25, 0x04C3	; 0x8004c3 <__data_end+0x1>
     8d8:	86 5f       	subi	r24, 0xF6	; 246
     8da:	8c 83       	std	Y+4, r24	; 0x04
     8dc:	80 91 c4 04 	lds	r24, 0x04C4	; 0x8004c4 <_indexPage>
     8e0:	90 91 c5 04 	lds	r25, 0x04C5	; 0x8004c5 <_indexPage+0x1>
     8e4:	8d 83       	std	Y+5, r24	; 0x05
     8e6:	6d 81       	ldd	r22, Y+5	; 0x05
     8e8:	8c 81       	ldd	r24, Y+4	; 0x04
     8ea:	29 df       	rcall	.-430    	; 0x73e <SSD1306_UpdatePosition>
     8ec:	8b 83       	std	Y+3, r24	; 0x03
     8ee:	8b 81       	ldd	r24, Y+3	; 0x03
     8f0:	88 23       	and	r24, r24
     8f2:	11 f0       	breq	.+4      	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
     8f4:	8b 81       	ldd	r24, Y+3	; 0x03
     8f6:	65 c0       	rjmp	.+202    	; 0x9c2 <__stack+0xc3>
     8f8:	8c e3       	ldi	r24, 0x3C	; 60
     8fa:	00 dd       	rcall	.-1536   	; 0x2fc <SSD1306_Send_StartAndSLAW>
     8fc:	8b 83       	std	Y+3, r24	; 0x03
     8fe:	8b 81       	ldd	r24, Y+3	; 0x03
     900:	88 23       	and	r24, r24
     902:	11 f0       	breq	.+4      	; 0x908 <__stack+0x9>
     904:	8b 81       	ldd	r24, Y+3	; 0x03
     906:	5d c0       	rjmp	.+186    	; 0x9c2 <__stack+0xc3>
     908:	80 e4       	ldi	r24, 0x40	; 64
     90a:	a8 d1       	rcall	.+848    	; 0xc5c <TWI_MT_Send_Data>
     90c:	8b 83       	std	Y+3, r24	; 0x03
     90e:	8b 81       	ldd	r24, Y+3	; 0x03
     910:	88 23       	and	r24, r24
     912:	09 f4       	brne	.+2      	; 0x916 <__stack+0x17>
     914:	3f c0       	rjmp	.+126    	; 0x994 <__stack+0x95>
     916:	8b 81       	ldd	r24, Y+3	; 0x03
     918:	54 c0       	rjmp	.+168    	; 0x9c2 <__stack+0xc3>
     91a:	8d 85       	ldd	r24, Y+13	; 0x0d
     91c:	88 2f       	mov	r24, r24
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	9c 01       	movw	r18, r24
     922:	20 52       	subi	r18, 0x20	; 32
     924:	31 09       	sbc	r19, r1
     926:	89 81       	ldd	r24, Y+1	; 0x01
     928:	91 e0       	ldi	r25, 0x01	; 1
     92a:	98 0f       	add	r25, r24
     92c:	99 83       	std	Y+1, r25	; 0x01
     92e:	48 2f       	mov	r20, r24
     930:	50 e0       	ldi	r21, 0x00	; 0
     932:	c9 01       	movw	r24, r18
     934:	88 0f       	add	r24, r24
     936:	99 1f       	adc	r25, r25
     938:	88 0f       	add	r24, r24
     93a:	99 1f       	adc	r25, r25
     93c:	82 0f       	add	r24, r18
     93e:	93 1f       	adc	r25, r19
     940:	84 0f       	add	r24, r20
     942:	95 1f       	adc	r25, r21
     944:	8c 54       	subi	r24, 0x4C	; 76
     946:	9f 4f       	sbci	r25, 0xFF	; 255
     948:	9b 87       	std	Y+11, r25	; 0x0b
     94a:	8a 87       	std	Y+10, r24	; 0x0a
     94c:	8a 85       	ldd	r24, Y+10	; 0x0a
     94e:	9b 85       	ldd	r25, Y+11	; 0x0b
     950:	fc 01       	movw	r30, r24
     952:	84 91       	lpm	r24, Z
     954:	8c 87       	std	Y+12, r24	; 0x0c
     956:	8c 85       	ldd	r24, Y+12	; 0x0c
     958:	89 87       	std	Y+9, r24	; 0x09
     95a:	99 85       	ldd	r25, Y+9	; 0x09
     95c:	8a 81       	ldd	r24, Y+2	; 0x02
     95e:	89 2b       	or	r24, r25
     960:	7d d1       	rcall	.+762    	; 0xc5c <TWI_MT_Send_Data>
     962:	8b 83       	std	Y+3, r24	; 0x03
     964:	8b 81       	ldd	r24, Y+3	; 0x03
     966:	88 23       	and	r24, r24
     968:	11 f0       	breq	.+4      	; 0x96e <__stack+0x6f>
     96a:	8b 81       	ldd	r24, Y+3	; 0x03
     96c:	2a c0       	rjmp	.+84     	; 0x9c2 <__stack+0xc3>
     96e:	99 85       	ldd	r25, Y+9	; 0x09
     970:	8a 81       	ldd	r24, Y+2	; 0x02
     972:	89 2b       	or	r24, r25
     974:	73 d1       	rcall	.+742    	; 0xc5c <TWI_MT_Send_Data>
     976:	8b 83       	std	Y+3, r24	; 0x03
     978:	8b 81       	ldd	r24, Y+3	; 0x03
     97a:	88 23       	and	r24, r24
     97c:	11 f0       	breq	.+4      	; 0x982 <__stack+0x83>
     97e:	8b 81       	ldd	r24, Y+3	; 0x03
     980:	20 c0       	rjmp	.+64     	; 0x9c2 <__stack+0xc3>
     982:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <__data_end>
     986:	90 91 c3 04 	lds	r25, 0x04C3	; 0x8004c3 <__data_end+0x1>
     98a:	02 96       	adiw	r24, 0x02	; 2
     98c:	90 93 c3 04 	sts	0x04C3, r25	; 0x8004c3 <__data_end+0x1>
     990:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <__data_end>
     994:	89 81       	ldd	r24, Y+1	; 0x01
     996:	85 30       	cpi	r24, 0x05	; 5
     998:	08 f4       	brcc	.+2      	; 0x99c <__stack+0x9d>
     99a:	bf cf       	rjmp	.-130    	; 0x91a <__stack+0x1b>
     99c:	8a 81       	ldd	r24, Y+2	; 0x02
     99e:	5e d1       	rcall	.+700    	; 0xc5c <TWI_MT_Send_Data>
     9a0:	8b 83       	std	Y+3, r24	; 0x03
     9a2:	8b 81       	ldd	r24, Y+3	; 0x03
     9a4:	88 23       	and	r24, r24
     9a6:	11 f0       	breq	.+4      	; 0x9ac <__stack+0xad>
     9a8:	8b 81       	ldd	r24, Y+3	; 0x03
     9aa:	0b c0       	rjmp	.+22     	; 0x9c2 <__stack+0xc3>
     9ac:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <__data_end>
     9b0:	90 91 c3 04 	lds	r25, 0x04C3	; 0x8004c3 <__data_end+0x1>
     9b4:	01 96       	adiw	r24, 0x01	; 1
     9b6:	90 93 c3 04 	sts	0x04C3, r25	; 0x8004c3 <__data_end+0x1>
     9ba:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <__data_end>
     9be:	7a d1       	rcall	.+756    	; 0xcb4 <TWI_Stop>
     9c0:	80 e0       	ldi	r24, 0x00	; 0
     9c2:	2e 96       	adiw	r28, 0x0e	; 14
     9c4:	0f b6       	in	r0, 0x3f	; 63
     9c6:	f8 94       	cli
     9c8:	de bf       	out	0x3e, r29	; 62
     9ca:	0f be       	out	0x3f, r0	; 63
     9cc:	cd bf       	out	0x3d, r28	; 61
     9ce:	df 91       	pop	r29
     9d0:	cf 91       	pop	r28
     9d2:	08 95       	ret

000009d4 <SSD1306_DrawString>:
     9d4:	cf 93       	push	r28
     9d6:	df 93       	push	r29
     9d8:	00 d0       	rcall	.+0      	; 0x9da <SSD1306_DrawString+0x6>
     9da:	00 d0       	rcall	.+0      	; 0x9dc <SSD1306_DrawString+0x8>
     9dc:	cd b7       	in	r28, 0x3d	; 61
     9de:	de b7       	in	r29, 0x3e	; 62
     9e0:	9b 83       	std	Y+3, r25	; 0x03
     9e2:	8a 83       	std	Y+2, r24	; 0x02
     9e4:	6c 83       	std	Y+4, r22	; 0x04
     9e6:	19 82       	std	Y+1, r1	; 0x01
     9e8:	0e c0       	rjmp	.+28     	; 0xa06 <SSD1306_DrawString+0x32>
     9ea:	89 81       	ldd	r24, Y+1	; 0x01
     9ec:	91 e0       	ldi	r25, 0x01	; 1
     9ee:	98 0f       	add	r25, r24
     9f0:	99 83       	std	Y+1, r25	; 0x01
     9f2:	88 2f       	mov	r24, r24
     9f4:	90 e0       	ldi	r25, 0x00	; 0
     9f6:	2a 81       	ldd	r18, Y+2	; 0x02
     9f8:	3b 81       	ldd	r19, Y+3	; 0x03
     9fa:	82 0f       	add	r24, r18
     9fc:	93 1f       	adc	r25, r19
     9fe:	fc 01       	movw	r30, r24
     a00:	80 81       	ld	r24, Z
     a02:	6c 81       	ldd	r22, Y+4	; 0x04
     a04:	d8 de       	rcall	.-592    	; 0x7b6 <SSD1306_DrawChar>
     a06:	89 81       	ldd	r24, Y+1	; 0x01
     a08:	88 2f       	mov	r24, r24
     a0a:	90 e0       	ldi	r25, 0x00	; 0
     a0c:	2a 81       	ldd	r18, Y+2	; 0x02
     a0e:	3b 81       	ldd	r19, Y+3	; 0x03
     a10:	82 0f       	add	r24, r18
     a12:	93 1f       	adc	r25, r19
     a14:	fc 01       	movw	r30, r24
     a16:	80 81       	ld	r24, Z
     a18:	88 23       	and	r24, r24
     a1a:	39 f7       	brne	.-50     	; 0x9ea <SSD1306_DrawString+0x16>
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	0f 90       	pop	r0
     a20:	0f 90       	pop	r0
     a22:	0f 90       	pop	r0
     a24:	0f 90       	pop	r0
     a26:	df 91       	pop	r29
     a28:	cf 91       	pop	r28
     a2a:	08 95       	ret

00000a2c <SSD1306_UpdateScreen>:

uint8_t SSD1306_UpdateScreen(uint8_t I2C_Address) {
     a2c:	cf 93       	push	r28
     a2e:	df 93       	push	r29
     a30:	00 d0       	rcall	.+0      	; 0xa32 <SSD1306_UpdateScreen+0x6>
     a32:	1f 92       	push	r1
     a34:	cd b7       	in	r28, 0x3d	; 61
     a36:	de b7       	in	r29, 0x3e	; 62
     a38:	8b 83       	std	Y+3, r24	; 0x03
	// Retry parameters
	const uint8_t MAX_RETRIES = 3;  // Max retries
     a3a:	83 e0       	ldi	r24, 0x03	; 3
     a3c:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t retries = 0;
     a3e:	19 82       	std	Y+1, r1	; 0x01

	// Set the column address window to start at 8th column and end at 15th column (example)
	while (retries < MAX_RETRIES) {
     a40:	21 c0       	rjmp	.+66     	; 0xa84 <SSD1306_UpdateScreen+0x58>
		if (SSD1306_Send_Command(0x21) != SSD1306_ERROR &&  // Command to set column address
     a42:	81 e2       	ldi	r24, 0x21	; 33
     a44:	78 dc       	rcall	.-1808   	; 0x336 <SSD1306_Send_Command>
     a46:	81 30       	cpi	r24, 0x01	; 1
     a48:	41 f0       	breq	.+16     	; 0xa5a <SSD1306_UpdateScreen+0x2e>
		SSD1306_Send_Command(0x08) != SSD1306_ERROR &&  // Start column address (column 8)
     a4a:	88 e0       	ldi	r24, 0x08	; 8
     a4c:	74 dc       	rcall	.-1816   	; 0x336 <SSD1306_Send_Command>
	const uint8_t MAX_RETRIES = 3;  // Max retries
	uint8_t retries = 0;

	// Set the column address window to start at 8th column and end at 15th column (example)
	while (retries < MAX_RETRIES) {
		if (SSD1306_Send_Command(0x21) != SSD1306_ERROR &&  // Command to set column address
     a4e:	81 30       	cpi	r24, 0x01	; 1
		SSD1306_Send_Command(0x08) != SSD1306_ERROR &&  // Start column address (column 8)
		SSD1306_Send_Command(0x0F) != SSD1306_ERROR) { // End column address (column 15)
     a50:	21 f0       	breq	.+8      	; 0xa5a <SSD1306_UpdateScreen+0x2e>
     a52:	8f e0       	ldi	r24, 0x0F	; 15
     a54:	70 dc       	rcall	.-1824   	; 0x336 <SSD1306_Send_Command>
	uint8_t retries = 0;

	// Set the column address window to start at 8th column and end at 15th column (example)
	while (retries < MAX_RETRIES) {
		if (SSD1306_Send_Command(0x21) != SSD1306_ERROR &&  // Command to set column address
		SSD1306_Send_Command(0x08) != SSD1306_ERROR &&  // Start column address (column 8)
     a56:	81 30       	cpi	r24, 0x01	; 1
     a58:	d1 f4       	brne	.+52     	; 0xa8e <SSD1306_UpdateScreen+0x62>
		SSD1306_Send_Command(0x0F) != SSD1306_ERROR) { // End column address (column 15)
			break;  // Success, exit retry loop
		}
		retries++;
     a5a:	89 81       	ldd	r24, Y+1	; 0x01
     a5c:	8f 5f       	subi	r24, 0xFF	; 255
     a5e:	89 83       	std	Y+1, r24	; 0x01
		printf("Error setting column address, retrying... Attempt %d\n", retries);
     a60:	89 81       	ldd	r24, Y+1	; 0x01
     a62:	88 2f       	mov	r24, r24
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	29 2f       	mov	r18, r25
     a68:	2f 93       	push	r18
     a6a:	8f 93       	push	r24
     a6c:	8b e5       	ldi	r24, 0x5B	; 91
     a6e:	91 e0       	ldi	r25, 0x01	; 1
     a70:	89 2f       	mov	r24, r25
     a72:	8f 93       	push	r24
     a74:	8b e5       	ldi	r24, 0x5B	; 91
     a76:	91 e0       	ldi	r25, 0x01	; 1
     a78:	8f 93       	push	r24
     a7a:	09 d6       	rcall	.+3090   	; 0x168e <printf>
     a7c:	0f 90       	pop	r0
     a7e:	0f 90       	pop	r0
     a80:	0f 90       	pop	r0
     a82:	0f 90       	pop	r0
	// Retry parameters
	const uint8_t MAX_RETRIES = 3;  // Max retries
	uint8_t retries = 0;

	// Set the column address window to start at 8th column and end at 15th column (example)
	while (retries < MAX_RETRIES) {
     a84:	99 81       	ldd	r25, Y+1	; 0x01
     a86:	8a 81       	ldd	r24, Y+2	; 0x02
     a88:	98 17       	cp	r25, r24
     a8a:	d8 f2       	brcs	.-74     	; 0xa42 <SSD1306_UpdateScreen+0x16>
     a8c:	01 c0       	rjmp	.+2      	; 0xa90 <SSD1306_UpdateScreen+0x64>
		if (SSD1306_Send_Command(0x21) != SSD1306_ERROR &&  // Command to set column address
		SSD1306_Send_Command(0x08) != SSD1306_ERROR &&  // Start column address (column 8)
		SSD1306_Send_Command(0x0F) != SSD1306_ERROR) { // End column address (column 15)
			break;  // Success, exit retry loop
     a8e:	00 00       	nop
		}
		retries++;
		printf("Error setting column address, retrying... Attempt %d\n", retries);
	}

	if (retries == MAX_RETRIES) {
     a90:	99 81       	ldd	r25, Y+1	; 0x01
     a92:	8a 81       	ldd	r24, Y+2	; 0x02
     a94:	98 17       	cp	r25, r24
     a96:	a1 f4       	brne	.+40     	; 0xac0 <SSD1306_UpdateScreen+0x94>
		printf("Failed to set column address after %d retries.\n", MAX_RETRIES);
     a98:	8a 81       	ldd	r24, Y+2	; 0x02
     a9a:	88 2f       	mov	r24, r24
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	29 2f       	mov	r18, r25
     aa0:	2f 93       	push	r18
     aa2:	8f 93       	push	r24
     aa4:	81 e9       	ldi	r24, 0x91	; 145
     aa6:	91 e0       	ldi	r25, 0x01	; 1
     aa8:	89 2f       	mov	r24, r25
     aaa:	8f 93       	push	r24
     aac:	81 e9       	ldi	r24, 0x91	; 145
     aae:	91 e0       	ldi	r25, 0x01	; 1
     ab0:	8f 93       	push	r24
     ab2:	ed d5       	rcall	.+3034   	; 0x168e <printf>
     ab4:	0f 90       	pop	r0
     ab6:	0f 90       	pop	r0
     ab8:	0f 90       	pop	r0
     aba:	0f 90       	pop	r0
		return SSD1306_ERROR;  // Return error if retries exhausted
     abc:	81 e0       	ldi	r24, 0x01	; 1
	}

	retries = 0;  // Reset retries for page address
     abe:	42 c0       	rjmp	.+132    	; 0xb44 <SSD1306_UpdateScreen+0x118>
	// Set the page address window to 0 (if using a single page)
	while (retries < MAX_RETRIES) {
     ac0:	19 82       	std	Y+1, r1	; 0x01
		if (SSD1306_Send_Command(0x22) != SSD1306_ERROR &&  // Command to set page address
     ac2:	21 c0       	rjmp	.+66     	; 0xb06 <SSD1306_UpdateScreen+0xda>
     ac4:	82 e2       	ldi	r24, 0x22	; 34
     ac6:	37 dc       	rcall	.-1938   	; 0x336 <SSD1306_Send_Command>
     ac8:	81 30       	cpi	r24, 0x01	; 1
		SSD1306_Send_Command(0x00) != SSD1306_ERROR &&  // Start page address (page 0)
     aca:	41 f0       	breq	.+16     	; 0xadc <SSD1306_UpdateScreen+0xb0>
     acc:	80 e0       	ldi	r24, 0x00	; 0
     ace:	33 dc       	rcall	.-1946   	; 0x336 <SSD1306_Send_Command>
	}

	retries = 0;  // Reset retries for page address
	// Set the page address window to 0 (if using a single page)
	while (retries < MAX_RETRIES) {
		if (SSD1306_Send_Command(0x22) != SSD1306_ERROR &&  // Command to set page address
     ad0:	81 30       	cpi	r24, 0x01	; 1
     ad2:	21 f0       	breq	.+8      	; 0xadc <SSD1306_UpdateScreen+0xb0>
		SSD1306_Send_Command(0x00) != SSD1306_ERROR &&  // Start page address (page 0)
		SSD1306_Send_Command(0x00) != SSD1306_ERROR) {  // End page address (page 0, assuming single page)
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	2f dc       	rcall	.-1954   	; 0x336 <SSD1306_Send_Command>
     ad8:	81 30       	cpi	r24, 0x01	; 1

	retries = 0;  // Reset retries for page address
	// Set the page address window to 0 (if using a single page)
	while (retries < MAX_RETRIES) {
		if (SSD1306_Send_Command(0x22) != SSD1306_ERROR &&  // Command to set page address
		SSD1306_Send_Command(0x00) != SSD1306_ERROR &&  // Start page address (page 0)
     ada:	d1 f4       	brne	.+52     	; 0xb10 <SSD1306_UpdateScreen+0xe4>
     adc:	89 81       	ldd	r24, Y+1	; 0x01
		SSD1306_Send_Command(0x00) != SSD1306_ERROR) {  // End page address (page 0, assuming single page)
			break;  // Success, exit retry loop
		}
		retries++;
     ade:	8f 5f       	subi	r24, 0xFF	; 255
     ae0:	89 83       	std	Y+1, r24	; 0x01
     ae2:	89 81       	ldd	r24, Y+1	; 0x01
		printf("Error setting page address, retrying... Attempt %d\n", retries);
     ae4:	88 2f       	mov	r24, r24
     ae6:	90 e0       	ldi	r25, 0x00	; 0
     ae8:	29 2f       	mov	r18, r25
     aea:	2f 93       	push	r18
     aec:	8f 93       	push	r24
     aee:	81 ec       	ldi	r24, 0xC1	; 193
     af0:	91 e0       	ldi	r25, 0x01	; 1
     af2:	89 2f       	mov	r24, r25
     af4:	8f 93       	push	r24
     af6:	81 ec       	ldi	r24, 0xC1	; 193
     af8:	91 e0       	ldi	r25, 0x01	; 1
     afa:	8f 93       	push	r24
     afc:	c8 d5       	rcall	.+2960   	; 0x168e <printf>
     afe:	0f 90       	pop	r0
     b00:	0f 90       	pop	r0
     b02:	0f 90       	pop	r0
     b04:	0f 90       	pop	r0
     b06:	99 81       	ldd	r25, Y+1	; 0x01
		return SSD1306_ERROR;  // Return error if retries exhausted
	}

	retries = 0;  // Reset retries for page address
	// Set the page address window to 0 (if using a single page)
	while (retries < MAX_RETRIES) {
     b08:	8a 81       	ldd	r24, Y+2	; 0x02
     b0a:	98 17       	cp	r25, r24
     b0c:	d8 f2       	brcs	.-74     	; 0xac4 <SSD1306_UpdateScreen+0x98>
     b0e:	01 c0       	rjmp	.+2      	; 0xb12 <SSD1306_UpdateScreen+0xe6>
     b10:	00 00       	nop
		if (SSD1306_Send_Command(0x22) != SSD1306_ERROR &&  // Command to set page address
		SSD1306_Send_Command(0x00) != SSD1306_ERROR &&  // Start page address (page 0)
		SSD1306_Send_Command(0x00) != SSD1306_ERROR) {  // End page address (page 0, assuming single page)
			break;  // Success, exit retry loop
     b12:	99 81       	ldd	r25, Y+1	; 0x01
		}
		retries++;
		printf("Error setting page address, retrying... Attempt %d\n", retries);
	}

	if (retries == MAX_RETRIES) {
     b14:	8a 81       	ldd	r24, Y+2	; 0x02
     b16:	98 17       	cp	r25, r24
     b18:	a1 f4       	brne	.+40     	; 0xb42 <SSD1306_UpdateScreen+0x116>
     b1a:	8a 81       	ldd	r24, Y+2	; 0x02
		printf("Failed to set page address after %d retries.\n", MAX_RETRIES);
     b1c:	88 2f       	mov	r24, r24
     b1e:	90 e0       	ldi	r25, 0x00	; 0
     b20:	29 2f       	mov	r18, r25
     b22:	2f 93       	push	r18
     b24:	8f 93       	push	r24
     b26:	85 ef       	ldi	r24, 0xF5	; 245
     b28:	91 e0       	ldi	r25, 0x01	; 1
     b2a:	89 2f       	mov	r24, r25
     b2c:	8f 93       	push	r24
     b2e:	85 ef       	ldi	r24, 0xF5	; 245
     b30:	91 e0       	ldi	r25, 0x01	; 1
     b32:	8f 93       	push	r24
     b34:	ac d5       	rcall	.+2904   	; 0x168e <printf>
     b36:	0f 90       	pop	r0
     b38:	0f 90       	pop	r0
     b3a:	0f 90       	pop	r0
     b3c:	0f 90       	pop	r0
     b3e:	81 e0       	ldi	r24, 0x01	; 1
		return SSD1306_ERROR;  // Return error if retries exhausted
     b40:	01 c0       	rjmp	.+2      	; 0xb44 <SSD1306_UpdateScreen+0x118>
     b42:	80 e0       	ldi	r24, 0x00	; 0
	}

	// Continue sending other commands and updating data here...
	
	return SSD1306_SUCCESS;  // Success after all retries
     b44:	0f 90       	pop	r0
}
     b46:	0f 90       	pop	r0
     b48:	0f 90       	pop	r0
     b4a:	df 91       	pop	r29
     b4c:	cf 91       	pop	r28
     b4e:	08 95       	ret

00000b50 <TWI_Init>:
     b50:	cf 93       	push	r28
    // return status
    return TWI_STATUS;
  }
  // success
  return SUCCESS;
}
     b52:	df 93       	push	r29
     b54:	cd b7       	in	r28, 0x3d	; 61
     b56:	de b7       	in	r29, 0x3e	; 62
     b58:	88 eb       	ldi	r24, 0xB8	; 184
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	22 e0       	ldi	r18, 0x02	; 2
     b5e:	fc 01       	movw	r30, r24
     b60:	20 83       	st	Z, r18
     b62:	89 eb       	ldi	r24, 0xB9	; 185
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	fc 01       	movw	r30, r24
     b68:	80 81       	ld	r24, Z
     b6a:	88 2f       	mov	r24, r24
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	82 70       	andi	r24, 0x02	; 2
     b70:	99 27       	eor	r25, r25
     b72:	ac 01       	movw	r20, r24
     b74:	41 60       	ori	r20, 0x01	; 1
     b76:	89 eb       	ldi	r24, 0xB9	; 185
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	29 eb       	ldi	r18, 0xB9	; 185
     b7c:	30 e0       	ldi	r19, 0x00	; 0
     b7e:	f9 01       	movw	r30, r18
     b80:	20 81       	ld	r18, Z
     b82:	32 2f       	mov	r19, r18
     b84:	24 2f       	mov	r18, r20
     b86:	23 2b       	or	r18, r19
     b88:	fc 01       	movw	r30, r24
     b8a:	20 83       	st	Z, r18
     b8c:	00 00       	nop
     b8e:	df 91       	pop	r29
     b90:	cf 91       	pop	r28
     b92:	08 95       	ret

00000b94 <TWI_MT_Start>:
     b94:	cf 93       	push	r28
     b96:	df 93       	push	r29
     b98:	cd b7       	in	r28, 0x3d	; 61
     b9a:	de b7       	in	r29, 0x3e	; 62
     b9c:	89 eb       	ldi	r24, 0xB9	; 185
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	29 eb       	ldi	r18, 0xB9	; 185
     ba2:	30 e0       	ldi	r19, 0x00	; 0
     ba4:	f9 01       	movw	r30, r18
     ba6:	20 81       	ld	r18, Z
     ba8:	27 75       	andi	r18, 0x57	; 87
     baa:	fc 01       	movw	r30, r24
     bac:	20 83       	st	Z, r18
     bae:	8c eb       	ldi	r24, 0xBC	; 188
     bb0:	90 e0       	ldi	r25, 0x00	; 0
     bb2:	24 ea       	ldi	r18, 0xA4	; 164
     bb4:	fc 01       	movw	r30, r24
     bb6:	20 83       	st	Z, r18
     bb8:	00 00       	nop
     bba:	8c eb       	ldi	r24, 0xBC	; 188
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	fc 01       	movw	r30, r24
     bc0:	80 81       	ld	r24, Z
     bc2:	88 23       	and	r24, r24
     bc4:	d4 f7       	brge	.-12     	; 0xbba <TWI_MT_Start+0x26>
     bc6:	89 eb       	ldi	r24, 0xB9	; 185
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	fc 01       	movw	r30, r24
     bcc:	80 81       	ld	r24, Z
     bce:	88 2f       	mov	r24, r24
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	88 7f       	andi	r24, 0xF8	; 248
     bd4:	99 27       	eor	r25, r25
     bd6:	08 97       	sbiw	r24, 0x08	; 8
     bd8:	81 f0       	breq	.+32     	; 0xbfa <TWI_MT_Start+0x66>
     bda:	89 eb       	ldi	r24, 0xB9	; 185
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	fc 01       	movw	r30, r24
     be0:	80 81       	ld	r24, Z
     be2:	88 2f       	mov	r24, r24
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	88 7f       	andi	r24, 0xF8	; 248
     be8:	99 27       	eor	r25, r25
     bea:	40 97       	sbiw	r24, 0x10	; 16
     bec:	31 f0       	breq	.+12     	; 0xbfa <TWI_MT_Start+0x66>
     bee:	89 eb       	ldi	r24, 0xB9	; 185
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	fc 01       	movw	r30, r24
     bf4:	80 81       	ld	r24, Z
     bf6:	88 7f       	andi	r24, 0xF8	; 248
     bf8:	01 c0       	rjmp	.+2      	; 0xbfc <TWI_MT_Start+0x68>
     bfa:	80 e0       	ldi	r24, 0x00	; 0
     bfc:	df 91       	pop	r29
     bfe:	cf 91       	pop	r28
     c00:	08 95       	ret

00000c02 <TWI_MT_Send_SLAW>:
     c02:	cf 93       	push	r28
     c04:	df 93       	push	r29
     c06:	1f 92       	push	r1
     c08:	cd b7       	in	r28, 0x3d	; 61
     c0a:	de b7       	in	r29, 0x3e	; 62
     c0c:	89 83       	std	Y+1, r24	; 0x01
     c0e:	8b eb       	ldi	r24, 0xBB	; 187
     c10:	90 e0       	ldi	r25, 0x00	; 0
     c12:	29 81       	ldd	r18, Y+1	; 0x01
     c14:	22 0f       	add	r18, r18
     c16:	fc 01       	movw	r30, r24
     c18:	20 83       	st	Z, r18
     c1a:	8c eb       	ldi	r24, 0xBC	; 188
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	24 e8       	ldi	r18, 0x84	; 132
     c20:	fc 01       	movw	r30, r24
     c22:	20 83       	st	Z, r18
     c24:	00 00       	nop
     c26:	8c eb       	ldi	r24, 0xBC	; 188
     c28:	90 e0       	ldi	r25, 0x00	; 0
     c2a:	fc 01       	movw	r30, r24
     c2c:	80 81       	ld	r24, Z
     c2e:	88 23       	and	r24, r24
     c30:	d4 f7       	brge	.-12     	; 0xc26 <TWI_MT_Send_SLAW+0x24>
     c32:	89 eb       	ldi	r24, 0xB9	; 185
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	fc 01       	movw	r30, r24
     c38:	80 81       	ld	r24, Z
     c3a:	88 2f       	mov	r24, r24
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	88 7f       	andi	r24, 0xF8	; 248
     c40:	99 27       	eor	r25, r25
     c42:	48 97       	sbiw	r24, 0x18	; 24
     c44:	31 f0       	breq	.+12     	; 0xc52 <TWI_MT_Send_SLAW+0x50>
     c46:	89 eb       	ldi	r24, 0xB9	; 185
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	fc 01       	movw	r30, r24
     c4c:	80 81       	ld	r24, Z
     c4e:	88 7f       	andi	r24, 0xF8	; 248
     c50:	01 c0       	rjmp	.+2      	; 0xc54 <TWI_MT_Send_SLAW+0x52>
     c52:	80 e0       	ldi	r24, 0x00	; 0
     c54:	0f 90       	pop	r0
     c56:	df 91       	pop	r29
     c58:	cf 91       	pop	r28
     c5a:	08 95       	ret

00000c5c <TWI_MT_Send_Data>:
     c5c:	cf 93       	push	r28
     c5e:	df 93       	push	r29
     c60:	1f 92       	push	r1
     c62:	cd b7       	in	r28, 0x3d	; 61
     c64:	de b7       	in	r29, 0x3e	; 62
     c66:	89 83       	std	Y+1, r24	; 0x01
     c68:	8b eb       	ldi	r24, 0xBB	; 187
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	29 81       	ldd	r18, Y+1	; 0x01
     c6e:	fc 01       	movw	r30, r24
     c70:	20 83       	st	Z, r18
     c72:	8c eb       	ldi	r24, 0xBC	; 188
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	24 e8       	ldi	r18, 0x84	; 132
     c78:	fc 01       	movw	r30, r24
     c7a:	20 83       	st	Z, r18
     c7c:	00 00       	nop
     c7e:	8c eb       	ldi	r24, 0xBC	; 188
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	fc 01       	movw	r30, r24
     c84:	80 81       	ld	r24, Z
     c86:	88 23       	and	r24, r24
     c88:	d4 f7       	brge	.-12     	; 0xc7e <TWI_MT_Send_Data+0x22>
     c8a:	89 eb       	ldi	r24, 0xB9	; 185
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	fc 01       	movw	r30, r24
     c90:	80 81       	ld	r24, Z
     c92:	88 2f       	mov	r24, r24
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	88 7f       	andi	r24, 0xF8	; 248
     c98:	99 27       	eor	r25, r25
     c9a:	88 97       	sbiw	r24, 0x28	; 40
     c9c:	31 f0       	breq	.+12     	; 0xcaa <TWI_MT_Send_Data+0x4e>
     c9e:	89 eb       	ldi	r24, 0xB9	; 185
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	fc 01       	movw	r30, r24
     ca4:	80 81       	ld	r24, Z
     ca6:	88 7f       	andi	r24, 0xF8	; 248
     ca8:	01 c0       	rjmp	.+2      	; 0xcac <TWI_MT_Send_Data+0x50>
     caa:	80 e0       	ldi	r24, 0x00	; 0
     cac:	0f 90       	pop	r0
     cae:	df 91       	pop	r29
     cb0:	cf 91       	pop	r28
     cb2:	08 95       	ret

00000cb4 <TWI_Stop>:
 * @param   void
 *
 * @return  void
 */
void TWI_Stop (void)
{
     cb4:	cf 93       	push	r28
     cb6:	df 93       	push	r29
     cb8:	cd b7       	in	r28, 0x3d	; 61
     cba:	de b7       	in	r29, 0x3e	; 62
  // End TWI
  // -------------------------------------------------------------------------------------
  // send stop sequence
  TWI_STOP ();
     cbc:	8c eb       	ldi	r24, 0xBC	; 188
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	24 e9       	ldi	r18, 0x94	; 148
     cc2:	fc 01       	movw	r30, r24
     cc4:	20 83       	st	Z, r18
  // wait for TWINT flag is set
//  TWI_WAIT_TILL_TWINT_IS_SET();
}
     cc6:	00 00       	nop
     cc8:	df 91       	pop	r29
     cca:	cf 91       	pop	r28
     ccc:	08 95       	ret

00000cce <setupFunctionCallPointer>:
	((*ReceivedChar >= 0x61) && (*ReceivedChar <= 0x7D)))
	{
		*ReceivedChar = *ReceivedChar ^ Upper_Lower_Bit_Value;
	}

}
     cce:	cf 93       	push	r28
     cd0:	df 93       	push	r29
     cd2:	00 d0       	rcall	.+0      	; 0xcd4 <setupFunctionCallPointer+0x6>
     cd4:	cd b7       	in	r28, 0x3d	; 61
     cd6:	de b7       	in	r29, 0x3e	; 62
     cd8:	9a 83       	std	Y+2, r25	; 0x02
     cda:	89 83       	std	Y+1, r24	; 0x01
     cdc:	89 81       	ldd	r24, Y+1	; 0x01
     cde:	9a 81       	ldd	r25, Y+2	; 0x02
     ce0:	90 93 09 05 	sts	0x0509, r25	; 0x800509 <callback_function_pointer+0x1>
     ce4:	80 93 08 05 	sts	0x0508, r24	; 0x800508 <callback_function_pointer>
     ce8:	00 00       	nop
     cea:	0f 90       	pop	r0
     cec:	0f 90       	pop	r0
     cee:	df 91       	pop	r29
     cf0:	cf 91       	pop	r28
     cf2:	08 95       	ret

00000cf4 <RS232Init>:
     cf4:	cf 93       	push	r28
     cf6:	df 93       	push	r29
     cf8:	00 d0       	rcall	.+0      	; 0xcfa <RS232Init+0x6>
     cfa:	cd b7       	in	r28, 0x3d	; 61
     cfc:	de b7       	in	r29, 0x3e	; 62
     cfe:	87 e6       	ldi	r24, 0x67	; 103
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	9a 83       	std	Y+2, r25	; 0x02
     d04:	89 83       	std	Y+1, r24	; 0x01
     d06:	8c ec       	ldi	r24, 0xCC	; 204
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	29 81       	ldd	r18, Y+1	; 0x01
     d0c:	fc 01       	movw	r30, r24
     d0e:	20 83       	st	Z, r18
     d10:	8d ec       	ldi	r24, 0xCD	; 205
     d12:	90 e0       	ldi	r25, 0x00	; 0
     d14:	29 81       	ldd	r18, Y+1	; 0x01
     d16:	3a 81       	ldd	r19, Y+2	; 0x02
     d18:	23 2f       	mov	r18, r19
     d1a:	33 27       	eor	r19, r19
     d1c:	fc 01       	movw	r30, r24
     d1e:	20 83       	st	Z, r18
     d20:	88 ec       	ldi	r24, 0xC8	; 200
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	fc 01       	movw	r30, r24
     d26:	10 82       	st	Z, r1
     d28:	89 ec       	ldi	r24, 0xC9	; 201
     d2a:	90 e0       	ldi	r25, 0x00	; 0
     d2c:	28 e1       	ldi	r18, 0x18	; 24
     d2e:	fc 01       	movw	r30, r24
     d30:	20 83       	st	Z, r18
     d32:	8a ec       	ldi	r24, 0xCA	; 202
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	26 e0       	ldi	r18, 0x06	; 6
     d38:	fc 01       	movw	r30, r24
     d3a:	20 83       	st	Z, r18
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	91 e0       	ldi	r25, 0x01	; 1
     d40:	90 93 11 05 	sts	0x0511, r25	; 0x800511 <__iob+0x3>
     d44:	80 93 10 05 	sts	0x0510, r24	; 0x800510 <__iob+0x2>
     d48:	8e e0       	ldi	r24, 0x0E	; 14
     d4a:	91 e0       	ldi	r25, 0x01	; 1
     d4c:	90 93 0f 05 	sts	0x050F, r25	; 0x80050f <__iob+0x1>
     d50:	80 93 0e 05 	sts	0x050E, r24	; 0x80050e <__iob>
     d54:	00 00       	nop
     d56:	0f 90       	pop	r0
     d58:	0f 90       	pop	r0
     d5a:	df 91       	pop	r29
     d5c:	cf 91       	pop	r28
     d5e:	08 95       	ret

00000d60 <Enable_UART_Receive_Interrupt>:
     d60:	cf 93       	push	r28
     d62:	df 93       	push	r29
     d64:	cd b7       	in	r28, 0x3d	; 61
     d66:	de b7       	in	r29, 0x3e	; 62
     d68:	89 ec       	ldi	r24, 0xC9	; 201
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	29 ec       	ldi	r18, 0xC9	; 201
     d6e:	30 e0       	ldi	r19, 0x00	; 0
     d70:	f9 01       	movw	r30, r18
     d72:	20 81       	ld	r18, Z
     d74:	20 68       	ori	r18, 0x80	; 128
     d76:	fc 01       	movw	r30, r24
     d78:	20 83       	st	Z, r18
     d7a:	00 00       	nop
     d7c:	df 91       	pop	r29
     d7e:	cf 91       	pop	r28
     d80:	08 95       	ret

00000d82 <uart_getch>:
     d82:	cf 93       	push	r28
     d84:	df 93       	push	r29
     d86:	00 d0       	rcall	.+0      	; 0xd88 <uart_getch+0x6>
     d88:	cd b7       	in	r28, 0x3d	; 61
     d8a:	de b7       	in	r29, 0x3e	; 62
     d8c:	9a 83       	std	Y+2, r25	; 0x02
     d8e:	89 83       	std	Y+1, r24	; 0x01
     d90:	00 00       	nop
     d92:	88 ec       	ldi	r24, 0xC8	; 200
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	fc 01       	movw	r30, r24
     d98:	80 81       	ld	r24, Z
     d9a:	88 23       	and	r24, r24
     d9c:	d4 f7       	brge	.-12     	; 0xd92 <uart_getch+0x10>
     d9e:	8e ec       	ldi	r24, 0xCE	; 206
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	fc 01       	movw	r30, r24
     da4:	80 81       	ld	r24, Z
     da6:	88 2f       	mov	r24, r24
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	0f 90       	pop	r0
     dac:	0f 90       	pop	r0
     dae:	df 91       	pop	r29
     db0:	cf 91       	pop	r28
     db2:	08 95       	ret

00000db4 <uart_putch>:
     db4:	cf 93       	push	r28
     db6:	df 93       	push	r29
     db8:	00 d0       	rcall	.+0      	; 0xdba <uart_putch+0x6>
     dba:	1f 92       	push	r1
     dbc:	cd b7       	in	r28, 0x3d	; 61
     dbe:	de b7       	in	r29, 0x3e	; 62
     dc0:	89 83       	std	Y+1, r24	; 0x01
     dc2:	7b 83       	std	Y+3, r23	; 0x03
     dc4:	6a 83       	std	Y+2, r22	; 0x02
     dc6:	00 00       	nop
     dc8:	88 ec       	ldi	r24, 0xC8	; 200
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	fc 01       	movw	r30, r24
     dce:	80 81       	ld	r24, Z
     dd0:	88 2f       	mov	r24, r24
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	80 72       	andi	r24, 0x20	; 32
     dd6:	99 27       	eor	r25, r25
     dd8:	89 2b       	or	r24, r25
     dda:	b1 f3       	breq	.-20     	; 0xdc8 <uart_putch+0x14>
     ddc:	8e ec       	ldi	r24, 0xCE	; 206
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	29 81       	ldd	r18, Y+1	; 0x01
     de2:	fc 01       	movw	r30, r24
     de4:	20 83       	st	Z, r18
     de6:	80 e0       	ldi	r24, 0x00	; 0
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	0f 90       	pop	r0
     dec:	0f 90       	pop	r0
     dee:	0f 90       	pop	r0
     df0:	df 91       	pop	r29
     df2:	cf 91       	pop	r28
     df4:	08 95       	ret

00000df6 <UART_BufferPut>:
     df6:	cf 93       	push	r28
     df8:	df 93       	push	r29
     dfa:	00 d0       	rcall	.+0      	; 0xdfc <UART_BufferPut+0x6>
     dfc:	00 d0       	rcall	.+0      	; 0xdfe <UART_BufferPut+0x8>
     dfe:	cd b7       	in	r28, 0x3d	; 61
     e00:	de b7       	in	r29, 0x3e	; 62
     e02:	9b 83       	std	Y+3, r25	; 0x03
     e04:	8a 83       	std	Y+2, r24	; 0x02
     e06:	6c 83       	std	Y+4, r22	; 0x04
     e08:	8a 81       	ldd	r24, Y+2	; 0x02
     e0a:	9b 81       	ldd	r25, Y+3	; 0x03
     e0c:	80 5c       	subi	r24, 0xC0	; 192
     e0e:	9f 4f       	sbci	r25, 0xFF	; 255
     e10:	fc 01       	movw	r30, r24
     e12:	80 81       	ld	r24, Z
     e14:	88 2f       	mov	r24, r24
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	01 96       	adiw	r24, 0x01	; 1
     e1a:	8f 73       	andi	r24, 0x3F	; 63
     e1c:	90 78       	andi	r25, 0x80	; 128
     e1e:	99 23       	and	r25, r25
     e20:	24 f4       	brge	.+8      	; 0xe2a <UART_BufferPut+0x34>
     e22:	01 97       	sbiw	r24, 0x01	; 1
     e24:	80 6c       	ori	r24, 0xC0	; 192
     e26:	9f 6f       	ori	r25, 0xFF	; 255
     e28:	01 96       	adiw	r24, 0x01	; 1
     e2a:	89 83       	std	Y+1, r24	; 0x01
     e2c:	8a 81       	ldd	r24, Y+2	; 0x02
     e2e:	9b 81       	ldd	r25, Y+3	; 0x03
     e30:	8f 5b       	subi	r24, 0xBF	; 191
     e32:	9f 4f       	sbci	r25, 0xFF	; 255
     e34:	fc 01       	movw	r30, r24
     e36:	90 81       	ld	r25, Z
     e38:	89 81       	ldd	r24, Y+1	; 0x01
     e3a:	98 17       	cp	r25, r24
     e3c:	b1 f1       	breq	.+108    	; 0xeaa <UART_BufferPut+0xb4>
     e3e:	8a 81       	ldd	r24, Y+2	; 0x02
     e40:	9b 81       	ldd	r25, Y+3	; 0x03
     e42:	80 5c       	subi	r24, 0xC0	; 192
     e44:	9f 4f       	sbci	r25, 0xFF	; 255
     e46:	fc 01       	movw	r30, r24
     e48:	80 81       	ld	r24, Z
     e4a:	88 2f       	mov	r24, r24
     e4c:	90 e0       	ldi	r25, 0x00	; 0
     e4e:	2a 81       	ldd	r18, Y+2	; 0x02
     e50:	3b 81       	ldd	r19, Y+3	; 0x03
     e52:	82 0f       	add	r24, r18
     e54:	93 1f       	adc	r25, r19
     e56:	2c 81       	ldd	r18, Y+4	; 0x04
     e58:	fc 01       	movw	r30, r24
     e5a:	20 83       	st	Z, r18
     e5c:	8a 81       	ldd	r24, Y+2	; 0x02
     e5e:	9b 81       	ldd	r25, Y+3	; 0x03
     e60:	80 5c       	subi	r24, 0xC0	; 192
     e62:	9f 4f       	sbci	r25, 0xFF	; 255
     e64:	29 81       	ldd	r18, Y+1	; 0x01
     e66:	fc 01       	movw	r30, r24
     e68:	20 83       	st	Z, r18
     e6a:	8a 81       	ldd	r24, Y+2	; 0x02
     e6c:	9b 81       	ldd	r25, Y+3	; 0x03
     e6e:	80 5c       	subi	r24, 0xC0	; 192
     e70:	9f 4f       	sbci	r25, 0xFF	; 255
     e72:	fc 01       	movw	r30, r24
     e74:	80 81       	ld	r24, Z
     e76:	28 2f       	mov	r18, r24
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	8c 81       	ldd	r24, Y+4	; 0x04
     e7c:	88 2f       	mov	r24, r24
     e7e:	90 e0       	ldi	r25, 0x00	; 0
     e80:	43 2f       	mov	r20, r19
     e82:	4f 93       	push	r20
     e84:	2f 93       	push	r18
     e86:	29 2f       	mov	r18, r25
     e88:	2f 93       	push	r18
     e8a:	8f 93       	push	r24
     e8c:	83 e2       	ldi	r24, 0x23	; 35
     e8e:	92 e0       	ldi	r25, 0x02	; 2
     e90:	89 2f       	mov	r24, r25
     e92:	8f 93       	push	r24
     e94:	83 e2       	ldi	r24, 0x23	; 35
     e96:	92 e0       	ldi	r25, 0x02	; 2
     e98:	8f 93       	push	r24
     e9a:	f9 d3       	rcall	.+2034   	; 0x168e <printf>
     e9c:	0f 90       	pop	r0
     e9e:	0f 90       	pop	r0
     ea0:	0f 90       	pop	r0
     ea2:	0f 90       	pop	r0
     ea4:	0f 90       	pop	r0
     ea6:	0f 90       	pop	r0
     ea8:	12 c0       	rjmp	.+36     	; 0xece <UART_BufferPut+0xd8>
     eaa:	8c 81       	ldd	r24, Y+4	; 0x04
     eac:	88 2f       	mov	r24, r24
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	29 2f       	mov	r18, r25
     eb2:	2f 93       	push	r18
     eb4:	8f 93       	push	r24
     eb6:	87 e4       	ldi	r24, 0x47	; 71
     eb8:	92 e0       	ldi	r25, 0x02	; 2
     eba:	89 2f       	mov	r24, r25
     ebc:	8f 93       	push	r24
     ebe:	87 e4       	ldi	r24, 0x47	; 71
     ec0:	92 e0       	ldi	r25, 0x02	; 2
     ec2:	8f 93       	push	r24
     ec4:	e4 d3       	rcall	.+1992   	; 0x168e <printf>
     ec6:	0f 90       	pop	r0
     ec8:	0f 90       	pop	r0
     eca:	0f 90       	pop	r0
     ecc:	0f 90       	pop	r0
     ece:	00 00       	nop
     ed0:	0f 90       	pop	r0
     ed2:	0f 90       	pop	r0
     ed4:	0f 90       	pop	r0
     ed6:	0f 90       	pop	r0
     ed8:	df 91       	pop	r29
     eda:	cf 91       	pop	r28
     edc:	08 95       	ret

00000ede <UART_BufferGet>:
     ede:	cf 93       	push	r28
     ee0:	df 93       	push	r29
     ee2:	00 d0       	rcall	.+0      	; 0xee4 <UART_BufferGet+0x6>
     ee4:	00 d0       	rcall	.+0      	; 0xee6 <UART_BufferGet+0x8>
     ee6:	cd b7       	in	r28, 0x3d	; 61
     ee8:	de b7       	in	r29, 0x3e	; 62
     eea:	9a 83       	std	Y+2, r25	; 0x02
     eec:	89 83       	std	Y+1, r24	; 0x01
     eee:	7c 83       	std	Y+4, r23	; 0x04
     ef0:	6b 83       	std	Y+3, r22	; 0x03
     ef2:	89 81       	ldd	r24, Y+1	; 0x01
     ef4:	9a 81       	ldd	r25, Y+2	; 0x02
     ef6:	80 5c       	subi	r24, 0xC0	; 192
     ef8:	9f 4f       	sbci	r25, 0xFF	; 255
     efa:	fc 01       	movw	r30, r24
     efc:	20 81       	ld	r18, Z
     efe:	89 81       	ldd	r24, Y+1	; 0x01
     f00:	9a 81       	ldd	r25, Y+2	; 0x02
     f02:	8f 5b       	subi	r24, 0xBF	; 191
     f04:	9f 4f       	sbci	r25, 0xFF	; 255
     f06:	fc 01       	movw	r30, r24
     f08:	80 81       	ld	r24, Z
     f0a:	28 17       	cp	r18, r24
     f0c:	31 f4       	brne	.+12     	; 0xf1a <UART_BufferGet+0x3c>
     f0e:	85 e7       	ldi	r24, 0x75	; 117
     f10:	92 e0       	ldi	r25, 0x02	; 2
     f12:	d0 d3       	rcall	.+1952   	; 0x16b4 <puts>
     f14:	8f ef       	ldi	r24, 0xFF	; 255
     f16:	9f ef       	ldi	r25, 0xFF	; 255
     f18:	4e c0       	rjmp	.+156    	; 0xfb6 <UART_BufferGet+0xd8>
     f1a:	89 81       	ldd	r24, Y+1	; 0x01
     f1c:	9a 81       	ldd	r25, Y+2	; 0x02
     f1e:	8f 5b       	subi	r24, 0xBF	; 191
     f20:	9f 4f       	sbci	r25, 0xFF	; 255
     f22:	fc 01       	movw	r30, r24
     f24:	80 81       	ld	r24, Z
     f26:	88 2f       	mov	r24, r24
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	29 81       	ldd	r18, Y+1	; 0x01
     f2c:	3a 81       	ldd	r19, Y+2	; 0x02
     f2e:	82 0f       	add	r24, r18
     f30:	93 1f       	adc	r25, r19
     f32:	fc 01       	movw	r30, r24
     f34:	20 81       	ld	r18, Z
     f36:	8b 81       	ldd	r24, Y+3	; 0x03
     f38:	9c 81       	ldd	r25, Y+4	; 0x04
     f3a:	fc 01       	movw	r30, r24
     f3c:	20 83       	st	Z, r18
     f3e:	89 81       	ldd	r24, Y+1	; 0x01
     f40:	9a 81       	ldd	r25, Y+2	; 0x02
     f42:	8f 5b       	subi	r24, 0xBF	; 191
     f44:	9f 4f       	sbci	r25, 0xFF	; 255
     f46:	fc 01       	movw	r30, r24
     f48:	80 81       	ld	r24, Z
     f4a:	28 2f       	mov	r18, r24
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	8b 81       	ldd	r24, Y+3	; 0x03
     f50:	9c 81       	ldd	r25, Y+4	; 0x04
     f52:	fc 01       	movw	r30, r24
     f54:	80 81       	ld	r24, Z
     f56:	88 2f       	mov	r24, r24
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	43 2f       	mov	r20, r19
     f5c:	4f 93       	push	r20
     f5e:	2f 93       	push	r18
     f60:	29 2f       	mov	r18, r25
     f62:	2f 93       	push	r18
     f64:	8f 93       	push	r24
     f66:	81 e9       	ldi	r24, 0x91	; 145
     f68:	92 e0       	ldi	r25, 0x02	; 2
     f6a:	89 2f       	mov	r24, r25
     f6c:	8f 93       	push	r24
     f6e:	81 e9       	ldi	r24, 0x91	; 145
     f70:	92 e0       	ldi	r25, 0x02	; 2
     f72:	8f 93       	push	r24
     f74:	8c d3       	rcall	.+1816   	; 0x168e <printf>
     f76:	0f 90       	pop	r0
     f78:	0f 90       	pop	r0
     f7a:	0f 90       	pop	r0
     f7c:	0f 90       	pop	r0
     f7e:	0f 90       	pop	r0
     f80:	0f 90       	pop	r0
     f82:	89 81       	ldd	r24, Y+1	; 0x01
     f84:	9a 81       	ldd	r25, Y+2	; 0x02
     f86:	8f 5b       	subi	r24, 0xBF	; 191
     f88:	9f 4f       	sbci	r25, 0xFF	; 255
     f8a:	fc 01       	movw	r30, r24
     f8c:	80 81       	ld	r24, Z
     f8e:	88 2f       	mov	r24, r24
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	01 96       	adiw	r24, 0x01	; 1
     f94:	8f 73       	andi	r24, 0x3F	; 63
     f96:	90 78       	andi	r25, 0x80	; 128
     f98:	99 23       	and	r25, r25
     f9a:	24 f4       	brge	.+8      	; 0xfa4 <UART_BufferGet+0xc6>
     f9c:	01 97       	sbiw	r24, 0x01	; 1
     f9e:	80 6c       	ori	r24, 0xC0	; 192
     fa0:	9f 6f       	ori	r25, 0xFF	; 255
     fa2:	01 96       	adiw	r24, 0x01	; 1
     fa4:	28 2f       	mov	r18, r24
     fa6:	89 81       	ldd	r24, Y+1	; 0x01
     fa8:	9a 81       	ldd	r25, Y+2	; 0x02
     faa:	8f 5b       	subi	r24, 0xBF	; 191
     fac:	9f 4f       	sbci	r25, 0xFF	; 255
     fae:	fc 01       	movw	r30, r24
     fb0:	20 83       	st	Z, r18
     fb2:	80 e0       	ldi	r24, 0x00	; 0
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	0f 90       	pop	r0
     fb8:	0f 90       	pop	r0
     fba:	0f 90       	pop	r0
     fbc:	0f 90       	pop	r0
     fbe:	df 91       	pop	r29
     fc0:	cf 91       	pop	r28
     fc2:	08 95       	ret

00000fc4 <UART_BufferAvailable>:
     fc4:	cf 93       	push	r28
     fc6:	df 93       	push	r29
     fc8:	00 d0       	rcall	.+0      	; 0xfca <UART_BufferAvailable+0x6>
     fca:	cd b7       	in	r28, 0x3d	; 61
     fcc:	de b7       	in	r29, 0x3e	; 62
     fce:	9a 83       	std	Y+2, r25	; 0x02
     fd0:	89 83       	std	Y+1, r24	; 0x01
     fd2:	89 81       	ldd	r24, Y+1	; 0x01
     fd4:	9a 81       	ldd	r25, Y+2	; 0x02
     fd6:	80 5c       	subi	r24, 0xC0	; 192
     fd8:	9f 4f       	sbci	r25, 0xFF	; 255
     fda:	fc 01       	movw	r30, r24
     fdc:	20 81       	ld	r18, Z
     fde:	89 81       	ldd	r24, Y+1	; 0x01
     fe0:	9a 81       	ldd	r25, Y+2	; 0x02
     fe2:	8f 5b       	subi	r24, 0xBF	; 191
     fe4:	9f 4f       	sbci	r25, 0xFF	; 255
     fe6:	fc 01       	movw	r30, r24
     fe8:	80 81       	ld	r24, Z
     fea:	28 17       	cp	r18, r24
     fec:	a8 f0       	brcs	.+42     	; 0x1018 <UART_BufferAvailable+0x54>
     fee:	89 81       	ldd	r24, Y+1	; 0x01
     ff0:	9a 81       	ldd	r25, Y+2	; 0x02
     ff2:	80 5c       	subi	r24, 0xC0	; 192
     ff4:	9f 4f       	sbci	r25, 0xFF	; 255
     ff6:	fc 01       	movw	r30, r24
     ff8:	80 81       	ld	r24, Z
     ffa:	28 2f       	mov	r18, r24
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	89 81       	ldd	r24, Y+1	; 0x01
    1000:	9a 81       	ldd	r25, Y+2	; 0x02
    1002:	8f 5b       	subi	r24, 0xBF	; 191
    1004:	9f 4f       	sbci	r25, 0xFF	; 255
    1006:	fc 01       	movw	r30, r24
    1008:	80 81       	ld	r24, Z
    100a:	88 2f       	mov	r24, r24
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	a9 01       	movw	r20, r18
    1010:	48 1b       	sub	r20, r24
    1012:	59 0b       	sbc	r21, r25
    1014:	ca 01       	movw	r24, r20
    1016:	16 c0       	rjmp	.+44     	; 0x1044 <UART_BufferAvailable+0x80>
    1018:	89 81       	ldd	r24, Y+1	; 0x01
    101a:	9a 81       	ldd	r25, Y+2	; 0x02
    101c:	8f 5b       	subi	r24, 0xBF	; 191
    101e:	9f 4f       	sbci	r25, 0xFF	; 255
    1020:	fc 01       	movw	r30, r24
    1022:	80 81       	ld	r24, Z
    1024:	88 2f       	mov	r24, r24
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	20 e4       	ldi	r18, 0x40	; 64
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	28 1b       	sub	r18, r24
    102e:	39 0b       	sbc	r19, r25
    1030:	89 81       	ldd	r24, Y+1	; 0x01
    1032:	9a 81       	ldd	r25, Y+2	; 0x02
    1034:	80 5c       	subi	r24, 0xC0	; 192
    1036:	9f 4f       	sbci	r25, 0xFF	; 255
    1038:	fc 01       	movw	r30, r24
    103a:	80 81       	ld	r24, Z
    103c:	88 2f       	mov	r24, r24
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	82 0f       	add	r24, r18
    1042:	93 1f       	adc	r25, r19
    1044:	0f 90       	pop	r0
    1046:	0f 90       	pop	r0
    1048:	df 91       	pop	r29
    104a:	cf 91       	pop	r28
    104c:	08 95       	ret

0000104e <PrintBufferContents>:
    104e:	cf 93       	push	r28
    1050:	df 93       	push	r29
    1052:	00 d0       	rcall	.+0      	; 0x1054 <PrintBufferContents+0x6>
    1054:	00 d0       	rcall	.+0      	; 0x1056 <PrintBufferContents+0x8>
    1056:	cd b7       	in	r28, 0x3d	; 61
    1058:	de b7       	in	r29, 0x3e	; 62
    105a:	9c 83       	std	Y+4, r25	; 0x04
    105c:	8b 83       	std	Y+3, r24	; 0x03
    105e:	8a eb       	ldi	r24, 0xBA	; 186
    1060:	92 e0       	ldi	r25, 0x02	; 2
    1062:	89 2f       	mov	r24, r25
    1064:	8f 93       	push	r24
    1066:	8a eb       	ldi	r24, 0xBA	; 186
    1068:	92 e0       	ldi	r25, 0x02	; 2
    106a:	8f 93       	push	r24
    106c:	10 d3       	rcall	.+1568   	; 0x168e <printf>
    106e:	0f 90       	pop	r0
    1070:	0f 90       	pop	r0
    1072:	1a 82       	std	Y+2, r1	; 0x02
    1074:	19 82       	std	Y+1, r1	; 0x01
    1076:	1e c0       	rjmp	.+60     	; 0x10b4 <PrintBufferContents+0x66>
    1078:	2b 81       	ldd	r18, Y+3	; 0x03
    107a:	3c 81       	ldd	r19, Y+4	; 0x04
    107c:	89 81       	ldd	r24, Y+1	; 0x01
    107e:	9a 81       	ldd	r25, Y+2	; 0x02
    1080:	82 0f       	add	r24, r18
    1082:	93 1f       	adc	r25, r19
    1084:	fc 01       	movw	r30, r24
    1086:	80 81       	ld	r24, Z
    1088:	88 2f       	mov	r24, r24
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	29 2f       	mov	r18, r25
    108e:	2f 93       	push	r18
    1090:	8f 93       	push	r24
    1092:	8c ec       	ldi	r24, 0xCC	; 204
    1094:	92 e0       	ldi	r25, 0x02	; 2
    1096:	89 2f       	mov	r24, r25
    1098:	8f 93       	push	r24
    109a:	8c ec       	ldi	r24, 0xCC	; 204
    109c:	92 e0       	ldi	r25, 0x02	; 2
    109e:	8f 93       	push	r24
    10a0:	f6 d2       	rcall	.+1516   	; 0x168e <printf>
    10a2:	0f 90       	pop	r0
    10a4:	0f 90       	pop	r0
    10a6:	0f 90       	pop	r0
    10a8:	0f 90       	pop	r0
    10aa:	89 81       	ldd	r24, Y+1	; 0x01
    10ac:	9a 81       	ldd	r25, Y+2	; 0x02
    10ae:	01 96       	adiw	r24, 0x01	; 1
    10b0:	9a 83       	std	Y+2, r25	; 0x02
    10b2:	89 83       	std	Y+1, r24	; 0x01
    10b4:	89 81       	ldd	r24, Y+1	; 0x01
    10b6:	9a 81       	ldd	r25, Y+2	; 0x02
    10b8:	80 34       	cpi	r24, 0x40	; 64
    10ba:	91 05       	cpc	r25, r1
    10bc:	ec f2       	brlt	.-70     	; 0x1078 <PrintBufferContents+0x2a>
    10be:	8b 81       	ldd	r24, Y+3	; 0x03
    10c0:	9c 81       	ldd	r25, Y+4	; 0x04
    10c2:	8f 5b       	subi	r24, 0xBF	; 191
    10c4:	9f 4f       	sbci	r25, 0xFF	; 255
    10c6:	fc 01       	movw	r30, r24
    10c8:	80 81       	ld	r24, Z
    10ca:	28 2f       	mov	r18, r24
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	8b 81       	ldd	r24, Y+3	; 0x03
    10d0:	9c 81       	ldd	r25, Y+4	; 0x04
    10d2:	80 5c       	subi	r24, 0xC0	; 192
    10d4:	9f 4f       	sbci	r25, 0xFF	; 255
    10d6:	fc 01       	movw	r30, r24
    10d8:	80 81       	ld	r24, Z
    10da:	88 2f       	mov	r24, r24
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	43 2f       	mov	r20, r19
    10e0:	4f 93       	push	r20
    10e2:	2f 93       	push	r18
    10e4:	29 2f       	mov	r18, r25
    10e6:	2f 93       	push	r18
    10e8:	8f 93       	push	r24
    10ea:	80 ed       	ldi	r24, 0xD0	; 208
    10ec:	92 e0       	ldi	r25, 0x02	; 2
    10ee:	89 2f       	mov	r24, r25
    10f0:	8f 93       	push	r24
    10f2:	80 ed       	ldi	r24, 0xD0	; 208
    10f4:	92 e0       	ldi	r25, 0x02	; 2
    10f6:	8f 93       	push	r24
    10f8:	ca d2       	rcall	.+1428   	; 0x168e <printf>
    10fa:	0f 90       	pop	r0
    10fc:	0f 90       	pop	r0
    10fe:	0f 90       	pop	r0
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	0f 90       	pop	r0
    1106:	00 00       	nop
    1108:	0f 90       	pop	r0
    110a:	0f 90       	pop	r0
    110c:	0f 90       	pop	r0
    110e:	0f 90       	pop	r0
    1110:	df 91       	pop	r29
    1112:	cf 91       	pop	r28
    1114:	08 95       	ret

00001116 <__vector_28>:



ISR(USART1_RX_vect)
{
    1116:	1f 92       	push	r1
    1118:	0f 92       	push	r0
    111a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    111e:	0f 92       	push	r0
    1120:	11 24       	eor	r1, r1
    1122:	2f 93       	push	r18
    1124:	3f 93       	push	r19
    1126:	4f 93       	push	r20
    1128:	5f 93       	push	r21
    112a:	6f 93       	push	r22
    112c:	7f 93       	push	r23
    112e:	8f 93       	push	r24
    1130:	9f 93       	push	r25
    1132:	af 93       	push	r26
    1134:	bf 93       	push	r27
    1136:	ef 93       	push	r30
    1138:	ff 93       	push	r31
    113a:	cf 93       	push	r28
    113c:	df 93       	push	r29
    113e:	1f 92       	push	r1
    1140:	cd b7       	in	r28, 0x3d	; 61
    1142:	de b7       	in	r29, 0x3e	; 62
	char ReceivedChar = UDR1;
    1144:	8e ec       	ldi	r24, 0xCE	; 206
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	fc 01       	movw	r30, r24
    114a:	80 81       	ld	r24, Z
    114c:	89 83       	std	Y+1, r24	; 0x01
	UART_BufferPut(&uart_rx_buffer, ReceivedChar);
    114e:	69 81       	ldd	r22, Y+1	; 0x01
    1150:	86 ec       	ldi	r24, 0xC6	; 198
    1152:	94 e0       	ldi	r25, 0x04	; 4
    1154:	50 de       	rcall	.-864    	; 0xdf6 <UART_BufferPut>
	if(callback_function_pointer != NULL){
    1156:	80 91 08 05 	lds	r24, 0x0508	; 0x800508 <callback_function_pointer>
    115a:	90 91 09 05 	lds	r25, 0x0509	; 0x800509 <callback_function_pointer+0x1>
    115e:	89 2b       	or	r24, r25
    1160:	39 f0       	breq	.+14     	; 0x1170 <__vector_28+0x5a>
		callback_function_pointer(ReceivedChar);
    1162:	20 91 08 05 	lds	r18, 0x0508	; 0x800508 <callback_function_pointer>
    1166:	30 91 09 05 	lds	r19, 0x0509	; 0x800509 <callback_function_pointer+0x1>
    116a:	89 81       	ldd	r24, Y+1	; 0x01
    116c:	f9 01       	movw	r30, r18
    116e:	09 95       	icall
	}
	//WriteReceivedCharacterFromUARTInDisplay(ReceivedChar);
	
	printf("RecivedChar: %c \n", ReceivedChar);
    1170:	89 81       	ldd	r24, Y+1	; 0x01
    1172:	88 2f       	mov	r24, r24
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	29 2f       	mov	r18, r25
    1178:	2f 93       	push	r18
    117a:	8f 93       	push	r24
    117c:	85 ee       	ldi	r24, 0xE5	; 229
    117e:	92 e0       	ldi	r25, 0x02	; 2
    1180:	89 2f       	mov	r24, r25
    1182:	8f 93       	push	r24
    1184:	85 ee       	ldi	r24, 0xE5	; 229
    1186:	92 e0       	ldi	r25, 0x02	; 2
    1188:	8f 93       	push	r24
    118a:	81 d2       	rcall	.+1282   	; 0x168e <printf>
    118c:	0f 90       	pop	r0
    118e:	0f 90       	pop	r0
    1190:	0f 90       	pop	r0
    1192:	0f 90       	pop	r0
}
    1194:	00 00       	nop
    1196:	0f 90       	pop	r0
    1198:	df 91       	pop	r29
    119a:	cf 91       	pop	r28
    119c:	ff 91       	pop	r31
    119e:	ef 91       	pop	r30
    11a0:	bf 91       	pop	r27
    11a2:	af 91       	pop	r26
    11a4:	9f 91       	pop	r25
    11a6:	8f 91       	pop	r24
    11a8:	7f 91       	pop	r23
    11aa:	6f 91       	pop	r22
    11ac:	5f 91       	pop	r21
    11ae:	4f 91       	pop	r20
    11b0:	3f 91       	pop	r19
    11b2:	2f 91       	pop	r18
    11b4:	0f 90       	pop	r0
    11b6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    11ba:	0f 90       	pop	r0
    11bc:	1f 90       	pop	r1
    11be:	18 95       	reti

000011c0 <RecieveCharacterFromUart>:
static uint8_t stringIndex = 0;



void RecieveCharacterFromUart(char ReceivedCharacter)
{
    11c0:	cf 93       	push	r28
    11c2:	df 93       	push	r29
    11c4:	1f 92       	push	r1
    11c6:	cd b7       	in	r28, 0x3d	; 61
    11c8:	de b7       	in	r29, 0x3e	; 62
    11ca:	89 83       	std	Y+1, r24	; 0x01
	ReceivedCharacterFromUART = ReceivedCharacter;
    11cc:	89 81       	ldd	r24, Y+1	; 0x01
    11ce:	80 93 0a 05 	sts	0x050A, r24	; 0x80050a <ReceivedCharacterFromUART>
	CharacterReceivedFromUART = true;
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	80 93 0b 05 	sts	0x050B, r24	; 0x80050b <CharacterReceivedFromUART>
}
    11d8:	00 00       	nop
    11da:	0f 90       	pop	r0
    11dc:	df 91       	pop	r29
    11de:	cf 91       	pop	r28
    11e0:	08 95       	ret

000011e2 <WriteReceivedCharacterFromUARTInDisplay>:
void WriteReceivedCharacterFromUARTInDisplay(char ReceivedCharacterFromUART) {
    11e2:	cf 93       	push	r28
    11e4:	df 93       	push	r29
    11e6:	1f 92       	push	r1
    11e8:	cd b7       	in	r28, 0x3d	; 61
    11ea:	de b7       	in	r29, 0x3e	; 62
    11ec:	89 83       	std	Y+1, r24	; 0x01
	printf("ReceivedCharacterFromUART: %c\n", ReceivedCharacterFromUART);
    11ee:	89 81       	ldd	r24, Y+1	; 0x01
    11f0:	88 2f       	mov	r24, r24
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	29 2f       	mov	r18, r25
    11f6:	2f 93       	push	r18
    11f8:	8f 93       	push	r24
    11fa:	8a e0       	ldi	r24, 0x0A	; 10
    11fc:	93 e0       	ldi	r25, 0x03	; 3
    11fe:	89 2f       	mov	r24, r25
    1200:	8f 93       	push	r24
    1202:	8a e0       	ldi	r24, 0x0A	; 10
    1204:	93 e0       	ldi	r25, 0x03	; 3
    1206:	8f 93       	push	r24
    1208:	42 d2       	rcall	.+1156   	; 0x168e <printf>
    120a:	0f 90       	pop	r0
    120c:	0f 90       	pop	r0
    120e:	0f 90       	pop	r0
    1210:	0f 90       	pop	r0

	if (stringIndex < MAX_STRING_LENGHT - 1) {
    1212:	80 91 0d 05 	lds	r24, 0x050D	; 0x80050d <stringIndex>
    1216:	87 30       	cpi	r24, 0x07	; 7
    1218:	50 f5       	brcc	.+84     	; 0x126e <WriteReceivedCharacterFromUARTInDisplay+0x8c>
		recievedString[stringIndex] = ReceivedCharacterFromUART;
    121a:	80 91 0d 05 	lds	r24, 0x050D	; 0x80050d <stringIndex>
    121e:	88 2f       	mov	r24, r24
    1220:	90 e0       	ldi	r25, 0x00	; 0
    1222:	83 5e       	subi	r24, 0xE3	; 227
    1224:	9e 4f       	sbci	r25, 0xFE	; 254
    1226:	29 81       	ldd	r18, Y+1	; 0x01
    1228:	fc 01       	movw	r30, r24
    122a:	20 83       	st	Z, r18
		stringIndex++;
    122c:	80 91 0d 05 	lds	r24, 0x050D	; 0x80050d <stringIndex>
    1230:	8f 5f       	subi	r24, 0xFF	; 255
    1232:	80 93 0d 05 	sts	0x050D, r24	; 0x80050d <stringIndex>
		recievedString[stringIndex] = '\0'; 
    1236:	80 91 0d 05 	lds	r24, 0x050D	; 0x80050d <stringIndex>
    123a:	88 2f       	mov	r24, r24
    123c:	90 e0       	ldi	r25, 0x00	; 0
    123e:	83 5e       	subi	r24, 0xE3	; 227
    1240:	9e 4f       	sbci	r25, 0xFE	; 254
    1242:	fc 01       	movw	r30, r24
    1244:	10 82       	st	Z, r1
		printf("String updated to: %s\n", recievedString); 
    1246:	8d e1       	ldi	r24, 0x1D	; 29
    1248:	91 e0       	ldi	r25, 0x01	; 1
    124a:	89 2f       	mov	r24, r25
    124c:	8f 93       	push	r24
    124e:	8d e1       	ldi	r24, 0x1D	; 29
    1250:	91 e0       	ldi	r25, 0x01	; 1
    1252:	8f 93       	push	r24
    1254:	89 e2       	ldi	r24, 0x29	; 41
    1256:	93 e0       	ldi	r25, 0x03	; 3
    1258:	89 2f       	mov	r24, r25
    125a:	8f 93       	push	r24
    125c:	89 e2       	ldi	r24, 0x29	; 41
    125e:	93 e0       	ldi	r25, 0x03	; 3
    1260:	8f 93       	push	r24
    1262:	15 d2       	rcall	.+1066   	; 0x168e <printf>
    1264:	0f 90       	pop	r0
    1266:	0f 90       	pop	r0
    1268:	0f 90       	pop	r0
    126a:	0f 90       	pop	r0
    126c:	05 c0       	rjmp	.+10     	; 0x1278 <WriteReceivedCharacterFromUARTInDisplay+0x96>
		} else {
		printf("String index overflow! Resetting.\n");
    126e:	80 e4       	ldi	r24, 0x40	; 64
    1270:	93 e0       	ldi	r25, 0x03	; 3
    1272:	20 d2       	rcall	.+1088   	; 0x16b4 <puts>
		stringIndex = 0;
    1274:	10 92 0d 05 	sts	0x050D, r1	; 0x80050d <stringIndex>
	}

	printf("Preparing to update display...\n");
    1278:	82 e6       	ldi	r24, 0x62	; 98
    127a:	93 e0       	ldi	r25, 0x03	; 3

	SSD1306_ClearScreen();
    127c:	1b d2       	rcall	.+1078   	; 0x16b4 <puts>
    127e:	72 d9       	rcall	.-3356   	; 0x564 <SSD1306_ClearScreen>

	SSD1306_SetPosition(0, 0);
    1280:	60 e0       	ldi	r22, 0x00	; 0
    1282:	80 e0       	ldi	r24, 0x00	; 0
    1284:	39 da       	rcall	.-2958   	; 0x6f8 <SSD1306_SetPosition>

	SSD1306_DrawString(recievedString, NORMAL);
    1286:	60 e0       	ldi	r22, 0x00	; 0
    1288:	8d e1       	ldi	r24, 0x1D	; 29
    128a:	91 e0       	ldi	r25, 0x01	; 1
    128c:	a3 db       	rcall	.-2234   	; 0x9d4 <SSD1306_DrawString>

	if (SSD1306_UpdateScreen(I2C_Address) == SSD1306_ERROR) {
    128e:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_Address>
    1292:	cc db       	rcall	.-2152   	; 0xa2c <SSD1306_UpdateScreen>
    1294:	81 30       	cpi	r24, 0x01	; 1
		printf("Error updating display.\n");
    1296:	21 f4       	brne	.+8      	; 0x12a0 <WriteReceivedCharacterFromUARTInDisplay+0xbe>
    1298:	81 e8       	ldi	r24, 0x81	; 129
    129a:	93 e0       	ldi	r25, 0x03	; 3
    129c:	0b d2       	rcall	.+1046   	; 0x16b4 <puts>
    129e:	03 c0       	rjmp	.+6      	; 0x12a6 <WriteReceivedCharacterFromUARTInDisplay+0xc4>
		} else {
		printf("Display updated successfully.\n");
    12a0:	89 e9       	ldi	r24, 0x99	; 153
    12a2:	93 e0       	ldi	r25, 0x03	; 3
    12a4:	07 d2       	rcall	.+1038   	; 0x16b4 <puts>
    12a6:	8d e1       	ldi	r24, 0x1D	; 29
	}

	printf("Writing to display: %s\n", recievedString);
    12a8:	91 e0       	ldi	r25, 0x01	; 1
    12aa:	89 2f       	mov	r24, r25
    12ac:	8f 93       	push	r24
    12ae:	8d e1       	ldi	r24, 0x1D	; 29
    12b0:	91 e0       	ldi	r25, 0x01	; 1
    12b2:	8f 93       	push	r24
    12b4:	87 eb       	ldi	r24, 0xB7	; 183
    12b6:	93 e0       	ldi	r25, 0x03	; 3
    12b8:	89 2f       	mov	r24, r25
    12ba:	8f 93       	push	r24
    12bc:	87 eb       	ldi	r24, 0xB7	; 183
    12be:	93 e0       	ldi	r25, 0x03	; 3
    12c0:	8f 93       	push	r24
    12c2:	e5 d1       	rcall	.+970    	; 0x168e <printf>
    12c4:	0f 90       	pop	r0
    12c6:	0f 90       	pop	r0
    12c8:	0f 90       	pop	r0
    12ca:	0f 90       	pop	r0
    12cc:	80 91 0c 05 	lds	r24, 0x050C	; 0x80050c <DisplayLineCounter>
	printf("DisplayLineCounter: %d\n", DisplayLineCounter);
    12d0:	88 2f       	mov	r24, r24
    12d2:	90 e0       	ldi	r25, 0x00	; 0
    12d4:	29 2f       	mov	r18, r25
    12d6:	2f 93       	push	r18
    12d8:	8f 93       	push	r24
    12da:	8f ec       	ldi	r24, 0xCF	; 207
    12dc:	93 e0       	ldi	r25, 0x03	; 3
    12de:	89 2f       	mov	r24, r25
    12e0:	8f 93       	push	r24
    12e2:	8f ec       	ldi	r24, 0xCF	; 207
    12e4:	93 e0       	ldi	r25, 0x03	; 3
    12e6:	8f 93       	push	r24
    12e8:	d2 d1       	rcall	.+932    	; 0x168e <printf>
    12ea:	0f 90       	pop	r0
    12ec:	0f 90       	pop	r0
    12ee:	0f 90       	pop	r0
    12f0:	0f 90       	pop	r0
    12f2:	00 00       	nop
}
    12f4:	0f 90       	pop	r0
    12f6:	df 91       	pop	r29
    12f8:	cf 91       	pop	r28
    12fa:	08 95       	ret

000012fc <ProcessRecievedCharacters>:
    12fc:	cf 93       	push	r28


void ProcessRecievedCharacters() {
    12fe:	df 93       	push	r29
    1300:	00 d0       	rcall	.+0      	; 0x1302 <ProcessRecievedCharacters+0x6>
    1302:	1f 92       	push	r1
    1304:	cd b7       	in	r28, 0x3d	; 61
    1306:	de b7       	in	r29, 0x3e	; 62
    char recievedCharacter;

    uint8_t available = UART_BufferAvailable(&uart_rx_buffer);
    1308:	86 ec       	ldi	r24, 0xC6	; 198
    130a:	94 e0       	ldi	r25, 0x04	; 4
    130c:	5b de       	rcall	.-842    	; 0xfc4 <UART_BufferAvailable>
    130e:	89 83       	std	Y+1, r24	; 0x01
    printf("ProcessReceivedCharacters: UART_BufferAvailable = %d\n", available);
    1310:	89 81       	ldd	r24, Y+1	; 0x01
    1312:	88 2f       	mov	r24, r24
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	29 2f       	mov	r18, r25
    1318:	2f 93       	push	r18
    131a:	8f 93       	push	r24
    131c:	87 ee       	ldi	r24, 0xE7	; 231
    131e:	93 e0       	ldi	r25, 0x03	; 3
    1320:	89 2f       	mov	r24, r25
    1322:	8f 93       	push	r24
    1324:	87 ee       	ldi	r24, 0xE7	; 231
    1326:	93 e0       	ldi	r25, 0x03	; 3
    1328:	8f 93       	push	r24
    132a:	b1 d1       	rcall	.+866    	; 0x168e <printf>
    132c:	0f 90       	pop	r0
    132e:	0f 90       	pop	r0
    1330:	0f 90       	pop	r0
    1332:	0f 90       	pop	r0

    if (available > 0) {
    1334:	89 81       	ldd	r24, Y+1	; 0x01
    1336:	88 23       	and	r24, r24
    1338:	91 f1       	breq	.+100    	; 0x139e <ProcessRecievedCharacters+0xa2>
        uint8_t status = UART_BufferGet(&uart_rx_buffer, &recievedCharacter);
    133a:	ce 01       	movw	r24, r28
    133c:	03 96       	adiw	r24, 0x03	; 3
    133e:	bc 01       	movw	r22, r24
    1340:	86 ec       	ldi	r24, 0xC6	; 198
    1342:	94 e0       	ldi	r25, 0x04	; 4
    1344:	cc dd       	rcall	.-1128   	; 0xede <UART_BufferGet>
    1346:	8a 83       	std	Y+2, r24	; 0x02

        if (status == 0) {
    1348:	8a 81       	ldd	r24, Y+2	; 0x02
    134a:	88 23       	and	r24, r24
    134c:	a9 f4       	brne	.+42     	; 0x1378 <ProcessRecievedCharacters+0x7c>
            printf("Successfully received character: %c\n", recievedCharacter);
    134e:	8b 81       	ldd	r24, Y+3	; 0x03
    1350:	88 2f       	mov	r24, r24
    1352:	90 e0       	ldi	r25, 0x00	; 0
    1354:	29 2f       	mov	r18, r25
    1356:	2f 93       	push	r18
    1358:	8f 93       	push	r24
    135a:	8d e1       	ldi	r24, 0x1D	; 29
    135c:	94 e0       	ldi	r25, 0x04	; 4
    135e:	89 2f       	mov	r24, r25
    1360:	8f 93       	push	r24
    1362:	8d e1       	ldi	r24, 0x1D	; 29
    1364:	94 e0       	ldi	r25, 0x04	; 4
    1366:	8f 93       	push	r24
    1368:	92 d1       	rcall	.+804    	; 0x168e <printf>
    136a:	0f 90       	pop	r0
    136c:	0f 90       	pop	r0
    136e:	0f 90       	pop	r0
            WriteReceivedCharacterFromUARTInDisplay(recievedCharacter);
    1370:	0f 90       	pop	r0
    1372:	8b 81       	ldd	r24, Y+3	; 0x03
    1374:	36 df       	rcall	.-404    	; 0x11e2 <WriteReceivedCharacterFromUARTInDisplay>
    1376:	16 c0       	rjmp	.+44     	; 0x13a4 <ProcessRecievedCharacters+0xa8>
        } else {
            printf("Error reading from buffer, status: %d\n", status);
    1378:	8a 81       	ldd	r24, Y+2	; 0x02
    137a:	88 2f       	mov	r24, r24
    137c:	90 e0       	ldi	r25, 0x00	; 0
    137e:	29 2f       	mov	r18, r25
    1380:	2f 93       	push	r18
    1382:	8f 93       	push	r24
    1384:	82 e4       	ldi	r24, 0x42	; 66
    1386:	94 e0       	ldi	r25, 0x04	; 4
    1388:	89 2f       	mov	r24, r25
    138a:	8f 93       	push	r24
    138c:	82 e4       	ldi	r24, 0x42	; 66
    138e:	94 e0       	ldi	r25, 0x04	; 4
    1390:	8f 93       	push	r24
    1392:	7d d1       	rcall	.+762    	; 0x168e <printf>
    1394:	0f 90       	pop	r0
    1396:	0f 90       	pop	r0
    1398:	0f 90       	pop	r0
    139a:	0f 90       	pop	r0
        }
    } else {
        printf("Buffer is empty, not processing.\n");
    139c:	03 c0       	rjmp	.+6      	; 0x13a4 <ProcessRecievedCharacters+0xa8>
    139e:	89 e6       	ldi	r24, 0x69	; 105
    13a0:	94 e0       	ldi	r25, 0x04	; 4
    13a2:	88 d1       	rcall	.+784    	; 0x16b4 <puts>
    }

    PrintBufferContents(&uart_rx_buffer);
    13a4:	86 ec       	ldi	r24, 0xC6	; 198
    13a6:	94 e0       	ldi	r25, 0x04	; 4
    13a8:	52 de       	rcall	.-860    	; 0x104e <PrintBufferContents>
    13aa:	00 00       	nop
}
    13ac:	0f 90       	pop	r0
    13ae:	0f 90       	pop	r0
    13b0:	0f 90       	pop	r0
    13b2:	df 91       	pop	r29
    13b4:	cf 91       	pop	r28
    13b6:	08 95       	ret

000013b8 <main>:
    13b8:	cf 93       	push	r28




int main(void)
{
    13ba:	df 93       	push	r29
    13bc:	1f 92       	push	r1
    13be:	cd b7       	in	r28, 0x3d	; 61
    13c0:	de b7       	in	r29, 0x3e	; 62
	RS232Init();
    13c2:	98 dc       	rcall	.-1744   	; 0xcf4 <RS232Init>
	
	setupFunctionCallPointer(&RecieveCharacterFromUart);
    13c4:	80 ee       	ldi	r24, 0xE0	; 224
    13c6:	98 e0       	ldi	r25, 0x08	; 8
    13c8:	82 dc       	rcall	.-1788   	; 0xcce <setupFunctionCallPointer>
	uint8_t I2C_Address = SSD1306_ADDR;
    13ca:	8c e3       	ldi	r24, 0x3C	; 60
    13cc:	89 83       	std	Y+1, r24	; 0x01

	// init ssd1306
	SSD1306_Init(I2C_Address);
    13ce:	89 81       	ldd	r24, Y+1	; 0x01
    13d0:	0e 94 b9 01 	call	0x372	; 0x372 <SSD1306_Init>

	// clear screen
	SSD1306_ClearScreen();
	
	SSD1306_SetPosition(7, 0);
    13d4:	c7 d8       	rcall	.-3698   	; 0x564 <SSD1306_ClearScreen>
    13d6:	60 e0       	ldi	r22, 0x00	; 0
    13d8:	87 e0       	ldi	r24, 0x07	; 7
	SSD1306_DrawString("Line 1", NORMAL);
    13da:	8e d9       	rcall	.-3300   	; 0x6f8 <SSD1306_SetPosition>
    13dc:	60 e0       	ldi	r22, 0x00	; 0
    13de:	8a e8       	ldi	r24, 0x8A	; 138
    13e0:	94 e0       	ldi	r25, 0x04	; 4
	SSD1306_UpdateScreen(I2C_Address);
    13e2:	f8 da       	rcall	.-2576   	; 0x9d4 <SSD1306_DrawString>
    13e4:	89 81       	ldd	r24, Y+1	; 0x01
    13e6:	22 db       	rcall	.-2492   	; 0xa2c <SSD1306_UpdateScreen>
	
	SSD1306_SetPosition(7, 1);
    13e8:	61 e0       	ldi	r22, 0x01	; 1
    13ea:	87 e0       	ldi	r24, 0x07	; 7
	SSD1306_DrawString("Line 2", NORMAL);
    13ec:	85 d9       	rcall	.-3318   	; 0x6f8 <SSD1306_SetPosition>
    13ee:	60 e0       	ldi	r22, 0x00	; 0
    13f0:	81 e9       	ldi	r24, 0x91	; 145
    13f2:	94 e0       	ldi	r25, 0x04	; 4
	SSD1306_UpdateScreen(I2C_Address);
    13f4:	ef da       	rcall	.-2594   	; 0x9d4 <SSD1306_DrawString>
    13f6:	89 81       	ldd	r24, Y+1	; 0x01
	
	SSD1306_SetPosition(7, 2);
    13f8:	19 db       	rcall	.-2510   	; 0xa2c <SSD1306_UpdateScreen>
    13fa:	62 e0       	ldi	r22, 0x02	; 2
    13fc:	87 e0       	ldi	r24, 0x07	; 7
	SSD1306_DrawString("Line 3", NORMAL);
    13fe:	7c d9       	rcall	.-3336   	; 0x6f8 <SSD1306_SetPosition>
    1400:	60 e0       	ldi	r22, 0x00	; 0
    1402:	88 e9       	ldi	r24, 0x98	; 152
    1404:	94 e0       	ldi	r25, 0x04	; 4
	SSD1306_UpdateScreen(I2C_Address);
    1406:	e6 da       	rcall	.-2612   	; 0x9d4 <SSD1306_DrawString>
    1408:	89 81       	ldd	r24, Y+1	; 0x01
	
	SSD1306_SetPosition(7, 3);
    140a:	10 db       	rcall	.-2528   	; 0xa2c <SSD1306_UpdateScreen>
    140c:	63 e0       	ldi	r22, 0x03	; 3
    140e:	87 e0       	ldi	r24, 0x07	; 7
	SSD1306_DrawString("Line 4", NORMAL);
    1410:	73 d9       	rcall	.-3354   	; 0x6f8 <SSD1306_SetPosition>
    1412:	60 e0       	ldi	r22, 0x00	; 0
    1414:	8f e9       	ldi	r24, 0x9F	; 159
    1416:	94 e0       	ldi	r25, 0x04	; 4
	SSD1306_UpdateScreen(I2C_Address);
    1418:	dd da       	rcall	.-2630   	; 0x9d4 <SSD1306_DrawString>
    141a:	89 81       	ldd	r24, Y+1	; 0x01
    141c:	07 db       	rcall	.-2546   	; 0xa2c <SSD1306_UpdateScreen>
	
	SSD1306_SetPosition(7, 4);
    141e:	64 e0       	ldi	r22, 0x04	; 4
    1420:	87 e0       	ldi	r24, 0x07	; 7
	SSD1306_DrawString("Line 5", NORMAL);
    1422:	6a d9       	rcall	.-3372   	; 0x6f8 <SSD1306_SetPosition>
    1424:	60 e0       	ldi	r22, 0x00	; 0
    1426:	86 ea       	ldi	r24, 0xA6	; 166
    1428:	94 e0       	ldi	r25, 0x04	; 4
	SSD1306_UpdateScreen(I2C_Address);
    142a:	d4 da       	rcall	.-2648   	; 0x9d4 <SSD1306_DrawString>
    142c:	89 81       	ldd	r24, Y+1	; 0x01
	
	SSD1306_SetPosition(7, 5);
    142e:	fe da       	rcall	.-2564   	; 0xa2c <SSD1306_UpdateScreen>
    1430:	65 e0       	ldi	r22, 0x05	; 5
    1432:	87 e0       	ldi	r24, 0x07	; 7
	SSD1306_DrawString("Line 6", NORMAL);
    1434:	61 d9       	rcall	.-3390   	; 0x6f8 <SSD1306_SetPosition>
    1436:	60 e0       	ldi	r22, 0x00	; 0
    1438:	8d ea       	ldi	r24, 0xAD	; 173
    143a:	94 e0       	ldi	r25, 0x04	; 4
	SSD1306_UpdateScreen(I2C_Address);
    143c:	cb da       	rcall	.-2666   	; 0x9d4 <SSD1306_DrawString>
    143e:	89 81       	ldd	r24, Y+1	; 0x01
	
	SSD1306_SetPosition(7, 6);
    1440:	f5 da       	rcall	.-2582   	; 0xa2c <SSD1306_UpdateScreen>
    1442:	66 e0       	ldi	r22, 0x06	; 6
    1444:	87 e0       	ldi	r24, 0x07	; 7
	SSD1306_DrawString("Line 7", NORMAL);
    1446:	58 d9       	rcall	.-3408   	; 0x6f8 <SSD1306_SetPosition>
    1448:	60 e0       	ldi	r22, 0x00	; 0
    144a:	84 eb       	ldi	r24, 0xB4	; 180
    144c:	94 e0       	ldi	r25, 0x04	; 4
    144e:	c2 da       	rcall	.-2684   	; 0x9d4 <SSD1306_DrawString>
	SSD1306_UpdateScreen(I2C_Address);
    1450:	89 81       	ldd	r24, Y+1	; 0x01
    1452:	ec da       	rcall	.-2600   	; 0xa2c <SSD1306_UpdateScreen>
    1454:	67 e0       	ldi	r22, 0x07	; 7
	
	SSD1306_SetPosition(7, 7);
    1456:	87 e0       	ldi	r24, 0x07	; 7
    1458:	4f d9       	rcall	.-3426   	; 0x6f8 <SSD1306_SetPosition>
    145a:	60 e0       	ldi	r22, 0x00	; 0
    145c:	8b eb       	ldi	r24, 0xBB	; 187
	SSD1306_DrawString("Line 8", NORMAL);
    145e:	94 e0       	ldi	r25, 0x04	; 4
    1460:	b9 da       	rcall	.-2702   	; 0x9d4 <SSD1306_DrawString>
    1462:	89 81       	ldd	r24, Y+1	; 0x01
    1464:	e3 da       	rcall	.-2618   	; 0xa2c <SSD1306_UpdateScreen>
    1466:	7c dc       	rcall	.-1800   	; 0xd60 <Enable_UART_Receive_Interrupt>
	SSD1306_UpdateScreen(I2C_Address);
    1468:	78 94       	sei
    146a:	10 92 06 05 	sts	0x0506, r1	; 0x800506 <uart_rx_buffer+0x40>
	SSD1306_DrawString("2023", NORMAL);
	// update
	SSD1306_UpdateScreen(I2C_Address);
#endif
	
	Enable_UART_Receive_Interrupt();
    146e:	10 92 07 05 	sts	0x0507, r1	; 0x800507 <uart_rx_buffer+0x41>
	
	sei();
    1472:	44 df       	rcall	.-376    	; 0x12fc <ProcessRecievedCharacters>
	
	uart_rx_buffer.head = 0;
    1474:	fe cf       	rjmp	.-4      	; 0x1472 <main+0xba>

00001476 <__cmpsf2>:
    1476:	2f d0       	rcall	.+94     	; 0x14d6 <__fp_cmp>
	uart_rx_buffer.tail = 0;
    1478:	08 f4       	brcc	.+2      	; 0x147c <__cmpsf2+0x6>
    147a:	81 e0       	ldi	r24, 0x01	; 1
	
	while (1)
	{
		ProcessRecievedCharacters();
    147c:	08 95       	ret

0000147e <__fixunssfsi>:
    147e:	57 d0       	rcall	.+174    	; 0x152e <__fp_splitA>
		//if (true == CharacterReceivedFromUART)
		//{
			//CharacterReceivedFromUART = false;
			//WriteReceivedCharacterFromUARTInDisplay(ReceivedCharacterFromUART);
		//}
	}
    1480:	88 f0       	brcs	.+34     	; 0x14a4 <__fixunssfsi+0x26>
    1482:	9f 57       	subi	r25, 0x7F	; 127
    1484:	90 f0       	brcs	.+36     	; 0x14aa <__fixunssfsi+0x2c>
    1486:	b9 2f       	mov	r27, r25
    1488:	99 27       	eor	r25, r25
    148a:	b7 51       	subi	r27, 0x17	; 23
    148c:	a0 f0       	brcs	.+40     	; 0x14b6 <__fixunssfsi+0x38>
    148e:	d1 f0       	breq	.+52     	; 0x14c4 <__fixunssfsi+0x46>
    1490:	66 0f       	add	r22, r22
    1492:	77 1f       	adc	r23, r23
    1494:	88 1f       	adc	r24, r24
    1496:	99 1f       	adc	r25, r25
    1498:	1a f0       	brmi	.+6      	; 0x14a0 <__fixunssfsi+0x22>
    149a:	ba 95       	dec	r27
    149c:	c9 f7       	brne	.-14     	; 0x1490 <__fixunssfsi+0x12>
    149e:	12 c0       	rjmp	.+36     	; 0x14c4 <__fixunssfsi+0x46>
    14a0:	b1 30       	cpi	r27, 0x01	; 1
    14a2:	81 f0       	breq	.+32     	; 0x14c4 <__fixunssfsi+0x46>
    14a4:	5e d0       	rcall	.+188    	; 0x1562 <__fp_zero>
    14a6:	b1 e0       	ldi	r27, 0x01	; 1
    14a8:	08 95       	ret
    14aa:	5b c0       	rjmp	.+182    	; 0x1562 <__fp_zero>
    14ac:	67 2f       	mov	r22, r23
    14ae:	78 2f       	mov	r23, r24
    14b0:	88 27       	eor	r24, r24
    14b2:	b8 5f       	subi	r27, 0xF8	; 248
    14b4:	39 f0       	breq	.+14     	; 0x14c4 <__fixunssfsi+0x46>
    14b6:	b9 3f       	cpi	r27, 0xF9	; 249
    14b8:	cc f3       	brlt	.-14     	; 0x14ac <__fixunssfsi+0x2e>
    14ba:	86 95       	lsr	r24
    14bc:	77 95       	ror	r23
    14be:	67 95       	ror	r22
    14c0:	b3 95       	inc	r27
    14c2:	d9 f7       	brne	.-10     	; 0x14ba <__fixunssfsi+0x3c>
    14c4:	3e f4       	brtc	.+14     	; 0x14d4 <__fixunssfsi+0x56>
    14c6:	90 95       	com	r25
    14c8:	80 95       	com	r24
    14ca:	70 95       	com	r23
    14cc:	61 95       	neg	r22
    14ce:	7f 4f       	sbci	r23, 0xFF	; 255
    14d0:	8f 4f       	sbci	r24, 0xFF	; 255
    14d2:	9f 4f       	sbci	r25, 0xFF	; 255
    14d4:	08 95       	ret

000014d6 <__fp_cmp>:
    14d6:	99 0f       	add	r25, r25
    14d8:	00 08       	sbc	r0, r0
    14da:	55 0f       	add	r21, r21
    14dc:	aa 0b       	sbc	r26, r26
    14de:	e0 e8       	ldi	r30, 0x80	; 128
    14e0:	fe ef       	ldi	r31, 0xFE	; 254
    14e2:	16 16       	cp	r1, r22
    14e4:	17 06       	cpc	r1, r23
    14e6:	e8 07       	cpc	r30, r24
    14e8:	f9 07       	cpc	r31, r25
    14ea:	c0 f0       	brcs	.+48     	; 0x151c <__fp_cmp+0x46>
    14ec:	12 16       	cp	r1, r18
    14ee:	13 06       	cpc	r1, r19
    14f0:	e4 07       	cpc	r30, r20
    14f2:	f5 07       	cpc	r31, r21
    14f4:	98 f0       	brcs	.+38     	; 0x151c <__fp_cmp+0x46>
    14f6:	62 1b       	sub	r22, r18
    14f8:	73 0b       	sbc	r23, r19
    14fa:	84 0b       	sbc	r24, r20
    14fc:	95 0b       	sbc	r25, r21
    14fe:	39 f4       	brne	.+14     	; 0x150e <__fp_cmp+0x38>
    1500:	0a 26       	eor	r0, r26
    1502:	61 f0       	breq	.+24     	; 0x151c <__fp_cmp+0x46>
    1504:	23 2b       	or	r18, r19
    1506:	24 2b       	or	r18, r20
    1508:	25 2b       	or	r18, r21
    150a:	21 f4       	brne	.+8      	; 0x1514 <__fp_cmp+0x3e>
    150c:	08 95       	ret
    150e:	0a 26       	eor	r0, r26
    1510:	09 f4       	brne	.+2      	; 0x1514 <__fp_cmp+0x3e>
    1512:	a1 40       	sbci	r26, 0x01	; 1
    1514:	a6 95       	lsr	r26
    1516:	8f ef       	ldi	r24, 0xFF	; 255
    1518:	81 1d       	adc	r24, r1
    151a:	81 1d       	adc	r24, r1
    151c:	08 95       	ret

0000151e <__fp_split3>:
    151e:	57 fd       	sbrc	r21, 7
    1520:	90 58       	subi	r25, 0x80	; 128
    1522:	44 0f       	add	r20, r20
    1524:	55 1f       	adc	r21, r21
    1526:	59 f0       	breq	.+22     	; 0x153e <__fp_splitA+0x10>
    1528:	5f 3f       	cpi	r21, 0xFF	; 255
    152a:	71 f0       	breq	.+28     	; 0x1548 <__fp_splitA+0x1a>
    152c:	47 95       	ror	r20

0000152e <__fp_splitA>:
    152e:	88 0f       	add	r24, r24
    1530:	97 fb       	bst	r25, 7
    1532:	99 1f       	adc	r25, r25
    1534:	61 f0       	breq	.+24     	; 0x154e <__fp_splitA+0x20>
    1536:	9f 3f       	cpi	r25, 0xFF	; 255
    1538:	79 f0       	breq	.+30     	; 0x1558 <__fp_splitA+0x2a>
    153a:	87 95       	ror	r24
    153c:	08 95       	ret
    153e:	12 16       	cp	r1, r18
    1540:	13 06       	cpc	r1, r19
    1542:	14 06       	cpc	r1, r20
    1544:	55 1f       	adc	r21, r21
    1546:	f2 cf       	rjmp	.-28     	; 0x152c <__fp_split3+0xe>
    1548:	46 95       	lsr	r20
    154a:	f1 df       	rcall	.-30     	; 0x152e <__fp_splitA>
    154c:	08 c0       	rjmp	.+16     	; 0x155e <__fp_splitA+0x30>
    154e:	16 16       	cp	r1, r22
    1550:	17 06       	cpc	r1, r23
    1552:	18 06       	cpc	r1, r24
    1554:	99 1f       	adc	r25, r25
    1556:	f1 cf       	rjmp	.-30     	; 0x153a <__fp_splitA+0xc>
    1558:	86 95       	lsr	r24
    155a:	71 05       	cpc	r23, r1
    155c:	61 05       	cpc	r22, r1
    155e:	08 94       	sec
    1560:	08 95       	ret

00001562 <__fp_zero>:
    1562:	e8 94       	clt

00001564 <__fp_szero>:
    1564:	bb 27       	eor	r27, r27
    1566:	66 27       	eor	r22, r22
    1568:	77 27       	eor	r23, r23
    156a:	cb 01       	movw	r24, r22
    156c:	97 f9       	bld	r25, 7
    156e:	08 95       	ret

00001570 <__gesf2>:
    1570:	b2 df       	rcall	.-156    	; 0x14d6 <__fp_cmp>
    1572:	08 f4       	brcc	.+2      	; 0x1576 <__gesf2+0x6>
    1574:	8f ef       	ldi	r24, 0xFF	; 255
    1576:	08 95       	ret

00001578 <__mulsf3>:
    1578:	0b d0       	rcall	.+22     	; 0x1590 <__mulsf3x>
    157a:	78 c0       	rjmp	.+240    	; 0x166c <__fp_round>
    157c:	69 d0       	rcall	.+210    	; 0x1650 <__fp_pscA>
    157e:	28 f0       	brcs	.+10     	; 0x158a <__mulsf3+0x12>
    1580:	6e d0       	rcall	.+220    	; 0x165e <__fp_pscB>
    1582:	18 f0       	brcs	.+6      	; 0x158a <__mulsf3+0x12>
    1584:	95 23       	and	r25, r21
    1586:	09 f0       	breq	.+2      	; 0x158a <__mulsf3+0x12>
    1588:	5a c0       	rjmp	.+180    	; 0x163e <__fp_inf>
    158a:	5f c0       	rjmp	.+190    	; 0x164a <__fp_nan>
    158c:	11 24       	eor	r1, r1
    158e:	ea cf       	rjmp	.-44     	; 0x1564 <__fp_szero>

00001590 <__mulsf3x>:
    1590:	c6 df       	rcall	.-116    	; 0x151e <__fp_split3>
    1592:	a0 f3       	brcs	.-24     	; 0x157c <__mulsf3+0x4>

00001594 <__mulsf3_pse>:
    1594:	95 9f       	mul	r25, r21
    1596:	d1 f3       	breq	.-12     	; 0x158c <__mulsf3+0x14>
    1598:	95 0f       	add	r25, r21
    159a:	50 e0       	ldi	r21, 0x00	; 0
    159c:	55 1f       	adc	r21, r21
    159e:	62 9f       	mul	r22, r18
    15a0:	f0 01       	movw	r30, r0
    15a2:	72 9f       	mul	r23, r18
    15a4:	bb 27       	eor	r27, r27
    15a6:	f0 0d       	add	r31, r0
    15a8:	b1 1d       	adc	r27, r1
    15aa:	63 9f       	mul	r22, r19
    15ac:	aa 27       	eor	r26, r26
    15ae:	f0 0d       	add	r31, r0
    15b0:	b1 1d       	adc	r27, r1
    15b2:	aa 1f       	adc	r26, r26
    15b4:	64 9f       	mul	r22, r20
    15b6:	66 27       	eor	r22, r22
    15b8:	b0 0d       	add	r27, r0
    15ba:	a1 1d       	adc	r26, r1
    15bc:	66 1f       	adc	r22, r22
    15be:	82 9f       	mul	r24, r18
    15c0:	22 27       	eor	r18, r18
    15c2:	b0 0d       	add	r27, r0
    15c4:	a1 1d       	adc	r26, r1
    15c6:	62 1f       	adc	r22, r18
    15c8:	73 9f       	mul	r23, r19
    15ca:	b0 0d       	add	r27, r0
    15cc:	a1 1d       	adc	r26, r1
    15ce:	62 1f       	adc	r22, r18
    15d0:	83 9f       	mul	r24, r19
    15d2:	a0 0d       	add	r26, r0
    15d4:	61 1d       	adc	r22, r1
    15d6:	22 1f       	adc	r18, r18
    15d8:	74 9f       	mul	r23, r20
    15da:	33 27       	eor	r19, r19
    15dc:	a0 0d       	add	r26, r0
    15de:	61 1d       	adc	r22, r1
    15e0:	23 1f       	adc	r18, r19
    15e2:	84 9f       	mul	r24, r20
    15e4:	60 0d       	add	r22, r0
    15e6:	21 1d       	adc	r18, r1
    15e8:	82 2f       	mov	r24, r18
    15ea:	76 2f       	mov	r23, r22
    15ec:	6a 2f       	mov	r22, r26
    15ee:	11 24       	eor	r1, r1
    15f0:	9f 57       	subi	r25, 0x7F	; 127
    15f2:	50 40       	sbci	r21, 0x00	; 0
    15f4:	8a f0       	brmi	.+34     	; 0x1618 <__mulsf3_pse+0x84>
    15f6:	e1 f0       	breq	.+56     	; 0x1630 <__mulsf3_pse+0x9c>
    15f8:	88 23       	and	r24, r24
    15fa:	4a f0       	brmi	.+18     	; 0x160e <__mulsf3_pse+0x7a>
    15fc:	ee 0f       	add	r30, r30
    15fe:	ff 1f       	adc	r31, r31
    1600:	bb 1f       	adc	r27, r27
    1602:	66 1f       	adc	r22, r22
    1604:	77 1f       	adc	r23, r23
    1606:	88 1f       	adc	r24, r24
    1608:	91 50       	subi	r25, 0x01	; 1
    160a:	50 40       	sbci	r21, 0x00	; 0
    160c:	a9 f7       	brne	.-22     	; 0x15f8 <__mulsf3_pse+0x64>
    160e:	9e 3f       	cpi	r25, 0xFE	; 254
    1610:	51 05       	cpc	r21, r1
    1612:	70 f0       	brcs	.+28     	; 0x1630 <__mulsf3_pse+0x9c>
    1614:	14 c0       	rjmp	.+40     	; 0x163e <__fp_inf>
    1616:	a6 cf       	rjmp	.-180    	; 0x1564 <__fp_szero>
    1618:	5f 3f       	cpi	r21, 0xFF	; 255
    161a:	ec f3       	brlt	.-6      	; 0x1616 <__mulsf3_pse+0x82>
    161c:	98 3e       	cpi	r25, 0xE8	; 232
    161e:	dc f3       	brlt	.-10     	; 0x1616 <__mulsf3_pse+0x82>
    1620:	86 95       	lsr	r24
    1622:	77 95       	ror	r23
    1624:	67 95       	ror	r22
    1626:	b7 95       	ror	r27
    1628:	f7 95       	ror	r31
    162a:	e7 95       	ror	r30
    162c:	9f 5f       	subi	r25, 0xFF	; 255
    162e:	c1 f7       	brne	.-16     	; 0x1620 <__mulsf3_pse+0x8c>
    1630:	fe 2b       	or	r31, r30
    1632:	88 0f       	add	r24, r24
    1634:	91 1d       	adc	r25, r1
    1636:	96 95       	lsr	r25
    1638:	87 95       	ror	r24
    163a:	97 f9       	bld	r25, 7
    163c:	08 95       	ret

0000163e <__fp_inf>:
    163e:	97 f9       	bld	r25, 7
    1640:	9f 67       	ori	r25, 0x7F	; 127
    1642:	80 e8       	ldi	r24, 0x80	; 128
    1644:	70 e0       	ldi	r23, 0x00	; 0
    1646:	60 e0       	ldi	r22, 0x00	; 0
    1648:	08 95       	ret

0000164a <__fp_nan>:
    164a:	9f ef       	ldi	r25, 0xFF	; 255
    164c:	80 ec       	ldi	r24, 0xC0	; 192
    164e:	08 95       	ret

00001650 <__fp_pscA>:
    1650:	00 24       	eor	r0, r0
    1652:	0a 94       	dec	r0
    1654:	16 16       	cp	r1, r22
    1656:	17 06       	cpc	r1, r23
    1658:	18 06       	cpc	r1, r24
    165a:	09 06       	cpc	r0, r25
    165c:	08 95       	ret

0000165e <__fp_pscB>:
    165e:	00 24       	eor	r0, r0
    1660:	0a 94       	dec	r0
    1662:	12 16       	cp	r1, r18
    1664:	13 06       	cpc	r1, r19
    1666:	14 06       	cpc	r1, r20
    1668:	05 06       	cpc	r0, r21
    166a:	08 95       	ret

0000166c <__fp_round>:
    166c:	09 2e       	mov	r0, r25
    166e:	03 94       	inc	r0
    1670:	00 0c       	add	r0, r0
    1672:	11 f4       	brne	.+4      	; 0x1678 <__fp_round+0xc>
    1674:	88 23       	and	r24, r24
    1676:	52 f0       	brmi	.+20     	; 0x168c <__fp_round+0x20>
    1678:	bb 0f       	add	r27, r27
    167a:	40 f4       	brcc	.+16     	; 0x168c <__fp_round+0x20>
    167c:	bf 2b       	or	r27, r31
    167e:	11 f4       	brne	.+4      	; 0x1684 <__fp_round+0x18>
    1680:	60 ff       	sbrs	r22, 0
    1682:	04 c0       	rjmp	.+8      	; 0x168c <__fp_round+0x20>
    1684:	6f 5f       	subi	r22, 0xFF	; 255
    1686:	7f 4f       	sbci	r23, 0xFF	; 255
    1688:	8f 4f       	sbci	r24, 0xFF	; 255
    168a:	9f 4f       	sbci	r25, 0xFF	; 255
    168c:	08 95       	ret

0000168e <printf>:
    168e:	a0 e0       	ldi	r26, 0x00	; 0
    1690:	b0 e0       	ldi	r27, 0x00	; 0
    1692:	ec e4       	ldi	r30, 0x4C	; 76
    1694:	fb e0       	ldi	r31, 0x0B	; 11
    1696:	d0 c2       	rjmp	.+1440   	; 0x1c38 <__prologue_saves__+0x20>
    1698:	ae 01       	movw	r20, r28
    169a:	4b 5f       	subi	r20, 0xFB	; 251
    169c:	5f 4f       	sbci	r21, 0xFF	; 255
    169e:	fa 01       	movw	r30, r20
    16a0:	61 91       	ld	r22, Z+
    16a2:	71 91       	ld	r23, Z+
    16a4:	af 01       	movw	r20, r30
    16a6:	80 91 10 05 	lds	r24, 0x0510	; 0x800510 <__iob+0x2>
    16aa:	90 91 11 05 	lds	r25, 0x0511	; 0x800511 <__iob+0x3>
    16ae:	32 d0       	rcall	.+100    	; 0x1714 <vfprintf>
    16b0:	e2 e0       	ldi	r30, 0x02	; 2
    16b2:	de c2       	rjmp	.+1468   	; 0x1c70 <__epilogue_restores__+0x20>

000016b4 <puts>:
    16b4:	0f 93       	push	r16
    16b6:	1f 93       	push	r17
    16b8:	cf 93       	push	r28
    16ba:	df 93       	push	r29
    16bc:	e0 91 10 05 	lds	r30, 0x0510	; 0x800510 <__iob+0x2>
    16c0:	f0 91 11 05 	lds	r31, 0x0511	; 0x800511 <__iob+0x3>
    16c4:	23 81       	ldd	r18, Z+3	; 0x03
    16c6:	21 ff       	sbrs	r18, 1
    16c8:	1b c0       	rjmp	.+54     	; 0x1700 <puts+0x4c>
    16ca:	8c 01       	movw	r16, r24
    16cc:	d0 e0       	ldi	r29, 0x00	; 0
    16ce:	c0 e0       	ldi	r28, 0x00	; 0
    16d0:	f8 01       	movw	r30, r16
    16d2:	81 91       	ld	r24, Z+
    16d4:	8f 01       	movw	r16, r30
    16d6:	60 91 10 05 	lds	r22, 0x0510	; 0x800510 <__iob+0x2>
    16da:	70 91 11 05 	lds	r23, 0x0511	; 0x800511 <__iob+0x3>
    16de:	db 01       	movw	r26, r22
    16e0:	18 96       	adiw	r26, 0x08	; 8
    16e2:	ed 91       	ld	r30, X+
    16e4:	fc 91       	ld	r31, X
    16e6:	19 97       	sbiw	r26, 0x09	; 9
    16e8:	88 23       	and	r24, r24
    16ea:	31 f0       	breq	.+12     	; 0x16f8 <puts+0x44>
    16ec:	09 95       	icall
    16ee:	89 2b       	or	r24, r25
    16f0:	79 f3       	breq	.-34     	; 0x16d0 <puts+0x1c>
    16f2:	df ef       	ldi	r29, 0xFF	; 255
    16f4:	cf ef       	ldi	r28, 0xFF	; 255
    16f6:	ec cf       	rjmp	.-40     	; 0x16d0 <puts+0x1c>
    16f8:	8a e0       	ldi	r24, 0x0A	; 10
    16fa:	09 95       	icall
    16fc:	89 2b       	or	r24, r25
    16fe:	19 f0       	breq	.+6      	; 0x1706 <puts+0x52>
    1700:	8f ef       	ldi	r24, 0xFF	; 255
    1702:	9f ef       	ldi	r25, 0xFF	; 255
    1704:	02 c0       	rjmp	.+4      	; 0x170a <puts+0x56>
    1706:	8d 2f       	mov	r24, r29
    1708:	9c 2f       	mov	r25, r28
    170a:	df 91       	pop	r29
    170c:	cf 91       	pop	r28
    170e:	1f 91       	pop	r17
    1710:	0f 91       	pop	r16
    1712:	08 95       	ret

00001714 <vfprintf>:
    1714:	ab e0       	ldi	r26, 0x0B	; 11
    1716:	b0 e0       	ldi	r27, 0x00	; 0
    1718:	ef e8       	ldi	r30, 0x8F	; 143
    171a:	fb e0       	ldi	r31, 0x0B	; 11
    171c:	7d c2       	rjmp	.+1274   	; 0x1c18 <__prologue_saves__>
    171e:	6c 01       	movw	r12, r24
    1720:	7b 01       	movw	r14, r22
    1722:	8a 01       	movw	r16, r20
    1724:	fc 01       	movw	r30, r24
    1726:	17 82       	std	Z+7, r1	; 0x07
    1728:	16 82       	std	Z+6, r1	; 0x06
    172a:	83 81       	ldd	r24, Z+3	; 0x03
    172c:	81 ff       	sbrs	r24, 1
    172e:	bf c1       	rjmp	.+894    	; 0x1aae <vfprintf+0x39a>
    1730:	ce 01       	movw	r24, r28
    1732:	01 96       	adiw	r24, 0x01	; 1
    1734:	3c 01       	movw	r6, r24
    1736:	f6 01       	movw	r30, r12
    1738:	93 81       	ldd	r25, Z+3	; 0x03
    173a:	f7 01       	movw	r30, r14
    173c:	93 fd       	sbrc	r25, 3
    173e:	85 91       	lpm	r24, Z+
    1740:	93 ff       	sbrs	r25, 3
    1742:	81 91       	ld	r24, Z+
    1744:	7f 01       	movw	r14, r30
    1746:	88 23       	and	r24, r24
    1748:	09 f4       	brne	.+2      	; 0x174c <vfprintf+0x38>
    174a:	ad c1       	rjmp	.+858    	; 0x1aa6 <vfprintf+0x392>
    174c:	85 32       	cpi	r24, 0x25	; 37
    174e:	39 f4       	brne	.+14     	; 0x175e <vfprintf+0x4a>
    1750:	93 fd       	sbrc	r25, 3
    1752:	85 91       	lpm	r24, Z+
    1754:	93 ff       	sbrs	r25, 3
    1756:	81 91       	ld	r24, Z+
    1758:	7f 01       	movw	r14, r30
    175a:	85 32       	cpi	r24, 0x25	; 37
    175c:	21 f4       	brne	.+8      	; 0x1766 <vfprintf+0x52>
    175e:	b6 01       	movw	r22, r12
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	c0 d1       	rcall	.+896    	; 0x1ae4 <fputc>
    1764:	e8 cf       	rjmp	.-48     	; 0x1736 <vfprintf+0x22>
    1766:	91 2c       	mov	r9, r1
    1768:	21 2c       	mov	r2, r1
    176a:	31 2c       	mov	r3, r1
    176c:	ff e1       	ldi	r31, 0x1F	; 31
    176e:	f3 15       	cp	r31, r3
    1770:	d8 f0       	brcs	.+54     	; 0x17a8 <vfprintf+0x94>
    1772:	8b 32       	cpi	r24, 0x2B	; 43
    1774:	79 f0       	breq	.+30     	; 0x1794 <vfprintf+0x80>
    1776:	38 f4       	brcc	.+14     	; 0x1786 <vfprintf+0x72>
    1778:	80 32       	cpi	r24, 0x20	; 32
    177a:	79 f0       	breq	.+30     	; 0x179a <vfprintf+0x86>
    177c:	83 32       	cpi	r24, 0x23	; 35
    177e:	a1 f4       	brne	.+40     	; 0x17a8 <vfprintf+0x94>
    1780:	23 2d       	mov	r18, r3
    1782:	20 61       	ori	r18, 0x10	; 16
    1784:	1d c0       	rjmp	.+58     	; 0x17c0 <vfprintf+0xac>
    1786:	8d 32       	cpi	r24, 0x2D	; 45
    1788:	61 f0       	breq	.+24     	; 0x17a2 <vfprintf+0x8e>
    178a:	80 33       	cpi	r24, 0x30	; 48
    178c:	69 f4       	brne	.+26     	; 0x17a8 <vfprintf+0x94>
    178e:	23 2d       	mov	r18, r3
    1790:	21 60       	ori	r18, 0x01	; 1
    1792:	16 c0       	rjmp	.+44     	; 0x17c0 <vfprintf+0xac>
    1794:	83 2d       	mov	r24, r3
    1796:	82 60       	ori	r24, 0x02	; 2
    1798:	38 2e       	mov	r3, r24
    179a:	e3 2d       	mov	r30, r3
    179c:	e4 60       	ori	r30, 0x04	; 4
    179e:	3e 2e       	mov	r3, r30
    17a0:	2a c0       	rjmp	.+84     	; 0x17f6 <vfprintf+0xe2>
    17a2:	f3 2d       	mov	r31, r3
    17a4:	f8 60       	ori	r31, 0x08	; 8
    17a6:	1d c0       	rjmp	.+58     	; 0x17e2 <vfprintf+0xce>
    17a8:	37 fc       	sbrc	r3, 7
    17aa:	2d c0       	rjmp	.+90     	; 0x1806 <vfprintf+0xf2>
    17ac:	20 ed       	ldi	r18, 0xD0	; 208
    17ae:	28 0f       	add	r18, r24
    17b0:	2a 30       	cpi	r18, 0x0A	; 10
    17b2:	40 f0       	brcs	.+16     	; 0x17c4 <vfprintf+0xb0>
    17b4:	8e 32       	cpi	r24, 0x2E	; 46
    17b6:	b9 f4       	brne	.+46     	; 0x17e6 <vfprintf+0xd2>
    17b8:	36 fc       	sbrc	r3, 6
    17ba:	75 c1       	rjmp	.+746    	; 0x1aa6 <vfprintf+0x392>
    17bc:	23 2d       	mov	r18, r3
    17be:	20 64       	ori	r18, 0x40	; 64
    17c0:	32 2e       	mov	r3, r18
    17c2:	19 c0       	rjmp	.+50     	; 0x17f6 <vfprintf+0xe2>
    17c4:	36 fe       	sbrs	r3, 6
    17c6:	06 c0       	rjmp	.+12     	; 0x17d4 <vfprintf+0xc0>
    17c8:	8a e0       	ldi	r24, 0x0A	; 10
    17ca:	98 9e       	mul	r9, r24
    17cc:	20 0d       	add	r18, r0
    17ce:	11 24       	eor	r1, r1
    17d0:	92 2e       	mov	r9, r18
    17d2:	11 c0       	rjmp	.+34     	; 0x17f6 <vfprintf+0xe2>
    17d4:	ea e0       	ldi	r30, 0x0A	; 10
    17d6:	2e 9e       	mul	r2, r30
    17d8:	20 0d       	add	r18, r0
    17da:	11 24       	eor	r1, r1
    17dc:	22 2e       	mov	r2, r18
    17de:	f3 2d       	mov	r31, r3
    17e0:	f0 62       	ori	r31, 0x20	; 32
    17e2:	3f 2e       	mov	r3, r31
    17e4:	08 c0       	rjmp	.+16     	; 0x17f6 <vfprintf+0xe2>
    17e6:	8c 36       	cpi	r24, 0x6C	; 108
    17e8:	21 f4       	brne	.+8      	; 0x17f2 <vfprintf+0xde>
    17ea:	83 2d       	mov	r24, r3
    17ec:	80 68       	ori	r24, 0x80	; 128
    17ee:	38 2e       	mov	r3, r24
    17f0:	02 c0       	rjmp	.+4      	; 0x17f6 <vfprintf+0xe2>
    17f2:	88 36       	cpi	r24, 0x68	; 104
    17f4:	41 f4       	brne	.+16     	; 0x1806 <vfprintf+0xf2>
    17f6:	f7 01       	movw	r30, r14
    17f8:	93 fd       	sbrc	r25, 3
    17fa:	85 91       	lpm	r24, Z+
    17fc:	93 ff       	sbrs	r25, 3
    17fe:	81 91       	ld	r24, Z+
    1800:	7f 01       	movw	r14, r30
    1802:	81 11       	cpse	r24, r1
    1804:	b3 cf       	rjmp	.-154    	; 0x176c <vfprintf+0x58>
    1806:	98 2f       	mov	r25, r24
    1808:	9f 7d       	andi	r25, 0xDF	; 223
    180a:	95 54       	subi	r25, 0x45	; 69
    180c:	93 30       	cpi	r25, 0x03	; 3
    180e:	28 f4       	brcc	.+10     	; 0x181a <vfprintf+0x106>
    1810:	0c 5f       	subi	r16, 0xFC	; 252
    1812:	1f 4f       	sbci	r17, 0xFF	; 255
    1814:	9f e3       	ldi	r25, 0x3F	; 63
    1816:	99 83       	std	Y+1, r25	; 0x01
    1818:	0d c0       	rjmp	.+26     	; 0x1834 <vfprintf+0x120>
    181a:	83 36       	cpi	r24, 0x63	; 99
    181c:	31 f0       	breq	.+12     	; 0x182a <vfprintf+0x116>
    181e:	83 37       	cpi	r24, 0x73	; 115
    1820:	71 f0       	breq	.+28     	; 0x183e <vfprintf+0x12a>
    1822:	83 35       	cpi	r24, 0x53	; 83
    1824:	09 f0       	breq	.+2      	; 0x1828 <vfprintf+0x114>
    1826:	55 c0       	rjmp	.+170    	; 0x18d2 <vfprintf+0x1be>
    1828:	20 c0       	rjmp	.+64     	; 0x186a <vfprintf+0x156>
    182a:	f8 01       	movw	r30, r16
    182c:	80 81       	ld	r24, Z
    182e:	89 83       	std	Y+1, r24	; 0x01
    1830:	0e 5f       	subi	r16, 0xFE	; 254
    1832:	1f 4f       	sbci	r17, 0xFF	; 255
    1834:	88 24       	eor	r8, r8
    1836:	83 94       	inc	r8
    1838:	91 2c       	mov	r9, r1
    183a:	53 01       	movw	r10, r6
    183c:	12 c0       	rjmp	.+36     	; 0x1862 <vfprintf+0x14e>
    183e:	28 01       	movw	r4, r16
    1840:	f2 e0       	ldi	r31, 0x02	; 2
    1842:	4f 0e       	add	r4, r31
    1844:	51 1c       	adc	r5, r1
    1846:	f8 01       	movw	r30, r16
    1848:	a0 80       	ld	r10, Z
    184a:	b1 80       	ldd	r11, Z+1	; 0x01
    184c:	36 fe       	sbrs	r3, 6
    184e:	03 c0       	rjmp	.+6      	; 0x1856 <vfprintf+0x142>
    1850:	69 2d       	mov	r22, r9
    1852:	70 e0       	ldi	r23, 0x00	; 0
    1854:	02 c0       	rjmp	.+4      	; 0x185a <vfprintf+0x146>
    1856:	6f ef       	ldi	r22, 0xFF	; 255
    1858:	7f ef       	ldi	r23, 0xFF	; 255
    185a:	c5 01       	movw	r24, r10
    185c:	38 d1       	rcall	.+624    	; 0x1ace <strnlen>
    185e:	4c 01       	movw	r8, r24
    1860:	82 01       	movw	r16, r4
    1862:	f3 2d       	mov	r31, r3
    1864:	ff 77       	andi	r31, 0x7F	; 127
    1866:	3f 2e       	mov	r3, r31
    1868:	15 c0       	rjmp	.+42     	; 0x1894 <vfprintf+0x180>
    186a:	28 01       	movw	r4, r16
    186c:	22 e0       	ldi	r18, 0x02	; 2
    186e:	42 0e       	add	r4, r18
    1870:	51 1c       	adc	r5, r1
    1872:	f8 01       	movw	r30, r16
    1874:	a0 80       	ld	r10, Z
    1876:	b1 80       	ldd	r11, Z+1	; 0x01
    1878:	36 fe       	sbrs	r3, 6
    187a:	03 c0       	rjmp	.+6      	; 0x1882 <vfprintf+0x16e>
    187c:	69 2d       	mov	r22, r9
    187e:	70 e0       	ldi	r23, 0x00	; 0
    1880:	02 c0       	rjmp	.+4      	; 0x1886 <vfprintf+0x172>
    1882:	6f ef       	ldi	r22, 0xFF	; 255
    1884:	7f ef       	ldi	r23, 0xFF	; 255
    1886:	c5 01       	movw	r24, r10
    1888:	17 d1       	rcall	.+558    	; 0x1ab8 <strnlen_P>
    188a:	4c 01       	movw	r8, r24
    188c:	f3 2d       	mov	r31, r3
    188e:	f0 68       	ori	r31, 0x80	; 128
    1890:	3f 2e       	mov	r3, r31
    1892:	82 01       	movw	r16, r4
    1894:	33 fc       	sbrc	r3, 3
    1896:	19 c0       	rjmp	.+50     	; 0x18ca <vfprintf+0x1b6>
    1898:	82 2d       	mov	r24, r2
    189a:	90 e0       	ldi	r25, 0x00	; 0
    189c:	88 16       	cp	r8, r24
    189e:	99 06       	cpc	r9, r25
    18a0:	a0 f4       	brcc	.+40     	; 0x18ca <vfprintf+0x1b6>
    18a2:	b6 01       	movw	r22, r12
    18a4:	80 e2       	ldi	r24, 0x20	; 32
    18a6:	90 e0       	ldi	r25, 0x00	; 0
    18a8:	1d d1       	rcall	.+570    	; 0x1ae4 <fputc>
    18aa:	2a 94       	dec	r2
    18ac:	f5 cf       	rjmp	.-22     	; 0x1898 <vfprintf+0x184>
    18ae:	f5 01       	movw	r30, r10
    18b0:	37 fc       	sbrc	r3, 7
    18b2:	85 91       	lpm	r24, Z+
    18b4:	37 fe       	sbrs	r3, 7
    18b6:	81 91       	ld	r24, Z+
    18b8:	5f 01       	movw	r10, r30
    18ba:	b6 01       	movw	r22, r12
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	12 d1       	rcall	.+548    	; 0x1ae4 <fputc>
    18c0:	21 10       	cpse	r2, r1
    18c2:	2a 94       	dec	r2
    18c4:	21 e0       	ldi	r18, 0x01	; 1
    18c6:	82 1a       	sub	r8, r18
    18c8:	91 08       	sbc	r9, r1
    18ca:	81 14       	cp	r8, r1
    18cc:	91 04       	cpc	r9, r1
    18ce:	79 f7       	brne	.-34     	; 0x18ae <vfprintf+0x19a>
    18d0:	e1 c0       	rjmp	.+450    	; 0x1a94 <vfprintf+0x380>
    18d2:	84 36       	cpi	r24, 0x64	; 100
    18d4:	11 f0       	breq	.+4      	; 0x18da <vfprintf+0x1c6>
    18d6:	89 36       	cpi	r24, 0x69	; 105
    18d8:	39 f5       	brne	.+78     	; 0x1928 <vfprintf+0x214>
    18da:	f8 01       	movw	r30, r16
    18dc:	37 fe       	sbrs	r3, 7
    18de:	07 c0       	rjmp	.+14     	; 0x18ee <vfprintf+0x1da>
    18e0:	60 81       	ld	r22, Z
    18e2:	71 81       	ldd	r23, Z+1	; 0x01
    18e4:	82 81       	ldd	r24, Z+2	; 0x02
    18e6:	93 81       	ldd	r25, Z+3	; 0x03
    18e8:	0c 5f       	subi	r16, 0xFC	; 252
    18ea:	1f 4f       	sbci	r17, 0xFF	; 255
    18ec:	08 c0       	rjmp	.+16     	; 0x18fe <vfprintf+0x1ea>
    18ee:	60 81       	ld	r22, Z
    18f0:	71 81       	ldd	r23, Z+1	; 0x01
    18f2:	07 2e       	mov	r0, r23
    18f4:	00 0c       	add	r0, r0
    18f6:	88 0b       	sbc	r24, r24
    18f8:	99 0b       	sbc	r25, r25
    18fa:	0e 5f       	subi	r16, 0xFE	; 254
    18fc:	1f 4f       	sbci	r17, 0xFF	; 255
    18fe:	f3 2d       	mov	r31, r3
    1900:	ff 76       	andi	r31, 0x6F	; 111
    1902:	3f 2e       	mov	r3, r31
    1904:	97 ff       	sbrs	r25, 7
    1906:	09 c0       	rjmp	.+18     	; 0x191a <vfprintf+0x206>
    1908:	90 95       	com	r25
    190a:	80 95       	com	r24
    190c:	70 95       	com	r23
    190e:	61 95       	neg	r22
    1910:	7f 4f       	sbci	r23, 0xFF	; 255
    1912:	8f 4f       	sbci	r24, 0xFF	; 255
    1914:	9f 4f       	sbci	r25, 0xFF	; 255
    1916:	f0 68       	ori	r31, 0x80	; 128
    1918:	3f 2e       	mov	r3, r31
    191a:	2a e0       	ldi	r18, 0x0A	; 10
    191c:	30 e0       	ldi	r19, 0x00	; 0
    191e:	a3 01       	movw	r20, r6
    1920:	1d d1       	rcall	.+570    	; 0x1b5c <__ultoa_invert>
    1922:	88 2e       	mov	r8, r24
    1924:	86 18       	sub	r8, r6
    1926:	44 c0       	rjmp	.+136    	; 0x19b0 <vfprintf+0x29c>
    1928:	85 37       	cpi	r24, 0x75	; 117
    192a:	31 f4       	brne	.+12     	; 0x1938 <vfprintf+0x224>
    192c:	23 2d       	mov	r18, r3
    192e:	2f 7e       	andi	r18, 0xEF	; 239
    1930:	b2 2e       	mov	r11, r18
    1932:	2a e0       	ldi	r18, 0x0A	; 10
    1934:	30 e0       	ldi	r19, 0x00	; 0
    1936:	25 c0       	rjmp	.+74     	; 0x1982 <vfprintf+0x26e>
    1938:	93 2d       	mov	r25, r3
    193a:	99 7f       	andi	r25, 0xF9	; 249
    193c:	b9 2e       	mov	r11, r25
    193e:	8f 36       	cpi	r24, 0x6F	; 111
    1940:	c1 f0       	breq	.+48     	; 0x1972 <vfprintf+0x25e>
    1942:	18 f4       	brcc	.+6      	; 0x194a <vfprintf+0x236>
    1944:	88 35       	cpi	r24, 0x58	; 88
    1946:	79 f0       	breq	.+30     	; 0x1966 <vfprintf+0x252>
    1948:	ae c0       	rjmp	.+348    	; 0x1aa6 <vfprintf+0x392>
    194a:	80 37       	cpi	r24, 0x70	; 112
    194c:	19 f0       	breq	.+6      	; 0x1954 <vfprintf+0x240>
    194e:	88 37       	cpi	r24, 0x78	; 120
    1950:	21 f0       	breq	.+8      	; 0x195a <vfprintf+0x246>
    1952:	a9 c0       	rjmp	.+338    	; 0x1aa6 <vfprintf+0x392>
    1954:	e9 2f       	mov	r30, r25
    1956:	e0 61       	ori	r30, 0x10	; 16
    1958:	be 2e       	mov	r11, r30
    195a:	b4 fe       	sbrs	r11, 4
    195c:	0d c0       	rjmp	.+26     	; 0x1978 <vfprintf+0x264>
    195e:	fb 2d       	mov	r31, r11
    1960:	f4 60       	ori	r31, 0x04	; 4
    1962:	bf 2e       	mov	r11, r31
    1964:	09 c0       	rjmp	.+18     	; 0x1978 <vfprintf+0x264>
    1966:	34 fe       	sbrs	r3, 4
    1968:	0a c0       	rjmp	.+20     	; 0x197e <vfprintf+0x26a>
    196a:	29 2f       	mov	r18, r25
    196c:	26 60       	ori	r18, 0x06	; 6
    196e:	b2 2e       	mov	r11, r18
    1970:	06 c0       	rjmp	.+12     	; 0x197e <vfprintf+0x26a>
    1972:	28 e0       	ldi	r18, 0x08	; 8
    1974:	30 e0       	ldi	r19, 0x00	; 0
    1976:	05 c0       	rjmp	.+10     	; 0x1982 <vfprintf+0x26e>
    1978:	20 e1       	ldi	r18, 0x10	; 16
    197a:	30 e0       	ldi	r19, 0x00	; 0
    197c:	02 c0       	rjmp	.+4      	; 0x1982 <vfprintf+0x26e>
    197e:	20 e1       	ldi	r18, 0x10	; 16
    1980:	32 e0       	ldi	r19, 0x02	; 2
    1982:	f8 01       	movw	r30, r16
    1984:	b7 fe       	sbrs	r11, 7
    1986:	07 c0       	rjmp	.+14     	; 0x1996 <vfprintf+0x282>
    1988:	60 81       	ld	r22, Z
    198a:	71 81       	ldd	r23, Z+1	; 0x01
    198c:	82 81       	ldd	r24, Z+2	; 0x02
    198e:	93 81       	ldd	r25, Z+3	; 0x03
    1990:	0c 5f       	subi	r16, 0xFC	; 252
    1992:	1f 4f       	sbci	r17, 0xFF	; 255
    1994:	06 c0       	rjmp	.+12     	; 0x19a2 <vfprintf+0x28e>
    1996:	60 81       	ld	r22, Z
    1998:	71 81       	ldd	r23, Z+1	; 0x01
    199a:	80 e0       	ldi	r24, 0x00	; 0
    199c:	90 e0       	ldi	r25, 0x00	; 0
    199e:	0e 5f       	subi	r16, 0xFE	; 254
    19a0:	1f 4f       	sbci	r17, 0xFF	; 255
    19a2:	a3 01       	movw	r20, r6
    19a4:	db d0       	rcall	.+438    	; 0x1b5c <__ultoa_invert>
    19a6:	88 2e       	mov	r8, r24
    19a8:	86 18       	sub	r8, r6
    19aa:	fb 2d       	mov	r31, r11
    19ac:	ff 77       	andi	r31, 0x7F	; 127
    19ae:	3f 2e       	mov	r3, r31
    19b0:	36 fe       	sbrs	r3, 6
    19b2:	0d c0       	rjmp	.+26     	; 0x19ce <vfprintf+0x2ba>
    19b4:	23 2d       	mov	r18, r3
    19b6:	2e 7f       	andi	r18, 0xFE	; 254
    19b8:	a2 2e       	mov	r10, r18
    19ba:	89 14       	cp	r8, r9
    19bc:	58 f4       	brcc	.+22     	; 0x19d4 <vfprintf+0x2c0>
    19be:	34 fe       	sbrs	r3, 4
    19c0:	0b c0       	rjmp	.+22     	; 0x19d8 <vfprintf+0x2c4>
    19c2:	32 fc       	sbrc	r3, 2
    19c4:	09 c0       	rjmp	.+18     	; 0x19d8 <vfprintf+0x2c4>
    19c6:	83 2d       	mov	r24, r3
    19c8:	8e 7e       	andi	r24, 0xEE	; 238
    19ca:	a8 2e       	mov	r10, r24
    19cc:	05 c0       	rjmp	.+10     	; 0x19d8 <vfprintf+0x2c4>
    19ce:	b8 2c       	mov	r11, r8
    19d0:	a3 2c       	mov	r10, r3
    19d2:	03 c0       	rjmp	.+6      	; 0x19da <vfprintf+0x2c6>
    19d4:	b8 2c       	mov	r11, r8
    19d6:	01 c0       	rjmp	.+2      	; 0x19da <vfprintf+0x2c6>
    19d8:	b9 2c       	mov	r11, r9
    19da:	a4 fe       	sbrs	r10, 4
    19dc:	0f c0       	rjmp	.+30     	; 0x19fc <vfprintf+0x2e8>
    19de:	fe 01       	movw	r30, r28
    19e0:	e8 0d       	add	r30, r8
    19e2:	f1 1d       	adc	r31, r1
    19e4:	80 81       	ld	r24, Z
    19e6:	80 33       	cpi	r24, 0x30	; 48
    19e8:	21 f4       	brne	.+8      	; 0x19f2 <vfprintf+0x2de>
    19ea:	9a 2d       	mov	r25, r10
    19ec:	99 7e       	andi	r25, 0xE9	; 233
    19ee:	a9 2e       	mov	r10, r25
    19f0:	09 c0       	rjmp	.+18     	; 0x1a04 <vfprintf+0x2f0>
    19f2:	a2 fe       	sbrs	r10, 2
    19f4:	06 c0       	rjmp	.+12     	; 0x1a02 <vfprintf+0x2ee>
    19f6:	b3 94       	inc	r11
    19f8:	b3 94       	inc	r11
    19fa:	04 c0       	rjmp	.+8      	; 0x1a04 <vfprintf+0x2f0>
    19fc:	8a 2d       	mov	r24, r10
    19fe:	86 78       	andi	r24, 0x86	; 134
    1a00:	09 f0       	breq	.+2      	; 0x1a04 <vfprintf+0x2f0>
    1a02:	b3 94       	inc	r11
    1a04:	a3 fc       	sbrc	r10, 3
    1a06:	10 c0       	rjmp	.+32     	; 0x1a28 <vfprintf+0x314>
    1a08:	a0 fe       	sbrs	r10, 0
    1a0a:	06 c0       	rjmp	.+12     	; 0x1a18 <vfprintf+0x304>
    1a0c:	b2 14       	cp	r11, r2
    1a0e:	80 f4       	brcc	.+32     	; 0x1a30 <vfprintf+0x31c>
    1a10:	28 0c       	add	r2, r8
    1a12:	92 2c       	mov	r9, r2
    1a14:	9b 18       	sub	r9, r11
    1a16:	0d c0       	rjmp	.+26     	; 0x1a32 <vfprintf+0x31e>
    1a18:	b2 14       	cp	r11, r2
    1a1a:	58 f4       	brcc	.+22     	; 0x1a32 <vfprintf+0x31e>
    1a1c:	b6 01       	movw	r22, r12
    1a1e:	80 e2       	ldi	r24, 0x20	; 32
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	60 d0       	rcall	.+192    	; 0x1ae4 <fputc>
    1a24:	b3 94       	inc	r11
    1a26:	f8 cf       	rjmp	.-16     	; 0x1a18 <vfprintf+0x304>
    1a28:	b2 14       	cp	r11, r2
    1a2a:	18 f4       	brcc	.+6      	; 0x1a32 <vfprintf+0x31e>
    1a2c:	2b 18       	sub	r2, r11
    1a2e:	02 c0       	rjmp	.+4      	; 0x1a34 <vfprintf+0x320>
    1a30:	98 2c       	mov	r9, r8
    1a32:	21 2c       	mov	r2, r1
    1a34:	a4 fe       	sbrs	r10, 4
    1a36:	0f c0       	rjmp	.+30     	; 0x1a56 <vfprintf+0x342>
    1a38:	b6 01       	movw	r22, r12
    1a3a:	80 e3       	ldi	r24, 0x30	; 48
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	52 d0       	rcall	.+164    	; 0x1ae4 <fputc>
    1a40:	a2 fe       	sbrs	r10, 2
    1a42:	16 c0       	rjmp	.+44     	; 0x1a70 <vfprintf+0x35c>
    1a44:	a1 fc       	sbrc	r10, 1
    1a46:	03 c0       	rjmp	.+6      	; 0x1a4e <vfprintf+0x33a>
    1a48:	88 e7       	ldi	r24, 0x78	; 120
    1a4a:	90 e0       	ldi	r25, 0x00	; 0
    1a4c:	02 c0       	rjmp	.+4      	; 0x1a52 <vfprintf+0x33e>
    1a4e:	88 e5       	ldi	r24, 0x58	; 88
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	b6 01       	movw	r22, r12
    1a54:	0c c0       	rjmp	.+24     	; 0x1a6e <vfprintf+0x35a>
    1a56:	8a 2d       	mov	r24, r10
    1a58:	86 78       	andi	r24, 0x86	; 134
    1a5a:	51 f0       	breq	.+20     	; 0x1a70 <vfprintf+0x35c>
    1a5c:	a1 fe       	sbrs	r10, 1
    1a5e:	02 c0       	rjmp	.+4      	; 0x1a64 <vfprintf+0x350>
    1a60:	8b e2       	ldi	r24, 0x2B	; 43
    1a62:	01 c0       	rjmp	.+2      	; 0x1a66 <vfprintf+0x352>
    1a64:	80 e2       	ldi	r24, 0x20	; 32
    1a66:	a7 fc       	sbrc	r10, 7
    1a68:	8d e2       	ldi	r24, 0x2D	; 45
    1a6a:	b6 01       	movw	r22, r12
    1a6c:	90 e0       	ldi	r25, 0x00	; 0
    1a6e:	3a d0       	rcall	.+116    	; 0x1ae4 <fputc>
    1a70:	89 14       	cp	r8, r9
    1a72:	30 f4       	brcc	.+12     	; 0x1a80 <vfprintf+0x36c>
    1a74:	b6 01       	movw	r22, r12
    1a76:	80 e3       	ldi	r24, 0x30	; 48
    1a78:	90 e0       	ldi	r25, 0x00	; 0
    1a7a:	34 d0       	rcall	.+104    	; 0x1ae4 <fputc>
    1a7c:	9a 94       	dec	r9
    1a7e:	f8 cf       	rjmp	.-16     	; 0x1a70 <vfprintf+0x35c>
    1a80:	8a 94       	dec	r8
    1a82:	f3 01       	movw	r30, r6
    1a84:	e8 0d       	add	r30, r8
    1a86:	f1 1d       	adc	r31, r1
    1a88:	80 81       	ld	r24, Z
    1a8a:	b6 01       	movw	r22, r12
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	2a d0       	rcall	.+84     	; 0x1ae4 <fputc>
    1a90:	81 10       	cpse	r8, r1
    1a92:	f6 cf       	rjmp	.-20     	; 0x1a80 <vfprintf+0x36c>
    1a94:	22 20       	and	r2, r2
    1a96:	09 f4       	brne	.+2      	; 0x1a9a <vfprintf+0x386>
    1a98:	4e ce       	rjmp	.-868    	; 0x1736 <vfprintf+0x22>
    1a9a:	b6 01       	movw	r22, r12
    1a9c:	80 e2       	ldi	r24, 0x20	; 32
    1a9e:	90 e0       	ldi	r25, 0x00	; 0
    1aa0:	21 d0       	rcall	.+66     	; 0x1ae4 <fputc>
    1aa2:	2a 94       	dec	r2
    1aa4:	f7 cf       	rjmp	.-18     	; 0x1a94 <vfprintf+0x380>
    1aa6:	f6 01       	movw	r30, r12
    1aa8:	86 81       	ldd	r24, Z+6	; 0x06
    1aaa:	97 81       	ldd	r25, Z+7	; 0x07
    1aac:	02 c0       	rjmp	.+4      	; 0x1ab2 <vfprintf+0x39e>
    1aae:	8f ef       	ldi	r24, 0xFF	; 255
    1ab0:	9f ef       	ldi	r25, 0xFF	; 255
    1ab2:	2b 96       	adiw	r28, 0x0b	; 11
    1ab4:	e2 e1       	ldi	r30, 0x12	; 18
    1ab6:	cc c0       	rjmp	.+408    	; 0x1c50 <__epilogue_restores__>

00001ab8 <strnlen_P>:
    1ab8:	fc 01       	movw	r30, r24
    1aba:	05 90       	lpm	r0, Z+
    1abc:	61 50       	subi	r22, 0x01	; 1
    1abe:	70 40       	sbci	r23, 0x00	; 0
    1ac0:	01 10       	cpse	r0, r1
    1ac2:	d8 f7       	brcc	.-10     	; 0x1aba <strnlen_P+0x2>
    1ac4:	80 95       	com	r24
    1ac6:	90 95       	com	r25
    1ac8:	8e 0f       	add	r24, r30
    1aca:	9f 1f       	adc	r25, r31
    1acc:	08 95       	ret

00001ace <strnlen>:
    1ace:	fc 01       	movw	r30, r24
    1ad0:	61 50       	subi	r22, 0x01	; 1
    1ad2:	70 40       	sbci	r23, 0x00	; 0
    1ad4:	01 90       	ld	r0, Z+
    1ad6:	01 10       	cpse	r0, r1
    1ad8:	d8 f7       	brcc	.-10     	; 0x1ad0 <strnlen+0x2>
    1ada:	80 95       	com	r24
    1adc:	90 95       	com	r25
    1ade:	8e 0f       	add	r24, r30
    1ae0:	9f 1f       	adc	r25, r31
    1ae2:	08 95       	ret

00001ae4 <fputc>:
    1ae4:	0f 93       	push	r16
    1ae6:	1f 93       	push	r17
    1ae8:	cf 93       	push	r28
    1aea:	df 93       	push	r29
    1aec:	fb 01       	movw	r30, r22
    1aee:	23 81       	ldd	r18, Z+3	; 0x03
    1af0:	21 fd       	sbrc	r18, 1
    1af2:	03 c0       	rjmp	.+6      	; 0x1afa <fputc+0x16>
    1af4:	8f ef       	ldi	r24, 0xFF	; 255
    1af6:	9f ef       	ldi	r25, 0xFF	; 255
    1af8:	2c c0       	rjmp	.+88     	; 0x1b52 <fputc+0x6e>
    1afa:	22 ff       	sbrs	r18, 2
    1afc:	16 c0       	rjmp	.+44     	; 0x1b2a <fputc+0x46>
    1afe:	46 81       	ldd	r20, Z+6	; 0x06
    1b00:	57 81       	ldd	r21, Z+7	; 0x07
    1b02:	24 81       	ldd	r18, Z+4	; 0x04
    1b04:	35 81       	ldd	r19, Z+5	; 0x05
    1b06:	42 17       	cp	r20, r18
    1b08:	53 07       	cpc	r21, r19
    1b0a:	44 f4       	brge	.+16     	; 0x1b1c <fputc+0x38>
    1b0c:	a0 81       	ld	r26, Z
    1b0e:	b1 81       	ldd	r27, Z+1	; 0x01
    1b10:	9d 01       	movw	r18, r26
    1b12:	2f 5f       	subi	r18, 0xFF	; 255
    1b14:	3f 4f       	sbci	r19, 0xFF	; 255
    1b16:	31 83       	std	Z+1, r19	; 0x01
    1b18:	20 83       	st	Z, r18
    1b1a:	8c 93       	st	X, r24
    1b1c:	26 81       	ldd	r18, Z+6	; 0x06
    1b1e:	37 81       	ldd	r19, Z+7	; 0x07
    1b20:	2f 5f       	subi	r18, 0xFF	; 255
    1b22:	3f 4f       	sbci	r19, 0xFF	; 255
    1b24:	37 83       	std	Z+7, r19	; 0x07
    1b26:	26 83       	std	Z+6, r18	; 0x06
    1b28:	14 c0       	rjmp	.+40     	; 0x1b52 <fputc+0x6e>
    1b2a:	8b 01       	movw	r16, r22
    1b2c:	ec 01       	movw	r28, r24
    1b2e:	fb 01       	movw	r30, r22
    1b30:	00 84       	ldd	r0, Z+8	; 0x08
    1b32:	f1 85       	ldd	r31, Z+9	; 0x09
    1b34:	e0 2d       	mov	r30, r0
    1b36:	09 95       	icall
    1b38:	89 2b       	or	r24, r25
    1b3a:	e1 f6       	brne	.-72     	; 0x1af4 <fputc+0x10>
    1b3c:	d8 01       	movw	r26, r16
    1b3e:	16 96       	adiw	r26, 0x06	; 6
    1b40:	8d 91       	ld	r24, X+
    1b42:	9c 91       	ld	r25, X
    1b44:	17 97       	sbiw	r26, 0x07	; 7
    1b46:	01 96       	adiw	r24, 0x01	; 1
    1b48:	17 96       	adiw	r26, 0x07	; 7
    1b4a:	9c 93       	st	X, r25
    1b4c:	8e 93       	st	-X, r24
    1b4e:	16 97       	sbiw	r26, 0x06	; 6
    1b50:	ce 01       	movw	r24, r28
    1b52:	df 91       	pop	r29
    1b54:	cf 91       	pop	r28
    1b56:	1f 91       	pop	r17
    1b58:	0f 91       	pop	r16
    1b5a:	08 95       	ret

00001b5c <__ultoa_invert>:
    1b5c:	fa 01       	movw	r30, r20
    1b5e:	aa 27       	eor	r26, r26
    1b60:	28 30       	cpi	r18, 0x08	; 8
    1b62:	51 f1       	breq	.+84     	; 0x1bb8 <__ultoa_invert+0x5c>
    1b64:	20 31       	cpi	r18, 0x10	; 16
    1b66:	81 f1       	breq	.+96     	; 0x1bc8 <__ultoa_invert+0x6c>
    1b68:	e8 94       	clt
    1b6a:	6f 93       	push	r22
    1b6c:	6e 7f       	andi	r22, 0xFE	; 254
    1b6e:	6e 5f       	subi	r22, 0xFE	; 254
    1b70:	7f 4f       	sbci	r23, 0xFF	; 255
    1b72:	8f 4f       	sbci	r24, 0xFF	; 255
    1b74:	9f 4f       	sbci	r25, 0xFF	; 255
    1b76:	af 4f       	sbci	r26, 0xFF	; 255
    1b78:	b1 e0       	ldi	r27, 0x01	; 1
    1b7a:	3e d0       	rcall	.+124    	; 0x1bf8 <__ultoa_invert+0x9c>
    1b7c:	b4 e0       	ldi	r27, 0x04	; 4
    1b7e:	3c d0       	rcall	.+120    	; 0x1bf8 <__ultoa_invert+0x9c>
    1b80:	67 0f       	add	r22, r23
    1b82:	78 1f       	adc	r23, r24
    1b84:	89 1f       	adc	r24, r25
    1b86:	9a 1f       	adc	r25, r26
    1b88:	a1 1d       	adc	r26, r1
    1b8a:	68 0f       	add	r22, r24
    1b8c:	79 1f       	adc	r23, r25
    1b8e:	8a 1f       	adc	r24, r26
    1b90:	91 1d       	adc	r25, r1
    1b92:	a1 1d       	adc	r26, r1
    1b94:	6a 0f       	add	r22, r26
    1b96:	71 1d       	adc	r23, r1
    1b98:	81 1d       	adc	r24, r1
    1b9a:	91 1d       	adc	r25, r1
    1b9c:	a1 1d       	adc	r26, r1
    1b9e:	20 d0       	rcall	.+64     	; 0x1be0 <__ultoa_invert+0x84>
    1ba0:	09 f4       	brne	.+2      	; 0x1ba4 <__ultoa_invert+0x48>
    1ba2:	68 94       	set
    1ba4:	3f 91       	pop	r19
    1ba6:	2a e0       	ldi	r18, 0x0A	; 10
    1ba8:	26 9f       	mul	r18, r22
    1baa:	11 24       	eor	r1, r1
    1bac:	30 19       	sub	r19, r0
    1bae:	30 5d       	subi	r19, 0xD0	; 208
    1bb0:	31 93       	st	Z+, r19
    1bb2:	de f6       	brtc	.-74     	; 0x1b6a <__ultoa_invert+0xe>
    1bb4:	cf 01       	movw	r24, r30
    1bb6:	08 95       	ret
    1bb8:	46 2f       	mov	r20, r22
    1bba:	47 70       	andi	r20, 0x07	; 7
    1bbc:	40 5d       	subi	r20, 0xD0	; 208
    1bbe:	41 93       	st	Z+, r20
    1bc0:	b3 e0       	ldi	r27, 0x03	; 3
    1bc2:	0f d0       	rcall	.+30     	; 0x1be2 <__ultoa_invert+0x86>
    1bc4:	c9 f7       	brne	.-14     	; 0x1bb8 <__ultoa_invert+0x5c>
    1bc6:	f6 cf       	rjmp	.-20     	; 0x1bb4 <__ultoa_invert+0x58>
    1bc8:	46 2f       	mov	r20, r22
    1bca:	4f 70       	andi	r20, 0x0F	; 15
    1bcc:	40 5d       	subi	r20, 0xD0	; 208
    1bce:	4a 33       	cpi	r20, 0x3A	; 58
    1bd0:	18 f0       	brcs	.+6      	; 0x1bd8 <__ultoa_invert+0x7c>
    1bd2:	49 5d       	subi	r20, 0xD9	; 217
    1bd4:	31 fd       	sbrc	r19, 1
    1bd6:	40 52       	subi	r20, 0x20	; 32
    1bd8:	41 93       	st	Z+, r20
    1bda:	02 d0       	rcall	.+4      	; 0x1be0 <__ultoa_invert+0x84>
    1bdc:	a9 f7       	brne	.-22     	; 0x1bc8 <__ultoa_invert+0x6c>
    1bde:	ea cf       	rjmp	.-44     	; 0x1bb4 <__ultoa_invert+0x58>
    1be0:	b4 e0       	ldi	r27, 0x04	; 4
    1be2:	a6 95       	lsr	r26
    1be4:	97 95       	ror	r25
    1be6:	87 95       	ror	r24
    1be8:	77 95       	ror	r23
    1bea:	67 95       	ror	r22
    1bec:	ba 95       	dec	r27
    1bee:	c9 f7       	brne	.-14     	; 0x1be2 <__ultoa_invert+0x86>
    1bf0:	00 97       	sbiw	r24, 0x00	; 0
    1bf2:	61 05       	cpc	r22, r1
    1bf4:	71 05       	cpc	r23, r1
    1bf6:	08 95       	ret
    1bf8:	9b 01       	movw	r18, r22
    1bfa:	ac 01       	movw	r20, r24
    1bfc:	0a 2e       	mov	r0, r26
    1bfe:	06 94       	lsr	r0
    1c00:	57 95       	ror	r21
    1c02:	47 95       	ror	r20
    1c04:	37 95       	ror	r19
    1c06:	27 95       	ror	r18
    1c08:	ba 95       	dec	r27
    1c0a:	c9 f7       	brne	.-14     	; 0x1bfe <__ultoa_invert+0xa2>
    1c0c:	62 0f       	add	r22, r18
    1c0e:	73 1f       	adc	r23, r19
    1c10:	84 1f       	adc	r24, r20
    1c12:	95 1f       	adc	r25, r21
    1c14:	a0 1d       	adc	r26, r0
    1c16:	08 95       	ret

00001c18 <__prologue_saves__>:
    1c18:	2f 92       	push	r2
    1c1a:	3f 92       	push	r3
    1c1c:	4f 92       	push	r4
    1c1e:	5f 92       	push	r5
    1c20:	6f 92       	push	r6
    1c22:	7f 92       	push	r7
    1c24:	8f 92       	push	r8
    1c26:	9f 92       	push	r9
    1c28:	af 92       	push	r10
    1c2a:	bf 92       	push	r11
    1c2c:	cf 92       	push	r12
    1c2e:	df 92       	push	r13
    1c30:	ef 92       	push	r14
    1c32:	ff 92       	push	r15
    1c34:	0f 93       	push	r16
    1c36:	1f 93       	push	r17
    1c38:	cf 93       	push	r28
    1c3a:	df 93       	push	r29
    1c3c:	cd b7       	in	r28, 0x3d	; 61
    1c3e:	de b7       	in	r29, 0x3e	; 62
    1c40:	ca 1b       	sub	r28, r26
    1c42:	db 0b       	sbc	r29, r27
    1c44:	0f b6       	in	r0, 0x3f	; 63
    1c46:	f8 94       	cli
    1c48:	de bf       	out	0x3e, r29	; 62
    1c4a:	0f be       	out	0x3f, r0	; 63
    1c4c:	cd bf       	out	0x3d, r28	; 61
    1c4e:	09 94       	ijmp

00001c50 <__epilogue_restores__>:
    1c50:	2a 88       	ldd	r2, Y+18	; 0x12
    1c52:	39 88       	ldd	r3, Y+17	; 0x11
    1c54:	48 88       	ldd	r4, Y+16	; 0x10
    1c56:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c58:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c5a:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c5c:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c5e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c60:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c62:	b9 84       	ldd	r11, Y+9	; 0x09
    1c64:	c8 84       	ldd	r12, Y+8	; 0x08
    1c66:	df 80       	ldd	r13, Y+7	; 0x07
    1c68:	ee 80       	ldd	r14, Y+6	; 0x06
    1c6a:	fd 80       	ldd	r15, Y+5	; 0x05
    1c6c:	0c 81       	ldd	r16, Y+4	; 0x04
    1c6e:	1b 81       	ldd	r17, Y+3	; 0x03
    1c70:	aa 81       	ldd	r26, Y+2	; 0x02
    1c72:	b9 81       	ldd	r27, Y+1	; 0x01
    1c74:	ce 0f       	add	r28, r30
    1c76:	d1 1d       	adc	r29, r1
    1c78:	0f b6       	in	r0, 0x3f	; 63
    1c7a:	f8 94       	cli
    1c7c:	de bf       	out	0x3e, r29	; 62
    1c7e:	0f be       	out	0x3f, r0	; 63
    1c80:	cd bf       	out	0x3d, r28	; 61
    1c82:	ed 01       	movw	r28, r26
    1c84:	08 95       	ret

00001c86 <_exit>:
    1c86:	f8 94       	cli

00001c88 <__stop_program>:
    1c88:	ff cf       	rjmp	.-2      	; 0x1c88 <__stop_program>
