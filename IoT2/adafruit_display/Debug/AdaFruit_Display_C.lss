
AdaFruit_Display_C.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000362  00800100  00001ba2  00001c36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ba2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000052  00800462  00800462  00001f98  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f98  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ff4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e0  00000000  00000000  00002034  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e2c  00000000  00000000  00002214  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e44  00000000  00000000  00004040  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001831  00000000  00000000  00004e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000698  00000000  00000000  000066b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b85  00000000  00000000  00006d50  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dd5  00000000  00000000  000078d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  000086aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5f c1       	rjmp	.+702    	; 0x2c0 <__ctors_end>
       2:	00 00       	nop
       4:	7a c1       	rjmp	.+756    	; 0x2fa <__bad_interrupt>
       6:	00 00       	nop
       8:	78 c1       	rjmp	.+752    	; 0x2fa <__bad_interrupt>
       a:	00 00       	nop
       c:	76 c1       	rjmp	.+748    	; 0x2fa <__bad_interrupt>
       e:	00 00       	nop
      10:	74 c1       	rjmp	.+744    	; 0x2fa <__bad_interrupt>
      12:	00 00       	nop
      14:	72 c1       	rjmp	.+740    	; 0x2fa <__bad_interrupt>
      16:	00 00       	nop
      18:	70 c1       	rjmp	.+736    	; 0x2fa <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6e c1       	rjmp	.+732    	; 0x2fa <__bad_interrupt>
      1e:	00 00       	nop
      20:	6c c1       	rjmp	.+728    	; 0x2fa <__bad_interrupt>
      22:	00 00       	nop
      24:	6a c1       	rjmp	.+724    	; 0x2fa <__bad_interrupt>
      26:	00 00       	nop
      28:	68 c1       	rjmp	.+720    	; 0x2fa <__bad_interrupt>
      2a:	00 00       	nop
      2c:	66 c1       	rjmp	.+716    	; 0x2fa <__bad_interrupt>
      2e:	00 00       	nop
      30:	64 c1       	rjmp	.+712    	; 0x2fa <__bad_interrupt>
      32:	00 00       	nop
      34:	62 c1       	rjmp	.+708    	; 0x2fa <__bad_interrupt>
      36:	00 00       	nop
      38:	60 c1       	rjmp	.+704    	; 0x2fa <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5e c1       	rjmp	.+700    	; 0x2fa <__bad_interrupt>
      3e:	00 00       	nop
      40:	5c c1       	rjmp	.+696    	; 0x2fa <__bad_interrupt>
      42:	00 00       	nop
      44:	5a c1       	rjmp	.+692    	; 0x2fa <__bad_interrupt>
      46:	00 00       	nop
      48:	0c 94 87 08 	jmp	0x110e	; 0x110e <__vector_18>
      4c:	56 c1       	rjmp	.+684    	; 0x2fa <__bad_interrupt>
      4e:	00 00       	nop
      50:	54 c1       	rjmp	.+680    	; 0x2fa <__bad_interrupt>
      52:	00 00       	nop
      54:	52 c1       	rjmp	.+676    	; 0x2fa <__bad_interrupt>
      56:	00 00       	nop
      58:	50 c1       	rjmp	.+672    	; 0x2fa <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4e c1       	rjmp	.+668    	; 0x2fa <__bad_interrupt>
      5e:	00 00       	nop
      60:	4c c1       	rjmp	.+664    	; 0x2fa <__bad_interrupt>
      62:	00 00       	nop
      64:	4a c1       	rjmp	.+660    	; 0x2fa <__bad_interrupt>
      66:	00 00       	nop
      68:	48 c1       	rjmp	.+656    	; 0x2fa <__bad_interrupt>
      6a:	00 00       	nop
      6c:	46 c1       	rjmp	.+652    	; 0x2fa <__bad_interrupt>
      6e:	00 00       	nop
      70:	44 c1       	rjmp	.+648    	; 0x2fa <__bad_interrupt>
      72:	00 00       	nop
      74:	42 c1       	rjmp	.+644    	; 0x2fa <__bad_interrupt>
      76:	00 00       	nop
      78:	40 c1       	rjmp	.+640    	; 0x2fa <__bad_interrupt>
      7a:	00 00       	nop
      7c:	3e c1       	rjmp	.+636    	; 0x2fa <__bad_interrupt>
      7e:	00 00       	nop
      80:	3c c1       	rjmp	.+632    	; 0x2fa <__bad_interrupt>
      82:	00 00       	nop
      84:	3a c1       	rjmp	.+628    	; 0x2fa <__bad_interrupt>
      86:	00 00       	nop
      88:	38 c1       	rjmp	.+624    	; 0x2fa <__bad_interrupt>
      8a:	00 00       	nop
      8c:	36 c1       	rjmp	.+620    	; 0x2fa <__bad_interrupt>
      8e:	00 00       	nop
      90:	34 c1       	rjmp	.+616    	; 0x2fa <__bad_interrupt>
      92:	00 00       	nop
      94:	32 c1       	rjmp	.+612    	; 0x2fa <__bad_interrupt>
      96:	00 00       	nop
      98:	30 c1       	rjmp	.+608    	; 0x2fa <__bad_interrupt>
      9a:	00 00       	nop
      9c:	2e c1       	rjmp	.+604    	; 0x2fa <__bad_interrupt>
      9e:	00 00       	nop
      a0:	2c c1       	rjmp	.+600    	; 0x2fa <__bad_interrupt>
      a2:	00 00       	nop
      a4:	2a c1       	rjmp	.+596    	; 0x2fa <__bad_interrupt>
      a6:	00 00       	nop
      a8:	28 c1       	rjmp	.+592    	; 0x2fa <__bad_interrupt>
      aa:	00 00       	nop
      ac:	26 c1       	rjmp	.+588    	; 0x2fa <__bad_interrupt>
      ae:	00 00       	nop
      b0:	24 c1       	rjmp	.+584    	; 0x2fa <__bad_interrupt>
	...

000000b4 <__trampolines_end>:
      b4:	00 00       	nop
      b6:	00 00       	nop
      b8:	00 81       	ld	r16, Z
      ba:	81 18       	sub	r8, r1
      bc:	81 81       	ldd	r24, Z+1	; 0x01
      be:	00 07       	cpc	r16, r16
      c0:	00 07       	cpc	r16, r16
      c2:	00 14       	cp	r0, r0
      c4:	7f 14       	cp	r7, r15
      c6:	7f 14       	cp	r7, r15
      c8:	24 2a       	or	r2, r20
      ca:	7f 2a       	or	r7, r31
      cc:	12 23       	and	r17, r18
      ce:	13 08       	sbc	r1, r3
      d0:	64 62       	ori	r22, 0x24	; 36
      d2:	36 49       	sbci	r19, 0x96	; 150
      d4:	55 22       	and	r5, r21
      d6:	50 00       	.word	0x0050	; ????
      d8:	05 03       	mulsu	r16, r21
      da:	00 00       	nop
      dc:	00 1c       	adc	r0, r0
      de:	22 41       	sbci	r18, 0x12	; 18
      e0:	00 00       	nop
      e2:	41 22       	and	r4, r17
      e4:	1c 00       	.word	0x001c	; ????
      e6:	14 08       	sbc	r1, r4
      e8:	3e 08       	sbc	r3, r14
      ea:	14 08       	sbc	r1, r4
      ec:	08 3e       	cpi	r16, 0xE8	; 232
      ee:	08 08       	sbc	r0, r8
      f0:	00 50       	subi	r16, 0x00	; 0
      f2:	30 00       	.word	0x0030	; ????
      f4:	00 08       	sbc	r0, r0
      f6:	08 08       	sbc	r0, r8
      f8:	08 08       	sbc	r0, r8
      fa:	00 60       	ori	r16, 0x00	; 0
      fc:	60 00       	.word	0x0060	; ????
      fe:	00 20       	and	r0, r0
     100:	10 08       	sbc	r1, r0
     102:	04 02       	muls	r16, r20
     104:	3e 51       	subi	r19, 0x1E	; 30
     106:	49 45       	sbci	r20, 0x59	; 89
     108:	3e 00       	.word	0x003e	; ????
     10a:	42 7f       	andi	r20, 0xF2	; 242
     10c:	40 00       	.word	0x0040	; ????
     10e:	42 61       	ori	r20, 0x12	; 18
     110:	51 49       	sbci	r21, 0x91	; 145
     112:	46 21       	and	r20, r6
     114:	41 45       	sbci	r20, 0x51	; 81
     116:	4b 31       	cpi	r20, 0x1B	; 27
     118:	18 14       	cp	r1, r8
     11a:	12 7f       	andi	r17, 0xF2	; 242
     11c:	10 27       	eor	r17, r16
     11e:	45 45       	sbci	r20, 0x55	; 85
     120:	45 39       	cpi	r20, 0x95	; 149
     122:	3c 4a       	sbci	r19, 0xAC	; 172
     124:	49 49       	sbci	r20, 0x99	; 153
     126:	30 01       	movw	r6, r0
     128:	71 09       	sbc	r23, r1
     12a:	05 03       	mulsu	r16, r21
     12c:	36 49       	sbci	r19, 0x96	; 150
     12e:	49 49       	sbci	r20, 0x99	; 153
     130:	36 06       	cpc	r3, r22
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	29 1e       	adc	r2, r25
     136:	00 36       	cpi	r16, 0x60	; 96
     138:	36 00       	.word	0x0036	; ????
     13a:	00 00       	nop
     13c:	56 36       	cpi	r21, 0x66	; 102
     13e:	00 00       	nop
     140:	08 14       	cp	r0, r8
     142:	22 41       	sbci	r18, 0x12	; 18
     144:	00 14       	cp	r0, r0
     146:	14 14       	cp	r1, r4
     148:	14 14       	cp	r1, r4
     14a:	00 41       	sbci	r16, 0x10	; 16
     14c:	22 14       	cp	r2, r2
     14e:	08 02       	muls	r16, r24
     150:	01 51       	subi	r16, 0x11	; 17
     152:	09 06       	cpc	r0, r25
     154:	32 49       	sbci	r19, 0x92	; 146
     156:	79 41       	sbci	r23, 0x19	; 25
     158:	3e 7e       	andi	r19, 0xEE	; 238
     15a:	11 11       	cpse	r17, r1
     15c:	11 7e       	andi	r17, 0xE1	; 225
     15e:	7f 49       	sbci	r23, 0x9F	; 159
     160:	49 49       	sbci	r20, 0x99	; 153
     162:	36 3e       	cpi	r19, 0xE6	; 230
     164:	41 41       	sbci	r20, 0x11	; 17
     166:	41 22       	and	r4, r17
     168:	7f 41       	sbci	r23, 0x1F	; 31
     16a:	41 22       	and	r4, r17
     16c:	1c 7f       	andi	r17, 0xFC	; 252
     16e:	49 49       	sbci	r20, 0x99	; 153
     170:	49 41       	sbci	r20, 0x19	; 25
     172:	7f 09       	sbc	r23, r15
     174:	09 09       	sbc	r16, r9
     176:	01 3e       	cpi	r16, 0xE1	; 225
     178:	41 49       	sbci	r20, 0x91	; 145
     17a:	49 7a       	andi	r20, 0xA9	; 169
     17c:	7f 08       	sbc	r7, r15
     17e:	08 08       	sbc	r0, r8
     180:	7f 00       	.word	0x007f	; ????
     182:	41 7f       	andi	r20, 0xF1	; 241
     184:	41 00       	.word	0x0041	; ????
     186:	20 40       	sbci	r18, 0x00	; 0
     188:	41 3f       	cpi	r20, 0xF1	; 241
     18a:	01 7f       	andi	r16, 0xF1	; 241
     18c:	08 14       	cp	r0, r8
     18e:	22 41       	sbci	r18, 0x12	; 18
     190:	7f 40       	sbci	r23, 0x0F	; 15
     192:	40 40       	sbci	r20, 0x00	; 0
     194:	40 7f       	andi	r20, 0xF0	; 240
     196:	02 0c       	add	r0, r2
     198:	02 7f       	andi	r16, 0xF2	; 242
     19a:	7f 04       	cpc	r7, r15
     19c:	08 10       	cpse	r0, r8
     19e:	7f 3e       	cpi	r23, 0xEF	; 239
     1a0:	41 41       	sbci	r20, 0x11	; 17
     1a2:	41 3e       	cpi	r20, 0xE1	; 225
     1a4:	7f 09       	sbc	r23, r15
     1a6:	09 09       	sbc	r16, r9
     1a8:	06 3e       	cpi	r16, 0xE6	; 230
     1aa:	41 51       	subi	r20, 0x11	; 17
     1ac:	21 5e       	subi	r18, 0xE1	; 225
     1ae:	7f 09       	sbc	r23, r15
     1b0:	19 29       	or	r17, r9
     1b2:	46 46       	sbci	r20, 0x66	; 102
     1b4:	49 49       	sbci	r20, 0x99	; 153
     1b6:	49 31       	cpi	r20, 0x19	; 25
     1b8:	01 01       	movw	r0, r2
     1ba:	7f 01       	movw	r14, r30
     1bc:	01 3f       	cpi	r16, 0xF1	; 241
     1be:	40 40       	sbci	r20, 0x00	; 0
     1c0:	40 3f       	cpi	r20, 0xF0	; 240
     1c2:	1f 20       	and	r1, r15
     1c4:	40 20       	and	r4, r0
     1c6:	1f 3f       	cpi	r17, 0xFF	; 255
     1c8:	40 38       	cpi	r20, 0x80	; 128
     1ca:	40 3f       	cpi	r20, 0xF0	; 240
     1cc:	63 14       	cp	r6, r3
     1ce:	08 14       	cp	r0, r8
     1d0:	63 07       	cpc	r22, r19
     1d2:	08 70       	andi	r16, 0x08	; 8
     1d4:	08 07       	cpc	r16, r24
     1d6:	61 51       	subi	r22, 0x11	; 17
     1d8:	49 45       	sbci	r20, 0x59	; 89
     1da:	43 00       	.word	0x0043	; ????
     1dc:	7f 41       	sbci	r23, 0x1F	; 31
     1de:	41 00       	.word	0x0041	; ????
     1e0:	02 04       	cpc	r0, r2
     1e2:	08 10       	cpse	r0, r8
     1e4:	20 00       	.word	0x0020	; ????
     1e6:	41 41       	sbci	r20, 0x11	; 17
     1e8:	7f 00       	.word	0x007f	; ????
     1ea:	04 02       	muls	r16, r20
     1ec:	01 02       	muls	r16, r17
     1ee:	04 40       	sbci	r16, 0x04	; 4
     1f0:	40 40       	sbci	r20, 0x00	; 0
     1f2:	40 40       	sbci	r20, 0x00	; 0
     1f4:	00 01       	movw	r0, r0
     1f6:	02 04       	cpc	r0, r2
     1f8:	00 20       	and	r0, r0
     1fa:	54 54       	subi	r21, 0x44	; 68
     1fc:	54 78       	andi	r21, 0x84	; 132
     1fe:	7f 48       	sbci	r23, 0x8F	; 143
     200:	44 44       	sbci	r20, 0x44	; 68
     202:	38 38       	cpi	r19, 0x88	; 136
     204:	44 44       	sbci	r20, 0x44	; 68
     206:	44 20       	and	r4, r4
     208:	38 44       	sbci	r19, 0x48	; 72
     20a:	44 48       	sbci	r20, 0x84	; 132
     20c:	7f 38       	cpi	r23, 0x8F	; 143
     20e:	54 54       	subi	r21, 0x44	; 68
     210:	54 18       	sub	r5, r4
     212:	08 7e       	andi	r16, 0xE8	; 232
     214:	09 01       	movw	r0, r18
     216:	02 0c       	add	r0, r2
     218:	52 52       	subi	r21, 0x22	; 34
     21a:	52 3e       	cpi	r21, 0xE2	; 226
     21c:	7f 08       	sbc	r7, r15
     21e:	04 04       	cpc	r0, r4
     220:	78 00       	.word	0x0078	; ????
     222:	44 7d       	andi	r20, 0xD4	; 212
     224:	40 00       	.word	0x0040	; ????
     226:	20 40       	sbci	r18, 0x00	; 0
     228:	44 3d       	cpi	r20, 0xD4	; 212
     22a:	00 7f       	andi	r16, 0xF0	; 240
     22c:	10 28       	or	r1, r0
     22e:	44 00       	.word	0x0044	; ????
     230:	00 41       	sbci	r16, 0x10	; 16
     232:	7f 40       	sbci	r23, 0x0F	; 15
     234:	00 7c       	andi	r16, 0xC0	; 192
     236:	04 18       	sub	r0, r4
     238:	04 78       	andi	r16, 0x84	; 132
     23a:	7c 08       	sbc	r7, r12
     23c:	04 04       	cpc	r0, r4
     23e:	78 38       	cpi	r23, 0x88	; 136
     240:	44 44       	sbci	r20, 0x44	; 68
     242:	44 38       	cpi	r20, 0x84	; 132
     244:	7c 14       	cp	r7, r12
     246:	14 14       	cp	r1, r4
     248:	08 08       	sbc	r0, r8
     24a:	14 14       	cp	r1, r4
     24c:	14 7c       	andi	r17, 0xC4	; 196
     24e:	7c 08       	sbc	r7, r12
     250:	04 04       	cpc	r0, r4
     252:	08 48       	sbci	r16, 0x88	; 136
     254:	54 54       	subi	r21, 0x44	; 68
     256:	54 20       	and	r5, r4
     258:	04 3f       	cpi	r16, 0xF4	; 244
     25a:	44 40       	sbci	r20, 0x04	; 4
     25c:	20 3c       	cpi	r18, 0xC0	; 192
     25e:	40 40       	sbci	r20, 0x00	; 0
     260:	20 7c       	andi	r18, 0xC0	; 192
     262:	1c 20       	and	r1, r12
     264:	40 20       	and	r4, r0
     266:	1c 3c       	cpi	r17, 0xCC	; 204
     268:	40 30       	cpi	r20, 0x00	; 0
     26a:	40 3c       	cpi	r20, 0xC0	; 192
     26c:	44 28       	or	r4, r4
     26e:	10 28       	or	r1, r0
     270:	44 0c       	add	r4, r4
     272:	50 50       	subi	r21, 0x00	; 0
     274:	50 3c       	cpi	r21, 0xC0	; 192
     276:	44 64       	ori	r20, 0x44	; 68
     278:	54 4c       	sbci	r21, 0xC4	; 196
     27a:	44 00       	.word	0x0044	; ????
     27c:	08 36       	cpi	r16, 0x68	; 104
     27e:	41 00       	.word	0x0041	; ????
     280:	00 00       	nop
     282:	7f 00       	.word	0x007f	; ????
     284:	00 00       	nop
     286:	41 36       	cpi	r20, 0x61	; 97
     288:	08 00       	.word	0x0008	; ????
     28a:	10 08       	sbc	r1, r0
     28c:	08 10       	cpse	r0, r8
     28e:	08 00       	.word	0x0008	; ????
     290:	00 00       	nop
	...

00000294 <INIT_SSD1306>:
     294:	11 ae 00 a8 01 3f 20 01 00 40 00 d3 01 00 a1 00     .....? ..@......
     2a4:	c8 00 da 01 12 81 01 7f a4 00 a6 00 d5 01 80 d9     ................
     2b4:	01 c2 db 01 20 8d 01 14 2e 00 af 00                 .... .......

000002c0 <__ctors_end>:
     2c0:	11 24       	eor	r1, r1
     2c2:	1f be       	out	0x3f, r1	; 63
     2c4:	cf ef       	ldi	r28, 0xFF	; 255
     2c6:	d8 e0       	ldi	r29, 0x08	; 8
     2c8:	de bf       	out	0x3e, r29	; 62
     2ca:	cd bf       	out	0x3d, r28	; 61

000002cc <__do_copy_data>:
     2cc:	14 e0       	ldi	r17, 0x04	; 4
     2ce:	a0 e0       	ldi	r26, 0x00	; 0
     2d0:	b1 e0       	ldi	r27, 0x01	; 1
     2d2:	e2 ea       	ldi	r30, 0xA2	; 162
     2d4:	fb e1       	ldi	r31, 0x1B	; 27
     2d6:	02 c0       	rjmp	.+4      	; 0x2dc <__do_copy_data+0x10>
     2d8:	05 90       	lpm	r0, Z+
     2da:	0d 92       	st	X+, r0
     2dc:	a2 36       	cpi	r26, 0x62	; 98
     2de:	b1 07       	cpc	r27, r17
     2e0:	d9 f7       	brne	.-10     	; 0x2d8 <__do_copy_data+0xc>

000002e2 <__do_clear_bss>:
     2e2:	24 e0       	ldi	r18, 0x04	; 4
     2e4:	a2 e6       	ldi	r26, 0x62	; 98
     2e6:	b4 e0       	ldi	r27, 0x04	; 4
     2e8:	01 c0       	rjmp	.+2      	; 0x2ec <.do_clear_bss_start>

000002ea <.do_clear_bss_loop>:
     2ea:	1d 92       	st	X+, r1

000002ec <.do_clear_bss_start>:
     2ec:	a4 3b       	cpi	r26, 0xB4	; 180
     2ee:	b2 07       	cpc	r27, r18
     2f0:	e1 f7       	brne	.-8      	; 0x2ea <.do_clear_bss_loop>
     2f2:	0e 94 a9 09 	call	0x1352	; 0x1352 <main>
     2f6:	0c 94 cf 0d 	jmp	0x1b9e	; 0x1b9e <_exit>

000002fa <__bad_interrupt>:
     2fa:	82 ce       	rjmp	.-764    	; 0x0 <__vectors>

000002fc <SSD1306_Send_StartAndSLAW>:
		printf("Error sending command 0x%02X, retrying... Attempt %d\n", command, retries);
		// Optionally, add a small delay between retries (e.g., 10ms)
		_delay_ms(10); // Replace with your platform's delay function
	}
	return SSD1306_ERROR;  // Return error if retries exhausted
}
     2fc:	cf 93       	push	r28
     2fe:	df 93       	push	r29
     300:	00 d0       	rcall	.+0      	; 0x302 <SSD1306_Send_StartAndSLAW+0x6>
     302:	cd b7       	in	r28, 0x3d	; 61
     304:	de b7       	in	r29, 0x3e	; 62
     306:	8a 83       	std	Y+2, r24	; 0x02
     308:	8f ef       	ldi	r24, 0xFF	; 255
     30a:	89 83       	std	Y+1, r24	; 0x01
     30c:	5c d4       	rcall	.+2232   	; 0xbc6 <TWI_MT_Start>
     30e:	89 83       	std	Y+1, r24	; 0x01
     310:	89 81       	ldd	r24, Y+1	; 0x01
     312:	88 23       	and	r24, r24
     314:	11 f0       	breq	.+4      	; 0x31a <SSD1306_Send_StartAndSLAW+0x1e>
     316:	89 81       	ldd	r24, Y+1	; 0x01
     318:	09 c0       	rjmp	.+18     	; 0x32c <SSD1306_Send_StartAndSLAW+0x30>
     31a:	8a 81       	ldd	r24, Y+2	; 0x02
     31c:	8b d4       	rcall	.+2326   	; 0xc34 <TWI_MT_Send_SLAW>
     31e:	89 83       	std	Y+1, r24	; 0x01
     320:	89 81       	ldd	r24, Y+1	; 0x01
     322:	88 23       	and	r24, r24
     324:	11 f0       	breq	.+4      	; 0x32a <SSD1306_Send_StartAndSLAW+0x2e>
     326:	89 81       	ldd	r24, Y+1	; 0x01
     328:	01 c0       	rjmp	.+2      	; 0x32c <SSD1306_Send_StartAndSLAW+0x30>
     32a:	80 e0       	ldi	r24, 0x00	; 0
     32c:	0f 90       	pop	r0
     32e:	0f 90       	pop	r0
     330:	df 91       	pop	r29
     332:	cf 91       	pop	r28
     334:	08 95       	ret

00000336 <SSD1306_Send_Command>:
     336:	cf 93       	push	r28
     338:	df 93       	push	r29
     33a:	00 d0       	rcall	.+0      	; 0x33c <SSD1306_Send_Command+0x6>
     33c:	cd b7       	in	r28, 0x3d	; 61
     33e:	de b7       	in	r29, 0x3e	; 62
     340:	8a 83       	std	Y+2, r24	; 0x02
     342:	8f ef       	ldi	r24, 0xFF	; 255
     344:	89 83       	std	Y+1, r24	; 0x01
     346:	80 e8       	ldi	r24, 0x80	; 128
     348:	a2 d4       	rcall	.+2372   	; 0xc8e <TWI_MT_Send_Data>
     34a:	89 83       	std	Y+1, r24	; 0x01
     34c:	89 81       	ldd	r24, Y+1	; 0x01
     34e:	88 23       	and	r24, r24
     350:	11 f0       	breq	.+4      	; 0x356 <SSD1306_Send_Command+0x20>
     352:	89 81       	ldd	r24, Y+1	; 0x01
     354:	09 c0       	rjmp	.+18     	; 0x368 <SSD1306_Send_Command+0x32>
     356:	8a 81       	ldd	r24, Y+2	; 0x02
     358:	9a d4       	rcall	.+2356   	; 0xc8e <TWI_MT_Send_Data>
     35a:	89 83       	std	Y+1, r24	; 0x01
     35c:	89 81       	ldd	r24, Y+1	; 0x01
     35e:	88 23       	and	r24, r24
     360:	11 f0       	breq	.+4      	; 0x366 <SSD1306_Send_Command+0x30>
     362:	89 81       	ldd	r24, Y+1	; 0x01
     364:	01 c0       	rjmp	.+2      	; 0x368 <SSD1306_Send_Command+0x32>
     366:	80 e0       	ldi	r24, 0x00	; 0
     368:	0f 90       	pop	r0
     36a:	0f 90       	pop	r0
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	08 95       	ret

00000372 <SSD1306_Init>:
     372:	cf 93       	push	r28
     374:	df 93       	push	r29
     376:	cd b7       	in	r28, 0x3d	; 61
     378:	de b7       	in	r29, 0x3e	; 62
     37a:	a0 97       	sbiw	r28, 0x20	; 32
     37c:	0f b6       	in	r0, 0x3f	; 63
     37e:	f8 94       	cli
     380:	de bf       	out	0x3e, r29	; 62
     382:	0f be       	out	0x3f, r0	; 63
     384:	cd bf       	out	0x3d, r28	; 61
     386:	88 a3       	std	Y+32, r24	; 0x20
     388:	84 e9       	ldi	r24, 0x94	; 148
     38a:	92 e0       	ldi	r25, 0x02	; 2
     38c:	9a 83       	std	Y+2, r25	; 0x02
     38e:	89 83       	std	Y+1, r24	; 0x01
     390:	8f ef       	ldi	r24, 0xFF	; 255
     392:	8d 83       	std	Y+5, r24	; 0x05
     394:	89 81       	ldd	r24, Y+1	; 0x01
     396:	9a 81       	ldd	r25, Y+2	; 0x02
     398:	9c 01       	movw	r18, r24
     39a:	2f 5f       	subi	r18, 0xFF	; 255
     39c:	3f 4f       	sbci	r19, 0xFF	; 255
     39e:	3a 83       	std	Y+2, r19	; 0x02
     3a0:	29 83       	std	Y+1, r18	; 0x01
     3a2:	9f 83       	std	Y+7, r25	; 0x07
     3a4:	8e 83       	std	Y+6, r24	; 0x06
     3a6:	8e 81       	ldd	r24, Y+6	; 0x06
     3a8:	9f 81       	ldd	r25, Y+7	; 0x07
     3aa:	fc 01       	movw	r30, r24
     3ac:	84 91       	lpm	r24, Z
     3ae:	88 87       	std	Y+8, r24	; 0x08
     3b0:	88 85       	ldd	r24, Y+8	; 0x08
     3b2:	8c 83       	std	Y+4, r24	; 0x04
     3b4:	e6 d3       	rcall	.+1996   	; 0xb82 <TWI_Init>
     3b6:	88 a1       	ldd	r24, Y+32	; 0x20
     3b8:	a1 df       	rcall	.-190    	; 0x2fc <SSD1306_Send_StartAndSLAW>
     3ba:	8d 83       	std	Y+5, r24	; 0x05
     3bc:	8d 81       	ldd	r24, Y+5	; 0x05
     3be:	88 23       	and	r24, r24
     3c0:	11 f0       	breq	.+4      	; 0x3c6 <SSD1306_Init+0x54>
     3c2:	8d 81       	ldd	r24, Y+5	; 0x05
     3c4:	c4 c0       	rjmp	.+392    	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
     3c6:	84 ee       	ldi	r24, 0xE4	; 228
     3c8:	b6 df       	rcall	.-148    	; 0x336 <SSD1306_Send_Command>
     3ca:	8d 83       	std	Y+5, r24	; 0x05
     3cc:	8d 81       	ldd	r24, Y+5	; 0x05
     3ce:	88 23       	and	r24, r24
     3d0:	11 f0       	breq	.+4      	; 0x3d6 <SSD1306_Init+0x64>
     3d2:	8d 81       	ldd	r24, Y+5	; 0x05
     3d4:	bc c0       	rjmp	.+376    	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
     3d6:	80 e0       	ldi	r24, 0x00	; 0
     3d8:	90 e0       	ldi	r25, 0x00	; 0
     3da:	a0 e8       	ldi	r26, 0x80	; 128
     3dc:	bf e3       	ldi	r27, 0x3F	; 63
     3de:	8a 8b       	std	Y+18, r24	; 0x12
     3e0:	9b 8b       	std	Y+19, r25	; 0x13
     3e2:	ac 8b       	std	Y+20, r26	; 0x14
     3e4:	bd 8b       	std	Y+21, r27	; 0x15
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	4a e7       	ldi	r20, 0x7A	; 122
     3ec:	53 e4       	ldi	r21, 0x43	; 67
     3ee:	6a 89       	ldd	r22, Y+18	; 0x12
     3f0:	7b 89       	ldd	r23, Y+19	; 0x13
     3f2:	8c 89       	ldd	r24, Y+20	; 0x14
     3f4:	9d 89       	ldd	r25, Y+21	; 0x15
     3f6:	0e 94 48 0a 	call	0x1490	; 0x1490 <__mulsf3>
     3fa:	dc 01       	movw	r26, r24
     3fc:	cb 01       	movw	r24, r22
     3fe:	8e 8b       	std	Y+22, r24	; 0x16
     400:	9f 8b       	std	Y+23, r25	; 0x17
     402:	a8 8f       	std	Y+24, r26	; 0x18
     404:	b9 8f       	std	Y+25, r27	; 0x19
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	30 e0       	ldi	r19, 0x00	; 0
     40a:	40 e8       	ldi	r20, 0x80	; 128
     40c:	5f e3       	ldi	r21, 0x3F	; 63
     40e:	6e 89       	ldd	r22, Y+22	; 0x16
     410:	7f 89       	ldd	r23, Y+23	; 0x17
     412:	88 8d       	ldd	r24, Y+24	; 0x18
     414:	99 8d       	ldd	r25, Y+25	; 0x19
     416:	bb d7       	rcall	.+3958   	; 0x138e <__cmpsf2>
     418:	88 23       	and	r24, r24
     41a:	2c f4       	brge	.+10     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
     41c:	81 e0       	ldi	r24, 0x01	; 1
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	9b 8f       	std	Y+27, r25	; 0x1b
     422:	8a 8f       	std	Y+26, r24	; 0x1a
     424:	3d c0       	rjmp	.+122    	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
     426:	20 e0       	ldi	r18, 0x00	; 0
     428:	3f ef       	ldi	r19, 0xFF	; 255
     42a:	4f e7       	ldi	r20, 0x7F	; 127
     42c:	57 e4       	ldi	r21, 0x47	; 71
     42e:	6e 89       	ldd	r22, Y+22	; 0x16
     430:	7f 89       	ldd	r23, Y+23	; 0x17
     432:	88 8d       	ldd	r24, Y+24	; 0x18
     434:	99 8d       	ldd	r25, Y+25	; 0x19
     436:	0e 94 44 0a 	call	0x1488	; 0x1488 <__gesf2>
     43a:	18 16       	cp	r1, r24
     43c:	44 f5       	brge	.+80     	; 0x48e <__EEPROM_REGION_LENGTH__+0x8e>
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	40 e2       	ldi	r20, 0x20	; 32
     444:	51 e4       	ldi	r21, 0x41	; 65
     446:	6a 89       	ldd	r22, Y+18	; 0x12
     448:	7b 89       	ldd	r23, Y+19	; 0x13
     44a:	8c 89       	ldd	r24, Y+20	; 0x14
     44c:	9d 89       	ldd	r25, Y+21	; 0x15
     44e:	0e 94 48 0a 	call	0x1490	; 0x1490 <__mulsf3>
     452:	dc 01       	movw	r26, r24
     454:	cb 01       	movw	r24, r22
     456:	bc 01       	movw	r22, r24
     458:	cd 01       	movw	r24, r26
     45a:	9d d7       	rcall	.+3898   	; 0x1396 <__fixunssfsi>
     45c:	dc 01       	movw	r26, r24
     45e:	cb 01       	movw	r24, r22
     460:	9b 8f       	std	Y+27, r25	; 0x1b
     462:	8a 8f       	std	Y+26, r24	; 0x1a
     464:	0f c0       	rjmp	.+30     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
     466:	89 e1       	ldi	r24, 0x19	; 25
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	9d 8f       	std	Y+29, r25	; 0x1d
     46c:	8c 8f       	std	Y+28, r24	; 0x1c
     46e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     470:	9d 8d       	ldd	r25, Y+29	; 0x1d
     472:	01 97       	sbiw	r24, 0x01	; 1
     474:	f1 f7       	brne	.-4      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
     476:	9d 8f       	std	Y+29, r25	; 0x1d
     478:	8c 8f       	std	Y+28, r24	; 0x1c
     47a:	8a 8d       	ldd	r24, Y+26	; 0x1a
     47c:	9b 8d       	ldd	r25, Y+27	; 0x1b
     47e:	01 97       	sbiw	r24, 0x01	; 1
     480:	9b 8f       	std	Y+27, r25	; 0x1b
     482:	8a 8f       	std	Y+26, r24	; 0x1a
     484:	8a 8d       	ldd	r24, Y+26	; 0x1a
     486:	9b 8d       	ldd	r25, Y+27	; 0x1b
     488:	89 2b       	or	r24, r25
     48a:	69 f7       	brne	.-38     	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
     48c:	13 c0       	rjmp	.+38     	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
     48e:	6e 89       	ldd	r22, Y+22	; 0x16
     490:	7f 89       	ldd	r23, Y+23	; 0x17
     492:	88 8d       	ldd	r24, Y+24	; 0x18
     494:	99 8d       	ldd	r25, Y+25	; 0x19
     496:	7f d7       	rcall	.+3838   	; 0x1396 <__fixunssfsi>
     498:	dc 01       	movw	r26, r24
     49a:	cb 01       	movw	r24, r22
     49c:	9b 8f       	std	Y+27, r25	; 0x1b
     49e:	8a 8f       	std	Y+26, r24	; 0x1a
     4a0:	8a 8d       	ldd	r24, Y+26	; 0x1a
     4a2:	9b 8d       	ldd	r25, Y+27	; 0x1b
     4a4:	9f 8f       	std	Y+31, r25	; 0x1f
     4a6:	8e 8f       	std	Y+30, r24	; 0x1e
     4a8:	8e 8d       	ldd	r24, Y+30	; 0x1e
     4aa:	9f 8d       	ldd	r25, Y+31	; 0x1f
     4ac:	01 97       	sbiw	r24, 0x01	; 1
     4ae:	f1 f7       	brne	.-4      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4b0:	9f 8f       	std	Y+31, r25	; 0x1f
     4b2:	8e 8f       	std	Y+30, r24	; 0x1e
     4b4:	43 c0       	rjmp	.+134    	; 0x53c <__EEPROM_REGION_LENGTH__+0x13c>
     4b6:	89 81       	ldd	r24, Y+1	; 0x01
     4b8:	9a 81       	ldd	r25, Y+2	; 0x02
     4ba:	9c 01       	movw	r18, r24
     4bc:	2f 5f       	subi	r18, 0xFF	; 255
     4be:	3f 4f       	sbci	r19, 0xFF	; 255
     4c0:	3a 83       	std	Y+2, r19	; 0x02
     4c2:	29 83       	std	Y+1, r18	; 0x01
     4c4:	9a 87       	std	Y+10, r25	; 0x0a
     4c6:	89 87       	std	Y+9, r24	; 0x09
     4c8:	89 85       	ldd	r24, Y+9	; 0x09
     4ca:	9a 85       	ldd	r25, Y+10	; 0x0a
     4cc:	fc 01       	movw	r30, r24
     4ce:	84 91       	lpm	r24, Z
     4d0:	8b 87       	std	Y+11, r24	; 0x0b
     4d2:	8b 85       	ldd	r24, Y+11	; 0x0b
     4d4:	30 df       	rcall	.-416    	; 0x336 <SSD1306_Send_Command>
     4d6:	8d 83       	std	Y+5, r24	; 0x05
     4d8:	8d 81       	ldd	r24, Y+5	; 0x05
     4da:	88 23       	and	r24, r24
     4dc:	11 f0       	breq	.+4      	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
     4de:	8d 81       	ldd	r24, Y+5	; 0x05
     4e0:	36 c0       	rjmp	.+108    	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
     4e2:	89 81       	ldd	r24, Y+1	; 0x01
     4e4:	9a 81       	ldd	r25, Y+2	; 0x02
     4e6:	9c 01       	movw	r18, r24
     4e8:	2f 5f       	subi	r18, 0xFF	; 255
     4ea:	3f 4f       	sbci	r19, 0xFF	; 255
     4ec:	3a 83       	std	Y+2, r19	; 0x02
     4ee:	29 83       	std	Y+1, r18	; 0x01
     4f0:	9d 87       	std	Y+13, r25	; 0x0d
     4f2:	8c 87       	std	Y+12, r24	; 0x0c
     4f4:	8c 85       	ldd	r24, Y+12	; 0x0c
     4f6:	9d 85       	ldd	r25, Y+13	; 0x0d
     4f8:	fc 01       	movw	r30, r24
     4fa:	84 91       	lpm	r24, Z
     4fc:	8e 87       	std	Y+14, r24	; 0x0e
     4fe:	8e 85       	ldd	r24, Y+14	; 0x0e
     500:	8b 83       	std	Y+3, r24	; 0x03
     502:	16 c0       	rjmp	.+44     	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
     504:	89 81       	ldd	r24, Y+1	; 0x01
     506:	9a 81       	ldd	r25, Y+2	; 0x02
     508:	9c 01       	movw	r18, r24
     50a:	2f 5f       	subi	r18, 0xFF	; 255
     50c:	3f 4f       	sbci	r19, 0xFF	; 255
     50e:	3a 83       	std	Y+2, r19	; 0x02
     510:	29 83       	std	Y+1, r18	; 0x01
     512:	98 8b       	std	Y+16, r25	; 0x10
     514:	8f 87       	std	Y+15, r24	; 0x0f
     516:	8f 85       	ldd	r24, Y+15	; 0x0f
     518:	98 89       	ldd	r25, Y+16	; 0x10
     51a:	fc 01       	movw	r30, r24
     51c:	84 91       	lpm	r24, Z
     51e:	89 8b       	std	Y+17, r24	; 0x11
     520:	89 89       	ldd	r24, Y+17	; 0x11
     522:	09 df       	rcall	.-494    	; 0x336 <SSD1306_Send_Command>
     524:	8d 83       	std	Y+5, r24	; 0x05
     526:	8d 81       	ldd	r24, Y+5	; 0x05
     528:	88 23       	and	r24, r24
     52a:	11 f0       	breq	.+4      	; 0x530 <__EEPROM_REGION_LENGTH__+0x130>
     52c:	8d 81       	ldd	r24, Y+5	; 0x05
     52e:	0f c0       	rjmp	.+30     	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
     530:	8b 81       	ldd	r24, Y+3	; 0x03
     532:	9f ef       	ldi	r25, 0xFF	; 255
     534:	98 0f       	add	r25, r24
     536:	9b 83       	std	Y+3, r25	; 0x03
     538:	88 23       	and	r24, r24
     53a:	21 f7       	brne	.-56     	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
     53c:	8c 81       	ldd	r24, Y+4	; 0x04
     53e:	9f ef       	ldi	r25, 0xFF	; 255
     540:	98 0f       	add	r25, r24
     542:	9c 83       	std	Y+4, r25	; 0x04
     544:	88 23       	and	r24, r24
     546:	09 f0       	breq	.+2      	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
     548:	b6 cf       	rjmp	.-148    	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
     54a:	cd d3       	rcall	.+1946   	; 0xce6 <TWI_Stop>
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	a0 96       	adiw	r28, 0x20	; 32
     550:	0f b6       	in	r0, 0x3f	; 63
     552:	f8 94       	cli
     554:	de bf       	out	0x3e, r29	; 62
     556:	0f be       	out	0x3f, r0	; 63
     558:	cd bf       	out	0x3d, r28	; 61
     55a:	df 91       	pop	r29
     55c:	cf 91       	pop	r28
     55e:	08 95       	ret

00000560 <SSD1306_ClearScreen>:
     560:	cf 93       	push	r28
     562:	df 93       	push	r29
     564:	00 d0       	rcall	.+0      	; 0x566 <SSD1306_ClearScreen+0x6>
     566:	1f 92       	push	r1
     568:	cd b7       	in	r28, 0x3d	; 61
     56a:	de b7       	in	r29, 0x3e	; 62
     56c:	8f ef       	ldi	r24, 0xFF	; 255
     56e:	8b 83       	std	Y+3, r24	; 0x03
     570:	8c e3       	ldi	r24, 0x3C	; 60
     572:	c4 de       	rcall	.-632    	; 0x2fc <SSD1306_Send_StartAndSLAW>
     574:	8b 83       	std	Y+3, r24	; 0x03
     576:	8b 81       	ldd	r24, Y+3	; 0x03
     578:	88 23       	and	r24, r24
     57a:	11 f0       	breq	.+4      	; 0x580 <SSD1306_ClearScreen+0x20>
     57c:	8b 81       	ldd	r24, Y+3	; 0x03
     57e:	72 c0       	rjmp	.+228    	; 0x664 <SSD1306_ClearScreen+0x104>
     580:	81 e2       	ldi	r24, 0x21	; 33
     582:	d9 de       	rcall	.-590    	; 0x336 <SSD1306_Send_Command>
     584:	8b 83       	std	Y+3, r24	; 0x03
     586:	8b 81       	ldd	r24, Y+3	; 0x03
     588:	88 23       	and	r24, r24
     58a:	11 f0       	breq	.+4      	; 0x590 <SSD1306_ClearScreen+0x30>
     58c:	8b 81       	ldd	r24, Y+3	; 0x03
     58e:	6a c0       	rjmp	.+212    	; 0x664 <SSD1306_ClearScreen+0x104>
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	d1 de       	rcall	.-606    	; 0x336 <SSD1306_Send_Command>
     594:	8b 83       	std	Y+3, r24	; 0x03
     596:	8b 81       	ldd	r24, Y+3	; 0x03
     598:	88 23       	and	r24, r24
     59a:	11 f0       	breq	.+4      	; 0x5a0 <SSD1306_ClearScreen+0x40>
     59c:	8b 81       	ldd	r24, Y+3	; 0x03
     59e:	62 c0       	rjmp	.+196    	; 0x664 <SSD1306_ClearScreen+0x104>
     5a0:	8f e7       	ldi	r24, 0x7F	; 127
     5a2:	c9 de       	rcall	.-622    	; 0x336 <SSD1306_Send_Command>
     5a4:	8b 83       	std	Y+3, r24	; 0x03
     5a6:	8b 81       	ldd	r24, Y+3	; 0x03
     5a8:	88 23       	and	r24, r24
     5aa:	11 f0       	breq	.+4      	; 0x5b0 <SSD1306_ClearScreen+0x50>
     5ac:	8b 81       	ldd	r24, Y+3	; 0x03
     5ae:	5a c0       	rjmp	.+180    	; 0x664 <SSD1306_ClearScreen+0x104>
     5b0:	10 92 63 04 	sts	0x0463, r1	; 0x800463 <__data_end+0x1>
     5b4:	10 92 62 04 	sts	0x0462, r1	; 0x800462 <__data_end>
     5b8:	82 e2       	ldi	r24, 0x22	; 34
     5ba:	bd de       	rcall	.-646    	; 0x336 <SSD1306_Send_Command>
     5bc:	8b 83       	std	Y+3, r24	; 0x03
     5be:	8b 81       	ldd	r24, Y+3	; 0x03
     5c0:	88 23       	and	r24, r24
     5c2:	11 f0       	breq	.+4      	; 0x5c8 <SSD1306_ClearScreen+0x68>
     5c4:	8b 81       	ldd	r24, Y+3	; 0x03
     5c6:	4e c0       	rjmp	.+156    	; 0x664 <SSD1306_ClearScreen+0x104>
     5c8:	80 e0       	ldi	r24, 0x00	; 0
     5ca:	b5 de       	rcall	.-662    	; 0x336 <SSD1306_Send_Command>
     5cc:	8b 83       	std	Y+3, r24	; 0x03
     5ce:	8b 81       	ldd	r24, Y+3	; 0x03
     5d0:	88 23       	and	r24, r24
     5d2:	11 f0       	breq	.+4      	; 0x5d8 <SSD1306_ClearScreen+0x78>
     5d4:	8b 81       	ldd	r24, Y+3	; 0x03
     5d6:	46 c0       	rjmp	.+140    	; 0x664 <SSD1306_ClearScreen+0x104>
     5d8:	87 e0       	ldi	r24, 0x07	; 7
     5da:	ad de       	rcall	.-678    	; 0x336 <SSD1306_Send_Command>
     5dc:	8b 83       	std	Y+3, r24	; 0x03
     5de:	8b 81       	ldd	r24, Y+3	; 0x03
     5e0:	88 23       	and	r24, r24
     5e2:	11 f0       	breq	.+4      	; 0x5e8 <SSD1306_ClearScreen+0x88>
     5e4:	8b 81       	ldd	r24, Y+3	; 0x03
     5e6:	3e c0       	rjmp	.+124    	; 0x664 <SSD1306_ClearScreen+0x104>
     5e8:	10 92 65 04 	sts	0x0465, r1	; 0x800465 <_indexPage+0x1>
     5ec:	10 92 64 04 	sts	0x0464, r1	; 0x800464 <_indexPage>
     5f0:	80 e4       	ldi	r24, 0x40	; 64
     5f2:	4d d3       	rcall	.+1690   	; 0xc8e <TWI_MT_Send_Data>
     5f4:	8b 83       	std	Y+3, r24	; 0x03
     5f6:	8b 81       	ldd	r24, Y+3	; 0x03
     5f8:	88 23       	and	r24, r24
     5fa:	11 f0       	breq	.+4      	; 0x600 <SSD1306_ClearScreen+0xa0>
     5fc:	8b 81       	ldd	r24, Y+3	; 0x03
     5fe:	32 c0       	rjmp	.+100    	; 0x664 <SSD1306_ClearScreen+0x104>
     600:	1a 82       	std	Y+2, r1	; 0x02
     602:	19 82       	std	Y+1, r1	; 0x01
     604:	25 c0       	rjmp	.+74     	; 0x650 <SSD1306_ClearScreen+0xf0>
     606:	80 e0       	ldi	r24, 0x00	; 0
     608:	42 d3       	rcall	.+1668   	; 0xc8e <TWI_MT_Send_Data>
     60a:	8b 83       	std	Y+3, r24	; 0x03
     60c:	8b 81       	ldd	r24, Y+3	; 0x03
     60e:	88 23       	and	r24, r24
     610:	d1 f0       	breq	.+52     	; 0x646 <SSD1306_ClearScreen+0xe6>
     612:	8b 81       	ldd	r24, Y+3	; 0x03
     614:	88 2f       	mov	r24, r24
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	29 2f       	mov	r18, r25
     61a:	2f 93       	push	r18
     61c:	8f 93       	push	r24
     61e:	8a 81       	ldd	r24, Y+2	; 0x02
     620:	8f 93       	push	r24
     622:	89 81       	ldd	r24, Y+1	; 0x01
     624:	8f 93       	push	r24
     626:	85 e2       	ldi	r24, 0x25	; 37
     628:	91 e0       	ldi	r25, 0x01	; 1
     62a:	89 2f       	mov	r24, r25
     62c:	8f 93       	push	r24
     62e:	85 e2       	ldi	r24, 0x25	; 37
     630:	91 e0       	ldi	r25, 0x01	; 1
     632:	8f 93       	push	r24
     634:	b8 d7       	rcall	.+3952   	; 0x15a6 <printf>
     636:	0f 90       	pop	r0
     638:	0f 90       	pop	r0
     63a:	0f 90       	pop	r0
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	0f 90       	pop	r0
     642:	8b 81       	ldd	r24, Y+3	; 0x03
     644:	0f c0       	rjmp	.+30     	; 0x664 <SSD1306_ClearScreen+0x104>
     646:	89 81       	ldd	r24, Y+1	; 0x01
     648:	9a 81       	ldd	r25, Y+2	; 0x02
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	9a 83       	std	Y+2, r25	; 0x02
     64e:	89 83       	std	Y+1, r24	; 0x01
     650:	89 81       	ldd	r24, Y+1	; 0x01
     652:	9a 81       	ldd	r25, Y+2	; 0x02
     654:	81 15       	cp	r24, r1
     656:	94 40       	sbci	r25, 0x04	; 4
     658:	b0 f2       	brcs	.-84     	; 0x606 <SSD1306_ClearScreen+0xa6>
     65a:	81 e5       	ldi	r24, 0x51	; 81
     65c:	91 e0       	ldi	r25, 0x01	; 1
     65e:	b6 d7       	rcall	.+3948   	; 0x15cc <puts>
     660:	42 d3       	rcall	.+1668   	; 0xce6 <TWI_Stop>
     662:	80 e0       	ldi	r24, 0x00	; 0
     664:	0f 90       	pop	r0
     666:	0f 90       	pop	r0
     668:	0f 90       	pop	r0
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	08 95       	ret

00000670 <SSD1306_SetWindow>:
     670:	cf 93       	push	r28
     672:	df 93       	push	r29
     674:	00 d0       	rcall	.+0      	; 0x676 <SSD1306_SetWindow+0x6>
     676:	00 d0       	rcall	.+0      	; 0x678 <SSD1306_SetWindow+0x8>
     678:	1f 92       	push	r1
     67a:	cd b7       	in	r28, 0x3d	; 61
     67c:	de b7       	in	r29, 0x3e	; 62
     67e:	8a 83       	std	Y+2, r24	; 0x02
     680:	6b 83       	std	Y+3, r22	; 0x03
     682:	4c 83       	std	Y+4, r20	; 0x04
     684:	2d 83       	std	Y+5, r18	; 0x05
     686:	8f ef       	ldi	r24, 0xFF	; 255
     688:	89 83       	std	Y+1, r24	; 0x01
     68a:	8c e3       	ldi	r24, 0x3C	; 60
     68c:	37 de       	rcall	.-914    	; 0x2fc <SSD1306_Send_StartAndSLAW>
     68e:	89 83       	std	Y+1, r24	; 0x01
     690:	89 81       	ldd	r24, Y+1	; 0x01
     692:	88 23       	and	r24, r24
     694:	11 f0       	breq	.+4      	; 0x69a <SSD1306_SetWindow+0x2a>
     696:	89 81       	ldd	r24, Y+1	; 0x01
     698:	40 c0       	rjmp	.+128    	; 0x71a <SSD1306_SetWindow+0xaa>
     69a:	81 e2       	ldi	r24, 0x21	; 33
     69c:	4c de       	rcall	.-872    	; 0x336 <SSD1306_Send_Command>
     69e:	89 83       	std	Y+1, r24	; 0x01
     6a0:	89 81       	ldd	r24, Y+1	; 0x01
     6a2:	88 23       	and	r24, r24
     6a4:	11 f0       	breq	.+4      	; 0x6aa <SSD1306_SetWindow+0x3a>
     6a6:	89 81       	ldd	r24, Y+1	; 0x01
     6a8:	38 c0       	rjmp	.+112    	; 0x71a <SSD1306_SetWindow+0xaa>
     6aa:	8a 81       	ldd	r24, Y+2	; 0x02
     6ac:	44 de       	rcall	.-888    	; 0x336 <SSD1306_Send_Command>
     6ae:	89 83       	std	Y+1, r24	; 0x01
     6b0:	89 81       	ldd	r24, Y+1	; 0x01
     6b2:	88 23       	and	r24, r24
     6b4:	11 f0       	breq	.+4      	; 0x6ba <SSD1306_SetWindow+0x4a>
     6b6:	89 81       	ldd	r24, Y+1	; 0x01
     6b8:	30 c0       	rjmp	.+96     	; 0x71a <SSD1306_SetWindow+0xaa>
     6ba:	8b 81       	ldd	r24, Y+3	; 0x03
     6bc:	3c de       	rcall	.-904    	; 0x336 <SSD1306_Send_Command>
     6be:	89 83       	std	Y+1, r24	; 0x01
     6c0:	89 81       	ldd	r24, Y+1	; 0x01
     6c2:	88 23       	and	r24, r24
     6c4:	11 f0       	breq	.+4      	; 0x6ca <SSD1306_SetWindow+0x5a>
     6c6:	89 81       	ldd	r24, Y+1	; 0x01
     6c8:	28 c0       	rjmp	.+80     	; 0x71a <SSD1306_SetWindow+0xaa>
     6ca:	8a 81       	ldd	r24, Y+2	; 0x02
     6cc:	88 2f       	mov	r24, r24
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	90 93 63 04 	sts	0x0463, r25	; 0x800463 <__data_end+0x1>
     6d4:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <__data_end>
     6d8:	82 e2       	ldi	r24, 0x22	; 34
     6da:	2d de       	rcall	.-934    	; 0x336 <SSD1306_Send_Command>
     6dc:	89 83       	std	Y+1, r24	; 0x01
     6de:	89 81       	ldd	r24, Y+1	; 0x01
     6e0:	88 23       	and	r24, r24
     6e2:	11 f0       	breq	.+4      	; 0x6e8 <SSD1306_SetWindow+0x78>
     6e4:	89 81       	ldd	r24, Y+1	; 0x01
     6e6:	19 c0       	rjmp	.+50     	; 0x71a <SSD1306_SetWindow+0xaa>
     6e8:	8c 81       	ldd	r24, Y+4	; 0x04
     6ea:	25 de       	rcall	.-950    	; 0x336 <SSD1306_Send_Command>
     6ec:	89 83       	std	Y+1, r24	; 0x01
     6ee:	89 81       	ldd	r24, Y+1	; 0x01
     6f0:	88 23       	and	r24, r24
     6f2:	11 f0       	breq	.+4      	; 0x6f8 <SSD1306_SetWindow+0x88>
     6f4:	89 81       	ldd	r24, Y+1	; 0x01
     6f6:	11 c0       	rjmp	.+34     	; 0x71a <SSD1306_SetWindow+0xaa>
     6f8:	8d 81       	ldd	r24, Y+5	; 0x05
     6fa:	1d de       	rcall	.-966    	; 0x336 <SSD1306_Send_Command>
     6fc:	89 83       	std	Y+1, r24	; 0x01
     6fe:	89 81       	ldd	r24, Y+1	; 0x01
     700:	88 23       	and	r24, r24
     702:	11 f0       	breq	.+4      	; 0x708 <SSD1306_SetWindow+0x98>
     704:	89 81       	ldd	r24, Y+1	; 0x01
     706:	09 c0       	rjmp	.+18     	; 0x71a <SSD1306_SetWindow+0xaa>
     708:	8c 81       	ldd	r24, Y+4	; 0x04
     70a:	88 2f       	mov	r24, r24
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <_indexPage+0x1>
     712:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <_indexPage>
     716:	e7 d2       	rcall	.+1486   	; 0xce6 <TWI_Stop>
     718:	80 e0       	ldi	r24, 0x00	; 0
     71a:	0f 90       	pop	r0
     71c:	0f 90       	pop	r0
     71e:	0f 90       	pop	r0
     720:	0f 90       	pop	r0
     722:	0f 90       	pop	r0
     724:	df 91       	pop	r29
     726:	cf 91       	pop	r28
     728:	08 95       	ret

0000072a <SSD1306_SetPosition>:
     72a:	cf 93       	push	r28
     72c:	df 93       	push	r29
     72e:	00 d0       	rcall	.+0      	; 0x730 <SSD1306_SetPosition+0x6>
     730:	00 d0       	rcall	.+0      	; 0x732 <SSD1306_SetPosition+0x8>
     732:	1f 92       	push	r1
     734:	cd b7       	in	r28, 0x3d	; 61
     736:	de b7       	in	r29, 0x3e	; 62
     738:	8c 83       	std	Y+4, r24	; 0x04
     73a:	6d 83       	std	Y+5, r22	; 0x05
     73c:	8f ef       	ldi	r24, 0xFF	; 255
     73e:	89 83       	std	Y+1, r24	; 0x01
     740:	8f e7       	ldi	r24, 0x7F	; 127
     742:	8a 83       	std	Y+2, r24	; 0x02
     744:	87 e0       	ldi	r24, 0x07	; 7
     746:	8b 83       	std	Y+3, r24	; 0x03
     748:	2b 81       	ldd	r18, Y+3	; 0x03
     74a:	4d 81       	ldd	r20, Y+5	; 0x05
     74c:	6a 81       	ldd	r22, Y+2	; 0x02
     74e:	8c 81       	ldd	r24, Y+4	; 0x04
     750:	8f df       	rcall	.-226    	; 0x670 <SSD1306_SetWindow>
     752:	89 83       	std	Y+1, r24	; 0x01
     754:	89 81       	ldd	r24, Y+1	; 0x01
     756:	88 23       	and	r24, r24
     758:	11 f0       	breq	.+4      	; 0x75e <SSD1306_SetPosition+0x34>
     75a:	89 81       	ldd	r24, Y+1	; 0x01
     75c:	01 c0       	rjmp	.+2      	; 0x760 <SSD1306_SetPosition+0x36>
     75e:	80 e0       	ldi	r24, 0x00	; 0
     760:	0f 90       	pop	r0
     762:	0f 90       	pop	r0
     764:	0f 90       	pop	r0
     766:	0f 90       	pop	r0
     768:	0f 90       	pop	r0
     76a:	df 91       	pop	r29
     76c:	cf 91       	pop	r28
     76e:	08 95       	ret

00000770 <SSD1306_UpdatePosition>:
     770:	cf 93       	push	r28
     772:	df 93       	push	r29
     774:	00 d0       	rcall	.+0      	; 0x776 <SSD1306_UpdatePosition+0x6>
     776:	1f 92       	push	r1
     778:	cd b7       	in	r28, 0x3d	; 61
     77a:	de b7       	in	r29, 0x3e	; 62
     77c:	8a 83       	std	Y+2, r24	; 0x02
     77e:	6b 83       	std	Y+3, r22	; 0x03
     780:	8f ef       	ldi	r24, 0xFF	; 255
     782:	89 83       	std	Y+1, r24	; 0x01
     784:	8a 81       	ldd	r24, Y+2	; 0x02
     786:	88 23       	and	r24, r24
     788:	44 f5       	brge	.+80     	; 0x7da <SSD1306_UpdatePosition+0x6a>
     78a:	8b 81       	ldd	r24, Y+3	; 0x03
     78c:	87 30       	cpi	r24, 0x07	; 7
     78e:	00 f5       	brcc	.+64     	; 0x7d0 <SSD1306_UpdatePosition+0x60>
     790:	82 e0       	ldi	r24, 0x02	; 2
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	90 93 63 04 	sts	0x0463, r25	; 0x800463 <__data_end+0x1>
     798:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <__data_end>
     79c:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <_indexPage>
     7a0:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <_indexPage+0x1>
     7a4:	01 96       	adiw	r24, 0x01	; 1
     7a6:	90 93 65 04 	sts	0x0465, r25	; 0x800465 <_indexPage+0x1>
     7aa:	80 93 64 04 	sts	0x0464, r24	; 0x800464 <_indexPage>
     7ae:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <_indexPage>
     7b2:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <_indexPage+0x1>
     7b6:	28 2f       	mov	r18, r24
     7b8:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <__data_end>
     7bc:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <__data_end+0x1>
     7c0:	62 2f       	mov	r22, r18
     7c2:	b3 df       	rcall	.-154    	; 0x72a <SSD1306_SetPosition>
     7c4:	89 83       	std	Y+1, r24	; 0x01
     7c6:	89 81       	ldd	r24, Y+1	; 0x01
     7c8:	88 23       	and	r24, r24
     7ca:	11 f0       	breq	.+4      	; 0x7d0 <SSD1306_UpdatePosition+0x60>
     7cc:	89 81       	ldd	r24, Y+1	; 0x01
     7ce:	06 c0       	rjmp	.+12     	; 0x7dc <SSD1306_UpdatePosition+0x6c>
     7d0:	8b 81       	ldd	r24, Y+3	; 0x03
     7d2:	87 30       	cpi	r24, 0x07	; 7
     7d4:	10 f0       	brcs	.+4      	; 0x7da <SSD1306_UpdatePosition+0x6a>
     7d6:	81 e0       	ldi	r24, 0x01	; 1
     7d8:	01 c0       	rjmp	.+2      	; 0x7dc <SSD1306_UpdatePosition+0x6c>
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	0f 90       	pop	r0
     7de:	0f 90       	pop	r0
     7e0:	0f 90       	pop	r0
     7e2:	df 91       	pop	r29
     7e4:	cf 91       	pop	r28
     7e6:	08 95       	ret

000007e8 <SSD1306_DrawChar>:
     7e8:	cf 93       	push	r28
     7ea:	df 93       	push	r29
     7ec:	cd b7       	in	r28, 0x3d	; 61
     7ee:	de b7       	in	r29, 0x3e	; 62
     7f0:	2e 97       	sbiw	r28, 0x0e	; 14
     7f2:	0f b6       	in	r0, 0x3f	; 63
     7f4:	f8 94       	cli
     7f6:	de bf       	out	0x3e, r29	; 62
     7f8:	0f be       	out	0x3f, r0	; 63
     7fa:	cd bf       	out	0x3d, r28	; 61
     7fc:	8d 87       	std	Y+13, r24	; 0x0d
     7fe:	6e 87       	std	Y+14, r22	; 0x0e
     800:	8f ef       	ldi	r24, 0xFF	; 255
     802:	8b 83       	std	Y+3, r24	; 0x03
     804:	19 82       	std	Y+1, r1	; 0x01
     806:	1a 82       	std	Y+2, r1	; 0x02
     808:	8e 85       	ldd	r24, Y+14	; 0x0e
     80a:	88 2f       	mov	r24, r24
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	8f 70       	andi	r24, 0x0F	; 15
     810:	99 27       	eor	r25, r25
     812:	89 2b       	or	r24, r25
     814:	09 f0       	breq	.+2      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
     816:	64 c0       	rjmp	.+200    	; 0x8e0 <__DATA_REGION_LENGTH__+0xe0>
     818:	8e 85       	ldd	r24, Y+14	; 0x0e
     81a:	88 2f       	mov	r24, r24
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	80 7f       	andi	r24, 0xF0	; 240
     820:	99 27       	eor	r25, r25
     822:	89 2b       	or	r24, r25
     824:	11 f0       	breq	.+4      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     826:	80 e8       	ldi	r24, 0x80	; 128
     828:	8a 83       	std	Y+2, r24	; 0x02
     82a:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <__data_end>
     82e:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <__data_end+0x1>
     832:	8b 5f       	subi	r24, 0xFB	; 251
     834:	8c 83       	std	Y+4, r24	; 0x04
     836:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <_indexPage>
     83a:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <_indexPage+0x1>
     83e:	8d 83       	std	Y+5, r24	; 0x05
     840:	6d 81       	ldd	r22, Y+5	; 0x05
     842:	8c 81       	ldd	r24, Y+4	; 0x04
     844:	95 df       	rcall	.-214    	; 0x770 <SSD1306_UpdatePosition>
     846:	8b 83       	std	Y+3, r24	; 0x03
     848:	8b 81       	ldd	r24, Y+3	; 0x03
     84a:	88 23       	and	r24, r24
     84c:	11 f0       	breq	.+4      	; 0x852 <__DATA_REGION_LENGTH__+0x52>
     84e:	8b 81       	ldd	r24, Y+3	; 0x03
     850:	d1 c0       	rjmp	.+418    	; 0x9f4 <__stack+0xf5>
     852:	8c e3       	ldi	r24, 0x3C	; 60
     854:	53 dd       	rcall	.-1370   	; 0x2fc <SSD1306_Send_StartAndSLAW>
     856:	8b 83       	std	Y+3, r24	; 0x03
     858:	8b 81       	ldd	r24, Y+3	; 0x03
     85a:	88 23       	and	r24, r24
     85c:	11 f0       	breq	.+4      	; 0x862 <__DATA_REGION_LENGTH__+0x62>
     85e:	8b 81       	ldd	r24, Y+3	; 0x03
     860:	c9 c0       	rjmp	.+402    	; 0x9f4 <__stack+0xf5>
     862:	80 e4       	ldi	r24, 0x40	; 64
     864:	14 d2       	rcall	.+1064   	; 0xc8e <TWI_MT_Send_Data>
     866:	8b 83       	std	Y+3, r24	; 0x03
     868:	8b 81       	ldd	r24, Y+3	; 0x03
     86a:	88 23       	and	r24, r24
     86c:	a9 f1       	breq	.+106    	; 0x8d8 <__DATA_REGION_LENGTH__+0xd8>
     86e:	8b 81       	ldd	r24, Y+3	; 0x03
     870:	c1 c0       	rjmp	.+386    	; 0x9f4 <__stack+0xf5>
     872:	8d 85       	ldd	r24, Y+13	; 0x0d
     874:	88 2f       	mov	r24, r24
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	9c 01       	movw	r18, r24
     87a:	20 52       	subi	r18, 0x20	; 32
     87c:	31 09       	sbc	r19, r1
     87e:	89 81       	ldd	r24, Y+1	; 0x01
     880:	91 e0       	ldi	r25, 0x01	; 1
     882:	98 0f       	add	r25, r24
     884:	99 83       	std	Y+1, r25	; 0x01
     886:	48 2f       	mov	r20, r24
     888:	50 e0       	ldi	r21, 0x00	; 0
     88a:	c9 01       	movw	r24, r18
     88c:	88 0f       	add	r24, r24
     88e:	99 1f       	adc	r25, r25
     890:	88 0f       	add	r24, r24
     892:	99 1f       	adc	r25, r25
     894:	82 0f       	add	r24, r18
     896:	93 1f       	adc	r25, r19
     898:	84 0f       	add	r24, r20
     89a:	95 1f       	adc	r25, r21
     89c:	8c 54       	subi	r24, 0x4C	; 76
     89e:	9f 4f       	sbci	r25, 0xFF	; 255
     8a0:	9f 83       	std	Y+7, r25	; 0x07
     8a2:	8e 83       	std	Y+6, r24	; 0x06
     8a4:	8e 81       	ldd	r24, Y+6	; 0x06
     8a6:	9f 81       	ldd	r25, Y+7	; 0x07
     8a8:	fc 01       	movw	r30, r24
     8aa:	84 91       	lpm	r24, Z
     8ac:	88 87       	std	Y+8, r24	; 0x08
     8ae:	88 85       	ldd	r24, Y+8	; 0x08
     8b0:	89 87       	std	Y+9, r24	; 0x09
     8b2:	99 85       	ldd	r25, Y+9	; 0x09
     8b4:	8a 81       	ldd	r24, Y+2	; 0x02
     8b6:	89 2b       	or	r24, r25
     8b8:	ea d1       	rcall	.+980    	; 0xc8e <TWI_MT_Send_Data>
     8ba:	8b 83       	std	Y+3, r24	; 0x03
     8bc:	8b 81       	ldd	r24, Y+3	; 0x03
     8be:	88 23       	and	r24, r24
     8c0:	11 f0       	breq	.+4      	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
     8c2:	8b 81       	ldd	r24, Y+3	; 0x03
     8c4:	97 c0       	rjmp	.+302    	; 0x9f4 <__stack+0xf5>
     8c6:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <__data_end>
     8ca:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <__data_end+0x1>
     8ce:	01 96       	adiw	r24, 0x01	; 1
     8d0:	90 93 63 04 	sts	0x0463, r25	; 0x800463 <__data_end+0x1>
     8d4:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <__data_end>
     8d8:	89 81       	ldd	r24, Y+1	; 0x01
     8da:	85 30       	cpi	r24, 0x05	; 5
     8dc:	50 f2       	brcs	.-108    	; 0x872 <__DATA_REGION_LENGTH__+0x72>
     8de:	77 c0       	rjmp	.+238    	; 0x9ce <__stack+0xcf>
     8e0:	8e 85       	ldd	r24, Y+14	; 0x0e
     8e2:	88 2f       	mov	r24, r24
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	8f 70       	andi	r24, 0x0F	; 15
     8e8:	99 27       	eor	r25, r25
     8ea:	01 97       	sbiw	r24, 0x01	; 1
     8ec:	09 f0       	breq	.+2      	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
     8ee:	6f c0       	rjmp	.+222    	; 0x9ce <__stack+0xcf>
     8f0:	8e 85       	ldd	r24, Y+14	; 0x0e
     8f2:	88 2f       	mov	r24, r24
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	80 7f       	andi	r24, 0xF0	; 240
     8f8:	99 27       	eor	r25, r25
     8fa:	89 2b       	or	r24, r25
     8fc:	11 f0       	breq	.+4      	; 0x902 <__stack+0x3>
     8fe:	80 e8       	ldi	r24, 0x80	; 128
     900:	8a 83       	std	Y+2, r24	; 0x02
     902:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <__data_end>
     906:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <__data_end+0x1>
     90a:	86 5f       	subi	r24, 0xF6	; 246
     90c:	8c 83       	std	Y+4, r24	; 0x04
     90e:	80 91 64 04 	lds	r24, 0x0464	; 0x800464 <_indexPage>
     912:	90 91 65 04 	lds	r25, 0x0465	; 0x800465 <_indexPage+0x1>
     916:	8d 83       	std	Y+5, r24	; 0x05
     918:	6d 81       	ldd	r22, Y+5	; 0x05
     91a:	8c 81       	ldd	r24, Y+4	; 0x04
     91c:	29 df       	rcall	.-430    	; 0x770 <SSD1306_UpdatePosition>
     91e:	8b 83       	std	Y+3, r24	; 0x03
     920:	8b 81       	ldd	r24, Y+3	; 0x03
     922:	88 23       	and	r24, r24
     924:	11 f0       	breq	.+4      	; 0x92a <__stack+0x2b>
     926:	8b 81       	ldd	r24, Y+3	; 0x03
     928:	65 c0       	rjmp	.+202    	; 0x9f4 <__stack+0xf5>
     92a:	8c e3       	ldi	r24, 0x3C	; 60
     92c:	e7 dc       	rcall	.-1586   	; 0x2fc <SSD1306_Send_StartAndSLAW>
     92e:	8b 83       	std	Y+3, r24	; 0x03
     930:	8b 81       	ldd	r24, Y+3	; 0x03
     932:	88 23       	and	r24, r24
     934:	11 f0       	breq	.+4      	; 0x93a <__stack+0x3b>
     936:	8b 81       	ldd	r24, Y+3	; 0x03
     938:	5d c0       	rjmp	.+186    	; 0x9f4 <__stack+0xf5>
     93a:	80 e4       	ldi	r24, 0x40	; 64
     93c:	a8 d1       	rcall	.+848    	; 0xc8e <TWI_MT_Send_Data>
     93e:	8b 83       	std	Y+3, r24	; 0x03
     940:	8b 81       	ldd	r24, Y+3	; 0x03
     942:	88 23       	and	r24, r24
     944:	09 f4       	brne	.+2      	; 0x948 <__stack+0x49>
     946:	3f c0       	rjmp	.+126    	; 0x9c6 <__stack+0xc7>
     948:	8b 81       	ldd	r24, Y+3	; 0x03
     94a:	54 c0       	rjmp	.+168    	; 0x9f4 <__stack+0xf5>
     94c:	8d 85       	ldd	r24, Y+13	; 0x0d
     94e:	88 2f       	mov	r24, r24
     950:	90 e0       	ldi	r25, 0x00	; 0
     952:	9c 01       	movw	r18, r24
     954:	20 52       	subi	r18, 0x20	; 32
     956:	31 09       	sbc	r19, r1
     958:	89 81       	ldd	r24, Y+1	; 0x01
     95a:	91 e0       	ldi	r25, 0x01	; 1
     95c:	98 0f       	add	r25, r24
     95e:	99 83       	std	Y+1, r25	; 0x01
     960:	48 2f       	mov	r20, r24
     962:	50 e0       	ldi	r21, 0x00	; 0
     964:	c9 01       	movw	r24, r18
     966:	88 0f       	add	r24, r24
     968:	99 1f       	adc	r25, r25
     96a:	88 0f       	add	r24, r24
     96c:	99 1f       	adc	r25, r25
     96e:	82 0f       	add	r24, r18
     970:	93 1f       	adc	r25, r19
     972:	84 0f       	add	r24, r20
     974:	95 1f       	adc	r25, r21
     976:	8c 54       	subi	r24, 0x4C	; 76
     978:	9f 4f       	sbci	r25, 0xFF	; 255
     97a:	9b 87       	std	Y+11, r25	; 0x0b
     97c:	8a 87       	std	Y+10, r24	; 0x0a
     97e:	8a 85       	ldd	r24, Y+10	; 0x0a
     980:	9b 85       	ldd	r25, Y+11	; 0x0b
     982:	fc 01       	movw	r30, r24
     984:	84 91       	lpm	r24, Z
     986:	8c 87       	std	Y+12, r24	; 0x0c
     988:	8c 85       	ldd	r24, Y+12	; 0x0c
     98a:	89 87       	std	Y+9, r24	; 0x09
     98c:	99 85       	ldd	r25, Y+9	; 0x09
     98e:	8a 81       	ldd	r24, Y+2	; 0x02
     990:	89 2b       	or	r24, r25
     992:	7d d1       	rcall	.+762    	; 0xc8e <TWI_MT_Send_Data>
     994:	8b 83       	std	Y+3, r24	; 0x03
     996:	8b 81       	ldd	r24, Y+3	; 0x03
     998:	88 23       	and	r24, r24
     99a:	11 f0       	breq	.+4      	; 0x9a0 <__stack+0xa1>
     99c:	8b 81       	ldd	r24, Y+3	; 0x03
     99e:	2a c0       	rjmp	.+84     	; 0x9f4 <__stack+0xf5>
     9a0:	99 85       	ldd	r25, Y+9	; 0x09
     9a2:	8a 81       	ldd	r24, Y+2	; 0x02
     9a4:	89 2b       	or	r24, r25
     9a6:	73 d1       	rcall	.+742    	; 0xc8e <TWI_MT_Send_Data>
     9a8:	8b 83       	std	Y+3, r24	; 0x03
     9aa:	8b 81       	ldd	r24, Y+3	; 0x03
     9ac:	88 23       	and	r24, r24
     9ae:	11 f0       	breq	.+4      	; 0x9b4 <__stack+0xb5>
     9b0:	8b 81       	ldd	r24, Y+3	; 0x03
     9b2:	20 c0       	rjmp	.+64     	; 0x9f4 <__stack+0xf5>
     9b4:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <__data_end>
     9b8:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <__data_end+0x1>
     9bc:	02 96       	adiw	r24, 0x02	; 2
     9be:	90 93 63 04 	sts	0x0463, r25	; 0x800463 <__data_end+0x1>
     9c2:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <__data_end>
     9c6:	89 81       	ldd	r24, Y+1	; 0x01
     9c8:	85 30       	cpi	r24, 0x05	; 5
     9ca:	08 f4       	brcc	.+2      	; 0x9ce <__stack+0xcf>
     9cc:	bf cf       	rjmp	.-130    	; 0x94c <__stack+0x4d>
     9ce:	8a 81       	ldd	r24, Y+2	; 0x02
     9d0:	5e d1       	rcall	.+700    	; 0xc8e <TWI_MT_Send_Data>
     9d2:	8b 83       	std	Y+3, r24	; 0x03
     9d4:	8b 81       	ldd	r24, Y+3	; 0x03
     9d6:	88 23       	and	r24, r24
     9d8:	11 f0       	breq	.+4      	; 0x9de <__stack+0xdf>
     9da:	8b 81       	ldd	r24, Y+3	; 0x03
     9dc:	0b c0       	rjmp	.+22     	; 0x9f4 <__stack+0xf5>
     9de:	80 91 62 04 	lds	r24, 0x0462	; 0x800462 <__data_end>
     9e2:	90 91 63 04 	lds	r25, 0x0463	; 0x800463 <__data_end+0x1>
     9e6:	01 96       	adiw	r24, 0x01	; 1
     9e8:	90 93 63 04 	sts	0x0463, r25	; 0x800463 <__data_end+0x1>
     9ec:	80 93 62 04 	sts	0x0462, r24	; 0x800462 <__data_end>
     9f0:	7a d1       	rcall	.+756    	; 0xce6 <TWI_Stop>
     9f2:	80 e0       	ldi	r24, 0x00	; 0
     9f4:	2e 96       	adiw	r28, 0x0e	; 14
     9f6:	0f b6       	in	r0, 0x3f	; 63
     9f8:	f8 94       	cli
     9fa:	de bf       	out	0x3e, r29	; 62
     9fc:	0f be       	out	0x3f, r0	; 63
     9fe:	cd bf       	out	0x3d, r28	; 61
     a00:	df 91       	pop	r29
     a02:	cf 91       	pop	r28
     a04:	08 95       	ret

00000a06 <SSD1306_DrawString>:
     a06:	cf 93       	push	r28
     a08:	df 93       	push	r29
     a0a:	00 d0       	rcall	.+0      	; 0xa0c <SSD1306_DrawString+0x6>
     a0c:	00 d0       	rcall	.+0      	; 0xa0e <SSD1306_DrawString+0x8>
     a0e:	cd b7       	in	r28, 0x3d	; 61
     a10:	de b7       	in	r29, 0x3e	; 62
     a12:	9b 83       	std	Y+3, r25	; 0x03
     a14:	8a 83       	std	Y+2, r24	; 0x02
     a16:	6c 83       	std	Y+4, r22	; 0x04
     a18:	19 82       	std	Y+1, r1	; 0x01
     a1a:	0e c0       	rjmp	.+28     	; 0xa38 <SSD1306_DrawString+0x32>
     a1c:	89 81       	ldd	r24, Y+1	; 0x01
     a1e:	91 e0       	ldi	r25, 0x01	; 1
     a20:	98 0f       	add	r25, r24
     a22:	99 83       	std	Y+1, r25	; 0x01
     a24:	88 2f       	mov	r24, r24
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	2a 81       	ldd	r18, Y+2	; 0x02
     a2a:	3b 81       	ldd	r19, Y+3	; 0x03
     a2c:	82 0f       	add	r24, r18
     a2e:	93 1f       	adc	r25, r19
     a30:	fc 01       	movw	r30, r24
     a32:	80 81       	ld	r24, Z
     a34:	6c 81       	ldd	r22, Y+4	; 0x04
     a36:	d8 de       	rcall	.-592    	; 0x7e8 <SSD1306_DrawChar>
     a38:	89 81       	ldd	r24, Y+1	; 0x01
     a3a:	88 2f       	mov	r24, r24
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	2a 81       	ldd	r18, Y+2	; 0x02
     a40:	3b 81       	ldd	r19, Y+3	; 0x03
     a42:	82 0f       	add	r24, r18
     a44:	93 1f       	adc	r25, r19
     a46:	fc 01       	movw	r30, r24
     a48:	80 81       	ld	r24, Z
     a4a:	88 23       	and	r24, r24
     a4c:	39 f7       	brne	.-50     	; 0xa1c <SSD1306_DrawString+0x16>
     a4e:	80 e0       	ldi	r24, 0x00	; 0
     a50:	0f 90       	pop	r0
     a52:	0f 90       	pop	r0
     a54:	0f 90       	pop	r0
     a56:	0f 90       	pop	r0
     a58:	df 91       	pop	r29
     a5a:	cf 91       	pop	r28
     a5c:	08 95       	ret

00000a5e <SSD1306_UpdateScreen>:

uint8_t SSD1306_UpdateScreen(uint8_t I2C_Address) {
     a5e:	cf 93       	push	r28
     a60:	df 93       	push	r29
     a62:	00 d0       	rcall	.+0      	; 0xa64 <SSD1306_UpdateScreen+0x6>
     a64:	1f 92       	push	r1
     a66:	cd b7       	in	r28, 0x3d	; 61
     a68:	de b7       	in	r29, 0x3e	; 62
     a6a:	8b 83       	std	Y+3, r24	; 0x03
	const uint8_t MAX_RETRIES = 3;  // Max retries
     a6c:	83 e0       	ldi	r24, 0x03	; 3
     a6e:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t retries = 0;
     a70:	19 82       	std	Y+1, r1	; 0x01

	// Set the column address window to start at 8th column and end at 15th column
	while (retries < MAX_RETRIES) {
     a72:	21 c0       	rjmp	.+66     	; 0xab6 <SSD1306_UpdateScreen+0x58>
		if (SSD1306_Send_Command(0x21) != SSD1306_ERROR &&
     a74:	81 e2       	ldi	r24, 0x21	; 33
     a76:	5f dc       	rcall	.-1858   	; 0x336 <SSD1306_Send_Command>
     a78:	81 30       	cpi	r24, 0x01	; 1
     a7a:	41 f0       	breq	.+16     	; 0xa8c <SSD1306_UpdateScreen+0x2e>
		SSD1306_Send_Command(0x08) != SSD1306_ERROR &&
     a7c:	88 e0       	ldi	r24, 0x08	; 8
     a7e:	5b dc       	rcall	.-1866   	; 0x336 <SSD1306_Send_Command>
	const uint8_t MAX_RETRIES = 3;  // Max retries
	uint8_t retries = 0;

	// Set the column address window to start at 8th column and end at 15th column
	while (retries < MAX_RETRIES) {
		if (SSD1306_Send_Command(0x21) != SSD1306_ERROR &&
     a80:	81 30       	cpi	r24, 0x01	; 1
		SSD1306_Send_Command(0x08) != SSD1306_ERROR &&
		SSD1306_Send_Command(0x0F) != SSD1306_ERROR) {
     a82:	21 f0       	breq	.+8      	; 0xa8c <SSD1306_UpdateScreen+0x2e>
     a84:	8f e0       	ldi	r24, 0x0F	; 15
     a86:	57 dc       	rcall	.-1874   	; 0x336 <SSD1306_Send_Command>
	uint8_t retries = 0;

	// Set the column address window to start at 8th column and end at 15th column
	while (retries < MAX_RETRIES) {
		if (SSD1306_Send_Command(0x21) != SSD1306_ERROR &&
		SSD1306_Send_Command(0x08) != SSD1306_ERROR &&
     a88:	81 30       	cpi	r24, 0x01	; 1
     a8a:	d1 f4       	brne	.+52     	; 0xac0 <SSD1306_UpdateScreen+0x62>
		SSD1306_Send_Command(0x0F) != SSD1306_ERROR) {
			break;  // Success, exit retry loop
		}
		retries++;
     a8c:	89 81       	ldd	r24, Y+1	; 0x01
     a8e:	8f 5f       	subi	r24, 0xFF	; 255
     a90:	89 83       	std	Y+1, r24	; 0x01
		printf("Error setting column address, retrying... Attempt %d\n", retries);
     a92:	89 81       	ldd	r24, Y+1	; 0x01
     a94:	88 2f       	mov	r24, r24
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	29 2f       	mov	r18, r25
     a9a:	2f 93       	push	r18
     a9c:	8f 93       	push	r24
     a9e:	8c ea       	ldi	r24, 0xAC	; 172
     aa0:	91 e0       	ldi	r25, 0x01	; 1
     aa2:	89 2f       	mov	r24, r25
     aa4:	8f 93       	push	r24
     aa6:	8c ea       	ldi	r24, 0xAC	; 172
     aa8:	91 e0       	ldi	r25, 0x01	; 1
     aaa:	8f 93       	push	r24
     aac:	7c d5       	rcall	.+2808   	; 0x15a6 <printf>
     aae:	0f 90       	pop	r0
     ab0:	0f 90       	pop	r0
     ab2:	0f 90       	pop	r0
     ab4:	0f 90       	pop	r0
uint8_t SSD1306_UpdateScreen(uint8_t I2C_Address) {
	const uint8_t MAX_RETRIES = 3;  // Max retries
	uint8_t retries = 0;

	// Set the column address window to start at 8th column and end at 15th column
	while (retries < MAX_RETRIES) {
     ab6:	99 81       	ldd	r25, Y+1	; 0x01
     ab8:	8a 81       	ldd	r24, Y+2	; 0x02
     aba:	98 17       	cp	r25, r24
     abc:	d8 f2       	brcs	.-74     	; 0xa74 <SSD1306_UpdateScreen+0x16>
     abe:	01 c0       	rjmp	.+2      	; 0xac2 <SSD1306_UpdateScreen+0x64>
		if (SSD1306_Send_Command(0x21) != SSD1306_ERROR &&
		SSD1306_Send_Command(0x08) != SSD1306_ERROR &&
		SSD1306_Send_Command(0x0F) != SSD1306_ERROR) {
			break;  // Success, exit retry loop
     ac0:	00 00       	nop
		}
		retries++;
		printf("Error setting column address, retrying... Attempt %d\n", retries);
	}

	if (retries == MAX_RETRIES) {
     ac2:	99 81       	ldd	r25, Y+1	; 0x01
     ac4:	8a 81       	ldd	r24, Y+2	; 0x02
     ac6:	98 17       	cp	r25, r24
     ac8:	a1 f4       	brne	.+40     	; 0xaf2 <SSD1306_UpdateScreen+0x94>
		printf("Failed to set column address after %d retries.\n", MAX_RETRIES);
     aca:	8a 81       	ldd	r24, Y+2	; 0x02
     acc:	88 2f       	mov	r24, r24
     ace:	90 e0       	ldi	r25, 0x00	; 0
     ad0:	29 2f       	mov	r18, r25
     ad2:	2f 93       	push	r18
     ad4:	8f 93       	push	r24
     ad6:	82 ee       	ldi	r24, 0xE2	; 226
     ad8:	91 e0       	ldi	r25, 0x01	; 1
     ada:	89 2f       	mov	r24, r25
     adc:	8f 93       	push	r24
     ade:	82 ee       	ldi	r24, 0xE2	; 226
     ae0:	91 e0       	ldi	r25, 0x01	; 1
     ae2:	8f 93       	push	r24
     ae4:	60 d5       	rcall	.+2752   	; 0x15a6 <printf>
     ae6:	0f 90       	pop	r0
     ae8:	0f 90       	pop	r0
     aea:	0f 90       	pop	r0
     aec:	0f 90       	pop	r0
		return SSD1306_ERROR;
     aee:	81 e0       	ldi	r24, 0x01	; 1
	}

	retries = 0;  // Reset retries for page address
     af0:	42 c0       	rjmp	.+132    	; 0xb76 <SSD1306_UpdateScreen+0x118>
	// Set the page address window to 0 (single page)
	while (retries < MAX_RETRIES) {
     af2:	19 82       	std	Y+1, r1	; 0x01
		if (SSD1306_Send_Command(0x22) != SSD1306_ERROR &&
     af4:	21 c0       	rjmp	.+66     	; 0xb38 <SSD1306_UpdateScreen+0xda>
     af6:	82 e2       	ldi	r24, 0x22	; 34
     af8:	1e dc       	rcall	.-1988   	; 0x336 <SSD1306_Send_Command>
     afa:	81 30       	cpi	r24, 0x01	; 1
		SSD1306_Send_Command(0x00) != SSD1306_ERROR &&
     afc:	41 f0       	breq	.+16     	; 0xb0e <SSD1306_UpdateScreen+0xb0>
     afe:	80 e0       	ldi	r24, 0x00	; 0
     b00:	1a dc       	rcall	.-1996   	; 0x336 <SSD1306_Send_Command>
	}

	retries = 0;  // Reset retries for page address
	// Set the page address window to 0 (single page)
	while (retries < MAX_RETRIES) {
		if (SSD1306_Send_Command(0x22) != SSD1306_ERROR &&
     b02:	81 30       	cpi	r24, 0x01	; 1
     b04:	21 f0       	breq	.+8      	; 0xb0e <SSD1306_UpdateScreen+0xb0>
		SSD1306_Send_Command(0x00) != SSD1306_ERROR &&
		SSD1306_Send_Command(0x00) != SSD1306_ERROR) {
     b06:	80 e0       	ldi	r24, 0x00	; 0
     b08:	16 dc       	rcall	.-2004   	; 0x336 <SSD1306_Send_Command>
     b0a:	81 30       	cpi	r24, 0x01	; 1

	retries = 0;  // Reset retries for page address
	// Set the page address window to 0 (single page)
	while (retries < MAX_RETRIES) {
		if (SSD1306_Send_Command(0x22) != SSD1306_ERROR &&
		SSD1306_Send_Command(0x00) != SSD1306_ERROR &&
     b0c:	d1 f4       	brne	.+52     	; 0xb42 <SSD1306_UpdateScreen+0xe4>
     b0e:	89 81       	ldd	r24, Y+1	; 0x01
		SSD1306_Send_Command(0x00) != SSD1306_ERROR) {
			break;  // Success, exit retry loop
		}
		retries++;
     b10:	8f 5f       	subi	r24, 0xFF	; 255
     b12:	89 83       	std	Y+1, r24	; 0x01
     b14:	89 81       	ldd	r24, Y+1	; 0x01
		printf("Error setting page address, retrying... Attempt %d\n", retries);
     b16:	88 2f       	mov	r24, r24
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	29 2f       	mov	r18, r25
     b1c:	2f 93       	push	r18
     b1e:	8f 93       	push	r24
     b20:	82 e1       	ldi	r24, 0x12	; 18
     b22:	92 e0       	ldi	r25, 0x02	; 2
     b24:	89 2f       	mov	r24, r25
     b26:	8f 93       	push	r24
     b28:	82 e1       	ldi	r24, 0x12	; 18
     b2a:	92 e0       	ldi	r25, 0x02	; 2
     b2c:	8f 93       	push	r24
     b2e:	3b d5       	rcall	.+2678   	; 0x15a6 <printf>
     b30:	0f 90       	pop	r0
     b32:	0f 90       	pop	r0
     b34:	0f 90       	pop	r0
     b36:	0f 90       	pop	r0
     b38:	99 81       	ldd	r25, Y+1	; 0x01
		return SSD1306_ERROR;
	}

	retries = 0;  // Reset retries for page address
	// Set the page address window to 0 (single page)
	while (retries < MAX_RETRIES) {
     b3a:	8a 81       	ldd	r24, Y+2	; 0x02
     b3c:	98 17       	cp	r25, r24
     b3e:	d8 f2       	brcs	.-74     	; 0xaf6 <SSD1306_UpdateScreen+0x98>
     b40:	01 c0       	rjmp	.+2      	; 0xb44 <SSD1306_UpdateScreen+0xe6>
     b42:	00 00       	nop
		if (SSD1306_Send_Command(0x22) != SSD1306_ERROR &&
		SSD1306_Send_Command(0x00) != SSD1306_ERROR &&
		SSD1306_Send_Command(0x00) != SSD1306_ERROR) {
			break;  // Success, exit retry loop
     b44:	99 81       	ldd	r25, Y+1	; 0x01
		}
		retries++;
		printf("Error setting page address, retrying... Attempt %d\n", retries);
	}

	if (retries == MAX_RETRIES) {
     b46:	8a 81       	ldd	r24, Y+2	; 0x02
     b48:	98 17       	cp	r25, r24
     b4a:	a1 f4       	brne	.+40     	; 0xb74 <SSD1306_UpdateScreen+0x116>
     b4c:	8a 81       	ldd	r24, Y+2	; 0x02
		printf("Failed to set page address after %d retries.\n", MAX_RETRIES);
     b4e:	88 2f       	mov	r24, r24
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	29 2f       	mov	r18, r25
     b54:	2f 93       	push	r18
     b56:	8f 93       	push	r24
     b58:	86 e4       	ldi	r24, 0x46	; 70
     b5a:	92 e0       	ldi	r25, 0x02	; 2
     b5c:	89 2f       	mov	r24, r25
     b5e:	8f 93       	push	r24
     b60:	86 e4       	ldi	r24, 0x46	; 70
     b62:	92 e0       	ldi	r25, 0x02	; 2
     b64:	8f 93       	push	r24
     b66:	1f d5       	rcall	.+2622   	; 0x15a6 <printf>
     b68:	0f 90       	pop	r0
     b6a:	0f 90       	pop	r0
     b6c:	0f 90       	pop	r0
     b6e:	0f 90       	pop	r0
     b70:	81 e0       	ldi	r24, 0x01	; 1
		return SSD1306_ERROR;
     b72:	01 c0       	rjmp	.+2      	; 0xb76 <SSD1306_UpdateScreen+0x118>
     b74:	80 e0       	ldi	r24, 0x00	; 0
	}

	return SSD1306_SUCCESS;
     b76:	0f 90       	pop	r0
}
     b78:	0f 90       	pop	r0
     b7a:	0f 90       	pop	r0
     b7c:	df 91       	pop	r29
     b7e:	cf 91       	pop	r28
     b80:	08 95       	ret

00000b82 <TWI_Init>:
     b82:	cf 93       	push	r28
    // return status
    return TWI_STATUS;
  }
  // success
  return SUCCESS;
}
     b84:	df 93       	push	r29
     b86:	cd b7       	in	r28, 0x3d	; 61
     b88:	de b7       	in	r29, 0x3e	; 62
     b8a:	88 eb       	ldi	r24, 0xB8	; 184
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	22 e0       	ldi	r18, 0x02	; 2
     b90:	fc 01       	movw	r30, r24
     b92:	20 83       	st	Z, r18
     b94:	89 eb       	ldi	r24, 0xB9	; 185
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	fc 01       	movw	r30, r24
     b9a:	80 81       	ld	r24, Z
     b9c:	88 2f       	mov	r24, r24
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	82 70       	andi	r24, 0x02	; 2
     ba2:	99 27       	eor	r25, r25
     ba4:	ac 01       	movw	r20, r24
     ba6:	41 60       	ori	r20, 0x01	; 1
     ba8:	89 eb       	ldi	r24, 0xB9	; 185
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	29 eb       	ldi	r18, 0xB9	; 185
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	f9 01       	movw	r30, r18
     bb2:	20 81       	ld	r18, Z
     bb4:	32 2f       	mov	r19, r18
     bb6:	24 2f       	mov	r18, r20
     bb8:	23 2b       	or	r18, r19
     bba:	fc 01       	movw	r30, r24
     bbc:	20 83       	st	Z, r18
     bbe:	00 00       	nop
     bc0:	df 91       	pop	r29
     bc2:	cf 91       	pop	r28
     bc4:	08 95       	ret

00000bc6 <TWI_MT_Start>:
     bc6:	cf 93       	push	r28
     bc8:	df 93       	push	r29
     bca:	cd b7       	in	r28, 0x3d	; 61
     bcc:	de b7       	in	r29, 0x3e	; 62
     bce:	89 eb       	ldi	r24, 0xB9	; 185
     bd0:	90 e0       	ldi	r25, 0x00	; 0
     bd2:	29 eb       	ldi	r18, 0xB9	; 185
     bd4:	30 e0       	ldi	r19, 0x00	; 0
     bd6:	f9 01       	movw	r30, r18
     bd8:	20 81       	ld	r18, Z
     bda:	27 75       	andi	r18, 0x57	; 87
     bdc:	fc 01       	movw	r30, r24
     bde:	20 83       	st	Z, r18
     be0:	8c eb       	ldi	r24, 0xBC	; 188
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	24 ea       	ldi	r18, 0xA4	; 164
     be6:	fc 01       	movw	r30, r24
     be8:	20 83       	st	Z, r18
     bea:	00 00       	nop
     bec:	8c eb       	ldi	r24, 0xBC	; 188
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	fc 01       	movw	r30, r24
     bf2:	80 81       	ld	r24, Z
     bf4:	88 23       	and	r24, r24
     bf6:	d4 f7       	brge	.-12     	; 0xbec <TWI_MT_Start+0x26>
     bf8:	89 eb       	ldi	r24, 0xB9	; 185
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	fc 01       	movw	r30, r24
     bfe:	80 81       	ld	r24, Z
     c00:	88 2f       	mov	r24, r24
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	88 7f       	andi	r24, 0xF8	; 248
     c06:	99 27       	eor	r25, r25
     c08:	08 97       	sbiw	r24, 0x08	; 8
     c0a:	81 f0       	breq	.+32     	; 0xc2c <TWI_MT_Start+0x66>
     c0c:	89 eb       	ldi	r24, 0xB9	; 185
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	fc 01       	movw	r30, r24
     c12:	80 81       	ld	r24, Z
     c14:	88 2f       	mov	r24, r24
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	88 7f       	andi	r24, 0xF8	; 248
     c1a:	99 27       	eor	r25, r25
     c1c:	40 97       	sbiw	r24, 0x10	; 16
     c1e:	31 f0       	breq	.+12     	; 0xc2c <TWI_MT_Start+0x66>
     c20:	89 eb       	ldi	r24, 0xB9	; 185
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	fc 01       	movw	r30, r24
     c26:	80 81       	ld	r24, Z
     c28:	88 7f       	andi	r24, 0xF8	; 248
     c2a:	01 c0       	rjmp	.+2      	; 0xc2e <TWI_MT_Start+0x68>
     c2c:	80 e0       	ldi	r24, 0x00	; 0
     c2e:	df 91       	pop	r29
     c30:	cf 91       	pop	r28
     c32:	08 95       	ret

00000c34 <TWI_MT_Send_SLAW>:
     c34:	cf 93       	push	r28
     c36:	df 93       	push	r29
     c38:	1f 92       	push	r1
     c3a:	cd b7       	in	r28, 0x3d	; 61
     c3c:	de b7       	in	r29, 0x3e	; 62
     c3e:	89 83       	std	Y+1, r24	; 0x01
     c40:	8b eb       	ldi	r24, 0xBB	; 187
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	29 81       	ldd	r18, Y+1	; 0x01
     c46:	22 0f       	add	r18, r18
     c48:	fc 01       	movw	r30, r24
     c4a:	20 83       	st	Z, r18
     c4c:	8c eb       	ldi	r24, 0xBC	; 188
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	24 e8       	ldi	r18, 0x84	; 132
     c52:	fc 01       	movw	r30, r24
     c54:	20 83       	st	Z, r18
     c56:	00 00       	nop
     c58:	8c eb       	ldi	r24, 0xBC	; 188
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	fc 01       	movw	r30, r24
     c5e:	80 81       	ld	r24, Z
     c60:	88 23       	and	r24, r24
     c62:	d4 f7       	brge	.-12     	; 0xc58 <TWI_MT_Send_SLAW+0x24>
     c64:	89 eb       	ldi	r24, 0xB9	; 185
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	fc 01       	movw	r30, r24
     c6a:	80 81       	ld	r24, Z
     c6c:	88 2f       	mov	r24, r24
     c6e:	90 e0       	ldi	r25, 0x00	; 0
     c70:	88 7f       	andi	r24, 0xF8	; 248
     c72:	99 27       	eor	r25, r25
     c74:	48 97       	sbiw	r24, 0x18	; 24
     c76:	31 f0       	breq	.+12     	; 0xc84 <TWI_MT_Send_SLAW+0x50>
     c78:	89 eb       	ldi	r24, 0xB9	; 185
     c7a:	90 e0       	ldi	r25, 0x00	; 0
     c7c:	fc 01       	movw	r30, r24
     c7e:	80 81       	ld	r24, Z
     c80:	88 7f       	andi	r24, 0xF8	; 248
     c82:	01 c0       	rjmp	.+2      	; 0xc86 <TWI_MT_Send_SLAW+0x52>
     c84:	80 e0       	ldi	r24, 0x00	; 0
     c86:	0f 90       	pop	r0
     c88:	df 91       	pop	r29
     c8a:	cf 91       	pop	r28
     c8c:	08 95       	ret

00000c8e <TWI_MT_Send_Data>:
     c8e:	cf 93       	push	r28
     c90:	df 93       	push	r29
     c92:	1f 92       	push	r1
     c94:	cd b7       	in	r28, 0x3d	; 61
     c96:	de b7       	in	r29, 0x3e	; 62
     c98:	89 83       	std	Y+1, r24	; 0x01
     c9a:	8b eb       	ldi	r24, 0xBB	; 187
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	29 81       	ldd	r18, Y+1	; 0x01
     ca0:	fc 01       	movw	r30, r24
     ca2:	20 83       	st	Z, r18
     ca4:	8c eb       	ldi	r24, 0xBC	; 188
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	24 e8       	ldi	r18, 0x84	; 132
     caa:	fc 01       	movw	r30, r24
     cac:	20 83       	st	Z, r18
     cae:	00 00       	nop
     cb0:	8c eb       	ldi	r24, 0xBC	; 188
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	fc 01       	movw	r30, r24
     cb6:	80 81       	ld	r24, Z
     cb8:	88 23       	and	r24, r24
     cba:	d4 f7       	brge	.-12     	; 0xcb0 <TWI_MT_Send_Data+0x22>
     cbc:	89 eb       	ldi	r24, 0xB9	; 185
     cbe:	90 e0       	ldi	r25, 0x00	; 0
     cc0:	fc 01       	movw	r30, r24
     cc2:	80 81       	ld	r24, Z
     cc4:	88 2f       	mov	r24, r24
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	88 7f       	andi	r24, 0xF8	; 248
     cca:	99 27       	eor	r25, r25
     ccc:	88 97       	sbiw	r24, 0x28	; 40
     cce:	31 f0       	breq	.+12     	; 0xcdc <TWI_MT_Send_Data+0x4e>
     cd0:	89 eb       	ldi	r24, 0xB9	; 185
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	fc 01       	movw	r30, r24
     cd6:	80 81       	ld	r24, Z
     cd8:	88 7f       	andi	r24, 0xF8	; 248
     cda:	01 c0       	rjmp	.+2      	; 0xcde <TWI_MT_Send_Data+0x50>
     cdc:	80 e0       	ldi	r24, 0x00	; 0
     cde:	0f 90       	pop	r0
     ce0:	df 91       	pop	r29
     ce2:	cf 91       	pop	r28
     ce4:	08 95       	ret

00000ce6 <TWI_Stop>:
 * @param   void
 *
 * @return  void
 */
void TWI_Stop (void)
{
     ce6:	cf 93       	push	r28
     ce8:	df 93       	push	r29
     cea:	cd b7       	in	r28, 0x3d	; 61
     cec:	de b7       	in	r29, 0x3e	; 62
  // End TWI
  // -------------------------------------------------------------------------------------
  // send stop sequence
  TWI_STOP ();
     cee:	8c eb       	ldi	r24, 0xBC	; 188
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	24 e9       	ldi	r18, 0x94	; 148
     cf4:	fc 01       	movw	r30, r24
     cf6:	20 83       	st	Z, r18
  // wait for TWINT flag is set
//  TWI_WAIT_TILL_TWINT_IS_SET();
}
     cf8:	00 00       	nop
     cfa:	df 91       	pop	r29
     cfc:	cf 91       	pop	r28
     cfe:	08 95       	ret

00000d00 <setupFunctionCallPointer>:
	printf("Buffer Contents: ");
	for (int i = 0; i < UART_BUFFER_SIZE; ++i) {
		printf("%c ", buf->buffer[i]);
	}
	printf("\nHead: %d, Tail: %d\n", buf->head, buf->tail);
}
     d00:	cf 93       	push	r28
     d02:	df 93       	push	r29
     d04:	00 d0       	rcall	.+0      	; 0xd06 <setupFunctionCallPointer+0x6>
     d06:	cd b7       	in	r28, 0x3d	; 61
     d08:	de b7       	in	r29, 0x3e	; 62
     d0a:	9a 83       	std	Y+2, r25	; 0x02
     d0c:	89 83       	std	Y+1, r24	; 0x01
     d0e:	89 81       	ldd	r24, Y+1	; 0x01
     d10:	9a 81       	ldd	r25, Y+2	; 0x02
     d12:	90 93 ab 04 	sts	0x04AB, r25	; 0x8004ab <callback_function_pointer+0x1>
     d16:	80 93 aa 04 	sts	0x04AA, r24	; 0x8004aa <callback_function_pointer>
     d1a:	00 00       	nop
     d1c:	0f 90       	pop	r0
     d1e:	0f 90       	pop	r0
     d20:	df 91       	pop	r29
     d22:	cf 91       	pop	r28
     d24:	08 95       	ret

00000d26 <RS232Init>:
     d26:	cf 93       	push	r28
     d28:	df 93       	push	r29
     d2a:	00 d0       	rcall	.+0      	; 0xd2c <RS232Init+0x6>
     d2c:	cd b7       	in	r28, 0x3d	; 61
     d2e:	de b7       	in	r29, 0x3e	; 62
     d30:	87 e6       	ldi	r24, 0x67	; 103
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	9a 83       	std	Y+2, r25	; 0x02
     d36:	89 83       	std	Y+1, r24	; 0x01
     d38:	85 ec       	ldi	r24, 0xC5	; 197
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	29 81       	ldd	r18, Y+1	; 0x01
     d3e:	3a 81       	ldd	r19, Y+2	; 0x02
     d40:	23 2f       	mov	r18, r19
     d42:	33 27       	eor	r19, r19
     d44:	fc 01       	movw	r30, r24
     d46:	20 83       	st	Z, r18
     d48:	84 ec       	ldi	r24, 0xC4	; 196
     d4a:	90 e0       	ldi	r25, 0x00	; 0
     d4c:	29 81       	ldd	r18, Y+1	; 0x01
     d4e:	fc 01       	movw	r30, r24
     d50:	20 83       	st	Z, r18
     d52:	81 ec       	ldi	r24, 0xC1	; 193
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	28 e9       	ldi	r18, 0x98	; 152
     d58:	fc 01       	movw	r30, r24
     d5a:	20 83       	st	Z, r18
     d5c:	82 ec       	ldi	r24, 0xC2	; 194
     d5e:	90 e0       	ldi	r25, 0x00	; 0
     d60:	26 e0       	ldi	r18, 0x06	; 6
     d62:	fc 01       	movw	r30, r24
     d64:	20 83       	st	Z, r18
     d66:	80 e0       	ldi	r24, 0x00	; 0
     d68:	91 e0       	ldi	r25, 0x01	; 1
     d6a:	90 93 b1 04 	sts	0x04B1, r25	; 0x8004b1 <__iob+0x3>
     d6e:	80 93 b0 04 	sts	0x04B0, r24	; 0x8004b0 <__iob+0x2>
     d72:	8e e0       	ldi	r24, 0x0E	; 14
     d74:	91 e0       	ldi	r25, 0x01	; 1
     d76:	90 93 af 04 	sts	0x04AF, r25	; 0x8004af <__iob+0x1>
     d7a:	80 93 ae 04 	sts	0x04AE, r24	; 0x8004ae <__iob>
     d7e:	00 00       	nop
     d80:	0f 90       	pop	r0
     d82:	0f 90       	pop	r0
     d84:	df 91       	pop	r29
     d86:	cf 91       	pop	r28
     d88:	08 95       	ret

00000d8a <Enable_UART_Receive_Interrupt>:
     d8a:	cf 93       	push	r28
     d8c:	df 93       	push	r29
     d8e:	cd b7       	in	r28, 0x3d	; 61
     d90:	de b7       	in	r29, 0x3e	; 62
     d92:	89 ec       	ldi	r24, 0xC9	; 201
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	29 ec       	ldi	r18, 0xC9	; 201
     d98:	30 e0       	ldi	r19, 0x00	; 0
     d9a:	f9 01       	movw	r30, r18
     d9c:	20 81       	ld	r18, Z
     d9e:	20 68       	ori	r18, 0x80	; 128
     da0:	fc 01       	movw	r30, r24
     da2:	20 83       	st	Z, r18
     da4:	00 00       	nop
     da6:	df 91       	pop	r29
     da8:	cf 91       	pop	r28
     daa:	08 95       	ret

00000dac <uart_getch>:
     dac:	cf 93       	push	r28
     dae:	df 93       	push	r29
     db0:	00 d0       	rcall	.+0      	; 0xdb2 <uart_getch+0x6>
     db2:	cd b7       	in	r28, 0x3d	; 61
     db4:	de b7       	in	r29, 0x3e	; 62
     db6:	9a 83       	std	Y+2, r25	; 0x02
     db8:	89 83       	std	Y+1, r24	; 0x01
     dba:	00 00       	nop
     dbc:	80 ec       	ldi	r24, 0xC0	; 192
     dbe:	90 e0       	ldi	r25, 0x00	; 0
     dc0:	fc 01       	movw	r30, r24
     dc2:	80 81       	ld	r24, Z
     dc4:	88 23       	and	r24, r24
     dc6:	d4 f7       	brge	.-12     	; 0xdbc <uart_getch+0x10>
     dc8:	86 ec       	ldi	r24, 0xC6	; 198
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	fc 01       	movw	r30, r24
     dce:	80 81       	ld	r24, Z
     dd0:	88 2f       	mov	r24, r24
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	0f 90       	pop	r0
     dd6:	0f 90       	pop	r0
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	08 95       	ret

00000dde <uart_putch>:
     dde:	cf 93       	push	r28
     de0:	df 93       	push	r29
     de2:	00 d0       	rcall	.+0      	; 0xde4 <uart_putch+0x6>
     de4:	1f 92       	push	r1
     de6:	cd b7       	in	r28, 0x3d	; 61
     de8:	de b7       	in	r29, 0x3e	; 62
     dea:	89 83       	std	Y+1, r24	; 0x01
     dec:	7b 83       	std	Y+3, r23	; 0x03
     dee:	6a 83       	std	Y+2, r22	; 0x02
     df0:	00 00       	nop
     df2:	80 ec       	ldi	r24, 0xC0	; 192
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	fc 01       	movw	r30, r24
     df8:	80 81       	ld	r24, Z
     dfa:	88 2f       	mov	r24, r24
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	80 72       	andi	r24, 0x20	; 32
     e00:	99 27       	eor	r25, r25
     e02:	89 2b       	or	r24, r25
     e04:	b1 f3       	breq	.-20     	; 0xdf2 <uart_putch+0x14>
     e06:	86 ec       	ldi	r24, 0xC6	; 198
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	29 81       	ldd	r18, Y+1	; 0x01
     e0c:	fc 01       	movw	r30, r24
     e0e:	20 83       	st	Z, r18
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	0f 90       	pop	r0
     e16:	0f 90       	pop	r0
     e18:	0f 90       	pop	r0
     e1a:	df 91       	pop	r29
     e1c:	cf 91       	pop	r28
     e1e:	08 95       	ret

00000e20 <UART_BufferPut>:
     e20:	cf 93       	push	r28
     e22:	df 93       	push	r29
     e24:	00 d0       	rcall	.+0      	; 0xe26 <UART_BufferPut+0x6>
     e26:	00 d0       	rcall	.+0      	; 0xe28 <UART_BufferPut+0x8>
     e28:	cd b7       	in	r28, 0x3d	; 61
     e2a:	de b7       	in	r29, 0x3e	; 62
     e2c:	9b 83       	std	Y+3, r25	; 0x03
     e2e:	8a 83       	std	Y+2, r24	; 0x02
     e30:	6c 83       	std	Y+4, r22	; 0x04
     e32:	8a 81       	ldd	r24, Y+2	; 0x02
     e34:	9b 81       	ldd	r25, Y+3	; 0x03
     e36:	80 5c       	subi	r24, 0xC0	; 192
     e38:	9f 4f       	sbci	r25, 0xFF	; 255
     e3a:	fc 01       	movw	r30, r24
     e3c:	80 81       	ld	r24, Z
     e3e:	88 2f       	mov	r24, r24
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	01 96       	adiw	r24, 0x01	; 1
     e44:	8f 73       	andi	r24, 0x3F	; 63
     e46:	90 78       	andi	r25, 0x80	; 128
     e48:	99 23       	and	r25, r25
     e4a:	24 f4       	brge	.+8      	; 0xe54 <UART_BufferPut+0x34>
     e4c:	01 97       	sbiw	r24, 0x01	; 1
     e4e:	80 6c       	ori	r24, 0xC0	; 192
     e50:	9f 6f       	ori	r25, 0xFF	; 255
     e52:	01 96       	adiw	r24, 0x01	; 1
     e54:	89 83       	std	Y+1, r24	; 0x01
     e56:	89 81       	ldd	r24, Y+1	; 0x01
     e58:	48 2f       	mov	r20, r24
     e5a:	50 e0       	ldi	r21, 0x00	; 0
     e5c:	8a 81       	ldd	r24, Y+2	; 0x02
     e5e:	9b 81       	ldd	r25, Y+3	; 0x03
     e60:	8f 5b       	subi	r24, 0xBF	; 191
     e62:	9f 4f       	sbci	r25, 0xFF	; 255
     e64:	fc 01       	movw	r30, r24
     e66:	80 81       	ld	r24, Z
     e68:	28 2f       	mov	r18, r24
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	8a 81       	ldd	r24, Y+2	; 0x02
     e6e:	9b 81       	ldd	r25, Y+3	; 0x03
     e70:	80 5c       	subi	r24, 0xC0	; 192
     e72:	9f 4f       	sbci	r25, 0xFF	; 255
     e74:	fc 01       	movw	r30, r24
     e76:	80 81       	ld	r24, Z
     e78:	88 2f       	mov	r24, r24
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	65 2f       	mov	r22, r21
     e7e:	6f 93       	push	r22
     e80:	4f 93       	push	r20
     e82:	43 2f       	mov	r20, r19
     e84:	4f 93       	push	r20
     e86:	2f 93       	push	r18
     e88:	29 2f       	mov	r18, r25
     e8a:	2f 93       	push	r18
     e8c:	8f 93       	push	r24
     e8e:	84 e7       	ldi	r24, 0x74	; 116
     e90:	92 e0       	ldi	r25, 0x02	; 2
     e92:	89 2f       	mov	r24, r25
     e94:	8f 93       	push	r24
     e96:	84 e7       	ldi	r24, 0x74	; 116
     e98:	92 e0       	ldi	r25, 0x02	; 2
     e9a:	8f 93       	push	r24
     e9c:	84 d3       	rcall	.+1800   	; 0x15a6 <printf>
     e9e:	8d b7       	in	r24, 0x3d	; 61
     ea0:	9e b7       	in	r25, 0x3e	; 62
     ea2:	08 96       	adiw	r24, 0x08	; 8
     ea4:	0f b6       	in	r0, 0x3f	; 63
     ea6:	f8 94       	cli
     ea8:	de bf       	out	0x3e, r29	; 62
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	cd bf       	out	0x3d, r28	; 61
     eae:	8a 81       	ldd	r24, Y+2	; 0x02
     eb0:	9b 81       	ldd	r25, Y+3	; 0x03
     eb2:	8f 5b       	subi	r24, 0xBF	; 191
     eb4:	9f 4f       	sbci	r25, 0xFF	; 255
     eb6:	fc 01       	movw	r30, r24
     eb8:	90 81       	ld	r25, Z
     eba:	89 81       	ldd	r24, Y+1	; 0x01
     ebc:	98 17       	cp	r25, r24
     ebe:	49 f1       	breq	.+82     	; 0xf12 <UART_BufferPut+0xf2>
     ec0:	8a 81       	ldd	r24, Y+2	; 0x02
     ec2:	9b 81       	ldd	r25, Y+3	; 0x03
     ec4:	80 5c       	subi	r24, 0xC0	; 192
     ec6:	9f 4f       	sbci	r25, 0xFF	; 255
     ec8:	fc 01       	movw	r30, r24
     eca:	80 81       	ld	r24, Z
     ecc:	88 2f       	mov	r24, r24
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	2a 81       	ldd	r18, Y+2	; 0x02
     ed2:	3b 81       	ldd	r19, Y+3	; 0x03
     ed4:	82 0f       	add	r24, r18
     ed6:	93 1f       	adc	r25, r19
     ed8:	2c 81       	ldd	r18, Y+4	; 0x04
     eda:	fc 01       	movw	r30, r24
     edc:	20 83       	st	Z, r18
     ede:	8a 81       	ldd	r24, Y+2	; 0x02
     ee0:	9b 81       	ldd	r25, Y+3	; 0x03
     ee2:	80 5c       	subi	r24, 0xC0	; 192
     ee4:	9f 4f       	sbci	r25, 0xFF	; 255
     ee6:	29 81       	ldd	r18, Y+1	; 0x01
     ee8:	fc 01       	movw	r30, r24
     eea:	20 83       	st	Z, r18
     eec:	8c 81       	ldd	r24, Y+4	; 0x04
     eee:	88 2f       	mov	r24, r24
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	29 2f       	mov	r18, r25
     ef4:	2f 93       	push	r18
     ef6:	8f 93       	push	r24
     ef8:	88 e9       	ldi	r24, 0x98	; 152
     efa:	92 e0       	ldi	r25, 0x02	; 2
     efc:	89 2f       	mov	r24, r25
     efe:	8f 93       	push	r24
     f00:	88 e9       	ldi	r24, 0x98	; 152
     f02:	92 e0       	ldi	r25, 0x02	; 2
     f04:	8f 93       	push	r24
     f06:	4f d3       	rcall	.+1694   	; 0x15a6 <printf>
     f08:	0f 90       	pop	r0
     f0a:	0f 90       	pop	r0
     f0c:	0f 90       	pop	r0
     f0e:	0f 90       	pop	r0
     f10:	0f c0       	rjmp	.+30     	; 0xf30 <UART_BufferPut+0x110>
     f12:	90 91 a9 04 	lds	r25, 0x04A9	; 0x8004a9 <overflow_logged>
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	89 27       	eor	r24, r25
     f1a:	88 23       	and	r24, r24
     f1c:	49 f0       	breq	.+18     	; 0xf30 <UART_BufferPut+0x110>
     f1e:	88 eb       	ldi	r24, 0xB8	; 184
     f20:	92 e0       	ldi	r25, 0x02	; 2
     f22:	54 d3       	rcall	.+1704   	; 0x15cc <puts>
     f24:	81 e0       	ldi	r24, 0x01	; 1
     f26:	80 93 a8 04 	sts	0x04A8, r24	; 0x8004a8 <UART_BufferOverflow>
     f2a:	81 e0       	ldi	r24, 0x01	; 1
     f2c:	80 93 a9 04 	sts	0x04A9, r24	; 0x8004a9 <overflow_logged>
     f30:	00 00       	nop
     f32:	0f 90       	pop	r0
     f34:	0f 90       	pop	r0
     f36:	0f 90       	pop	r0
     f38:	0f 90       	pop	r0
     f3a:	df 91       	pop	r29
     f3c:	cf 91       	pop	r28
     f3e:	08 95       	ret

00000f40 <UART_BufferGet>:
     f40:	cf 93       	push	r28
     f42:	df 93       	push	r29
     f44:	00 d0       	rcall	.+0      	; 0xf46 <UART_BufferGet+0x6>
     f46:	00 d0       	rcall	.+0      	; 0xf48 <UART_BufferGet+0x8>
     f48:	cd b7       	in	r28, 0x3d	; 61
     f4a:	de b7       	in	r29, 0x3e	; 62
     f4c:	9a 83       	std	Y+2, r25	; 0x02
     f4e:	89 83       	std	Y+1, r24	; 0x01
     f50:	7c 83       	std	Y+4, r23	; 0x04
     f52:	6b 83       	std	Y+3, r22	; 0x03
     f54:	89 81       	ldd	r24, Y+1	; 0x01
     f56:	9a 81       	ldd	r25, Y+2	; 0x02
     f58:	8f 5b       	subi	r24, 0xBF	; 191
     f5a:	9f 4f       	sbci	r25, 0xFF	; 255
     f5c:	fc 01       	movw	r30, r24
     f5e:	20 81       	ld	r18, Z
     f60:	89 81       	ldd	r24, Y+1	; 0x01
     f62:	9a 81       	ldd	r25, Y+2	; 0x02
     f64:	80 5c       	subi	r24, 0xC0	; 192
     f66:	9f 4f       	sbci	r25, 0xFF	; 255
     f68:	fc 01       	movw	r30, r24
     f6a:	80 81       	ld	r24, Z
     f6c:	28 17       	cp	r18, r24
     f6e:	09 f4       	brne	.+2      	; 0xf72 <UART_BufferGet+0x32>
     f70:	66 c0       	rjmp	.+204    	; 0x103e <UART_BufferGet+0xfe>
     f72:	89 81       	ldd	r24, Y+1	; 0x01
     f74:	9a 81       	ldd	r25, Y+2	; 0x02
     f76:	8f 5b       	subi	r24, 0xBF	; 191
     f78:	9f 4f       	sbci	r25, 0xFF	; 255
     f7a:	fc 01       	movw	r30, r24
     f7c:	80 81       	ld	r24, Z
     f7e:	88 2f       	mov	r24, r24
     f80:	90 e0       	ldi	r25, 0x00	; 0
     f82:	29 81       	ldd	r18, Y+1	; 0x01
     f84:	3a 81       	ldd	r19, Y+2	; 0x02
     f86:	82 0f       	add	r24, r18
     f88:	93 1f       	adc	r25, r19
     f8a:	fc 01       	movw	r30, r24
     f8c:	20 81       	ld	r18, Z
     f8e:	8b 81       	ldd	r24, Y+3	; 0x03
     f90:	9c 81       	ldd	r25, Y+4	; 0x04
     f92:	fc 01       	movw	r30, r24
     f94:	20 83       	st	Z, r18
     f96:	89 81       	ldd	r24, Y+1	; 0x01
     f98:	9a 81       	ldd	r25, Y+2	; 0x02
     f9a:	8f 5b       	subi	r24, 0xBF	; 191
     f9c:	9f 4f       	sbci	r25, 0xFF	; 255
     f9e:	fc 01       	movw	r30, r24
     fa0:	80 81       	ld	r24, Z
     fa2:	88 2f       	mov	r24, r24
     fa4:	90 e0       	ldi	r25, 0x00	; 0
     fa6:	01 96       	adiw	r24, 0x01	; 1
     fa8:	8f 73       	andi	r24, 0x3F	; 63
     faa:	90 78       	andi	r25, 0x80	; 128
     fac:	99 23       	and	r25, r25
     fae:	24 f4       	brge	.+8      	; 0xfb8 <UART_BufferGet+0x78>
     fb0:	01 97       	sbiw	r24, 0x01	; 1
     fb2:	80 6c       	ori	r24, 0xC0	; 192
     fb4:	9f 6f       	ori	r25, 0xFF	; 255
     fb6:	01 96       	adiw	r24, 0x01	; 1
     fb8:	28 2f       	mov	r18, r24
     fba:	89 81       	ldd	r24, Y+1	; 0x01
     fbc:	9a 81       	ldd	r25, Y+2	; 0x02
     fbe:	8f 5b       	subi	r24, 0xBF	; 191
     fc0:	9f 4f       	sbci	r25, 0xFF	; 255
     fc2:	fc 01       	movw	r30, r24
     fc4:	20 83       	st	Z, r18
     fc6:	8b 81       	ldd	r24, Y+3	; 0x03
     fc8:	9c 81       	ldd	r25, Y+4	; 0x04
     fca:	fc 01       	movw	r30, r24
     fcc:	80 81       	ld	r24, Z
     fce:	88 2f       	mov	r24, r24
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	29 2f       	mov	r18, r25
     fd4:	2f 93       	push	r18
     fd6:	8f 93       	push	r24
     fd8:	89 ec       	ldi	r24, 0xC9	; 201
     fda:	92 e0       	ldi	r25, 0x02	; 2
     fdc:	89 2f       	mov	r24, r25
     fde:	8f 93       	push	r24
     fe0:	89 ec       	ldi	r24, 0xC9	; 201
     fe2:	92 e0       	ldi	r25, 0x02	; 2
     fe4:	8f 93       	push	r24
     fe6:	df d2       	rcall	.+1470   	; 0x15a6 <printf>
     fe8:	0f 90       	pop	r0
     fea:	0f 90       	pop	r0
     fec:	0f 90       	pop	r0
     fee:	0f 90       	pop	r0
     ff0:	89 81       	ldd	r24, Y+1	; 0x01
     ff2:	9a 81       	ldd	r25, Y+2	; 0x02
     ff4:	8f 5b       	subi	r24, 0xBF	; 191
     ff6:	9f 4f       	sbci	r25, 0xFF	; 255
     ff8:	fc 01       	movw	r30, r24
     ffa:	80 81       	ld	r24, Z
     ffc:	28 2f       	mov	r18, r24
     ffe:	30 e0       	ldi	r19, 0x00	; 0
    1000:	89 81       	ldd	r24, Y+1	; 0x01
    1002:	9a 81       	ldd	r25, Y+2	; 0x02
    1004:	80 5c       	subi	r24, 0xC0	; 192
    1006:	9f 4f       	sbci	r25, 0xFF	; 255
    1008:	fc 01       	movw	r30, r24
    100a:	80 81       	ld	r24, Z
    100c:	88 2f       	mov	r24, r24
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	43 2f       	mov	r20, r19
    1012:	4f 93       	push	r20
    1014:	2f 93       	push	r18
    1016:	29 2f       	mov	r18, r25
    1018:	2f 93       	push	r18
    101a:	8f 93       	push	r24
    101c:	8f ee       	ldi	r24, 0xEF	; 239
    101e:	92 e0       	ldi	r25, 0x02	; 2
    1020:	89 2f       	mov	r24, r25
    1022:	8f 93       	push	r24
    1024:	8f ee       	ldi	r24, 0xEF	; 239
    1026:	92 e0       	ldi	r25, 0x02	; 2
    1028:	8f 93       	push	r24
    102a:	bd d2       	rcall	.+1402   	; 0x15a6 <printf>
    102c:	0f 90       	pop	r0
    102e:	0f 90       	pop	r0
    1030:	0f 90       	pop	r0
    1032:	0f 90       	pop	r0
    1034:	0f 90       	pop	r0
    1036:	0f 90       	pop	r0
    1038:	80 e0       	ldi	r24, 0x00	; 0
    103a:	90 e0       	ldi	r25, 0x00	; 0
    103c:	05 c0       	rjmp	.+10     	; 0x1048 <UART_BufferGet+0x108>
    103e:	86 e0       	ldi	r24, 0x06	; 6
    1040:	93 e0       	ldi	r25, 0x03	; 3
    1042:	c4 d2       	rcall	.+1416   	; 0x15cc <puts>
    1044:	8f ef       	ldi	r24, 0xFF	; 255
    1046:	9f ef       	ldi	r25, 0xFF	; 255
    1048:	0f 90       	pop	r0
    104a:	0f 90       	pop	r0
    104c:	0f 90       	pop	r0
    104e:	0f 90       	pop	r0
    1050:	df 91       	pop	r29
    1052:	cf 91       	pop	r28
    1054:	08 95       	ret

00001056 <UART_BufferAvailable>:
    1056:	cf 93       	push	r28
    1058:	df 93       	push	r29
    105a:	00 d0       	rcall	.+0      	; 0x105c <UART_BufferAvailable+0x6>
    105c:	00 d0       	rcall	.+0      	; 0x105e <UART_BufferAvailable+0x8>
    105e:	cd b7       	in	r28, 0x3d	; 61
    1060:	de b7       	in	r29, 0x3e	; 62
    1062:	9c 83       	std	Y+4, r25	; 0x04
    1064:	8b 83       	std	Y+3, r24	; 0x03
    1066:	8b 81       	ldd	r24, Y+3	; 0x03
    1068:	9c 81       	ldd	r25, Y+4	; 0x04
    106a:	80 5c       	subi	r24, 0xC0	; 192
    106c:	9f 4f       	sbci	r25, 0xFF	; 255
    106e:	fc 01       	movw	r30, r24
    1070:	20 81       	ld	r18, Z
    1072:	8b 81       	ldd	r24, Y+3	; 0x03
    1074:	9c 81       	ldd	r25, Y+4	; 0x04
    1076:	8f 5b       	subi	r24, 0xBF	; 191
    1078:	9f 4f       	sbci	r25, 0xFF	; 255
    107a:	fc 01       	movw	r30, r24
    107c:	80 81       	ld	r24, Z
    107e:	28 17       	cp	r18, r24
    1080:	a8 f0       	brcs	.+42     	; 0x10ac <UART_BufferAvailable+0x56>
    1082:	8b 81       	ldd	r24, Y+3	; 0x03
    1084:	9c 81       	ldd	r25, Y+4	; 0x04
    1086:	80 5c       	subi	r24, 0xC0	; 192
    1088:	9f 4f       	sbci	r25, 0xFF	; 255
    108a:	fc 01       	movw	r30, r24
    108c:	80 81       	ld	r24, Z
    108e:	28 2f       	mov	r18, r24
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	8b 81       	ldd	r24, Y+3	; 0x03
    1094:	9c 81       	ldd	r25, Y+4	; 0x04
    1096:	8f 5b       	subi	r24, 0xBF	; 191
    1098:	9f 4f       	sbci	r25, 0xFF	; 255
    109a:	fc 01       	movw	r30, r24
    109c:	80 81       	ld	r24, Z
    109e:	88 2f       	mov	r24, r24
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	a9 01       	movw	r20, r18
    10a4:	48 1b       	sub	r20, r24
    10a6:	59 0b       	sbc	r21, r25
    10a8:	ca 01       	movw	r24, r20
    10aa:	16 c0       	rjmp	.+44     	; 0x10d8 <UART_BufferAvailable+0x82>
    10ac:	8b 81       	ldd	r24, Y+3	; 0x03
    10ae:	9c 81       	ldd	r25, Y+4	; 0x04
    10b0:	8f 5b       	subi	r24, 0xBF	; 191
    10b2:	9f 4f       	sbci	r25, 0xFF	; 255
    10b4:	fc 01       	movw	r30, r24
    10b6:	80 81       	ld	r24, Z
    10b8:	88 2f       	mov	r24, r24
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	20 e4       	ldi	r18, 0x40	; 64
    10be:	30 e0       	ldi	r19, 0x00	; 0
    10c0:	28 1b       	sub	r18, r24
    10c2:	39 0b       	sbc	r19, r25
    10c4:	8b 81       	ldd	r24, Y+3	; 0x03
    10c6:	9c 81       	ldd	r25, Y+4	; 0x04
    10c8:	80 5c       	subi	r24, 0xC0	; 192
    10ca:	9f 4f       	sbci	r25, 0xFF	; 255
    10cc:	fc 01       	movw	r30, r24
    10ce:	80 81       	ld	r24, Z
    10d0:	88 2f       	mov	r24, r24
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	82 0f       	add	r24, r18
    10d6:	93 1f       	adc	r25, r19
    10d8:	9a 83       	std	Y+2, r25	; 0x02
    10da:	89 83       	std	Y+1, r24	; 0x01
    10dc:	8a 81       	ldd	r24, Y+2	; 0x02
    10de:	8f 93       	push	r24
    10e0:	89 81       	ldd	r24, Y+1	; 0x01
    10e2:	8f 93       	push	r24
    10e4:	87 e1       	ldi	r24, 0x17	; 23
    10e6:	93 e0       	ldi	r25, 0x03	; 3
    10e8:	89 2f       	mov	r24, r25
    10ea:	8f 93       	push	r24
    10ec:	87 e1       	ldi	r24, 0x17	; 23
    10ee:	93 e0       	ldi	r25, 0x03	; 3
    10f0:	8f 93       	push	r24
    10f2:	59 d2       	rcall	.+1202   	; 0x15a6 <printf>
    10f4:	0f 90       	pop	r0
    10f6:	0f 90       	pop	r0
    10f8:	0f 90       	pop	r0
    10fa:	0f 90       	pop	r0
    10fc:	89 81       	ldd	r24, Y+1	; 0x01
    10fe:	9a 81       	ldd	r25, Y+2	; 0x02
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	0f 90       	pop	r0
    1106:	0f 90       	pop	r0
    1108:	df 91       	pop	r29
    110a:	cf 91       	pop	r28
    110c:	08 95       	ret

0000110e <__vector_18>:


ISR(USART0_RX_vect) {
    110e:	1f 92       	push	r1
    1110:	0f 92       	push	r0
    1112:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    1116:	0f 92       	push	r0
    1118:	11 24       	eor	r1, r1
    111a:	2f 93       	push	r18
    111c:	3f 93       	push	r19
    111e:	4f 93       	push	r20
    1120:	5f 93       	push	r21
    1122:	6f 93       	push	r22
    1124:	7f 93       	push	r23
    1126:	8f 93       	push	r24
    1128:	9f 93       	push	r25
    112a:	af 93       	push	r26
    112c:	bf 93       	push	r27
    112e:	ef 93       	push	r30
    1130:	ff 93       	push	r31
    1132:	cf 93       	push	r28
    1134:	df 93       	push	r29
    1136:	1f 92       	push	r1
    1138:	cd b7       	in	r28, 0x3d	; 61
    113a:	de b7       	in	r29, 0x3e	; 62
	char ReceivedChar = UDR0;  // Read received character from USART0
    113c:	86 ec       	ldi	r24, 0xC6	; 198
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	fc 01       	movw	r30, r24
    1142:	80 81       	ld	r24, Z
    1144:	89 83       	std	Y+1, r24	; 0x01
	printf("ISR0 received: %c\n", ReceivedChar);  // Debug message
    1146:	89 81       	ldd	r24, Y+1	; 0x01
    1148:	88 2f       	mov	r24, r24
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	29 2f       	mov	r18, r25
    114e:	2f 93       	push	r18
    1150:	8f 93       	push	r24
    1152:	87 e9       	ldi	r24, 0x97	; 151
    1154:	93 e0       	ldi	r25, 0x03	; 3
    1156:	89 2f       	mov	r24, r25
    1158:	8f 93       	push	r24
    115a:	87 e9       	ldi	r24, 0x97	; 151
    115c:	93 e0       	ldi	r25, 0x03	; 3
    115e:	8f 93       	push	r24
    1160:	22 d2       	rcall	.+1092   	; 0x15a6 <printf>
    1162:	0f 90       	pop	r0
    1164:	0f 90       	pop	r0
    1166:	0f 90       	pop	r0
    1168:	0f 90       	pop	r0
	UART_BufferPut(&uart_rx_buffer, ReceivedChar);
    116a:	69 81       	ldd	r22, Y+1	; 0x01
    116c:	86 e6       	ldi	r24, 0x66	; 102
    116e:	94 e0       	ldi	r25, 0x04	; 4
    1170:	57 de       	rcall	.-850    	; 0xe20 <UART_BufferPut>
	if (callback_function_pointer != NULL) {
    1172:	80 91 aa 04 	lds	r24, 0x04AA	; 0x8004aa <callback_function_pointer>
    1176:	90 91 ab 04 	lds	r25, 0x04AB	; 0x8004ab <callback_function_pointer+0x1>
    117a:	89 2b       	or	r24, r25
    117c:	39 f0       	breq	.+14     	; 0x118c <__vector_18+0x7e>
		callback_function_pointer(ReceivedChar);
    117e:	20 91 aa 04 	lds	r18, 0x04AA	; 0x8004aa <callback_function_pointer>
    1182:	30 91 ab 04 	lds	r19, 0x04AB	; 0x8004ab <callback_function_pointer+0x1>
    1186:	89 81       	ldd	r24, Y+1	; 0x01
    1188:	f9 01       	movw	r30, r18
    118a:	09 95       	icall
	}
}
    118c:	00 00       	nop
    118e:	0f 90       	pop	r0
    1190:	df 91       	pop	r29
    1192:	cf 91       	pop	r28
    1194:	ff 91       	pop	r31
    1196:	ef 91       	pop	r30
    1198:	bf 91       	pop	r27
    119a:	af 91       	pop	r26
    119c:	9f 91       	pop	r25
    119e:	8f 91       	pop	r24
    11a0:	7f 91       	pop	r23
    11a2:	6f 91       	pop	r22
    11a4:	5f 91       	pop	r21
    11a6:	4f 91       	pop	r20
    11a8:	3f 91       	pop	r19
    11aa:	2f 91       	pop	r18
    11ac:	0f 90       	pop	r0
    11ae:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
    11b2:	0f 90       	pop	r0
    11b4:	1f 90       	pop	r1
    11b6:	18 95       	reti

000011b8 <RecieveCharacterFromUart>:
static uint8_t stringIndex = 0;

// UART buffer
extern UART_Buffer uart_rx_buffer;

void RecieveCharacterFromUart(char ReceivedCharacter) {
    11b8:	cf 93       	push	r28
    11ba:	df 93       	push	r29
    11bc:	1f 92       	push	r1
    11be:	cd b7       	in	r28, 0x3d	; 61
    11c0:	de b7       	in	r29, 0x3e	; 62
    11c2:	89 83       	std	Y+1, r24	; 0x01
	// Push character to buffer in ISR
	if (UART_BufferPut(&uart_rx_buffer, ReceivedCharacter) == 0) {
    11c4:	89 81       	ldd	r24, Y+1	; 0x01
    11c6:	88 2f       	mov	r24, r24
    11c8:	90 e0       	ldi	r25, 0x00	; 0
    11ca:	bc 01       	movw	r22, r24
    11cc:	86 e6       	ldi	r24, 0x66	; 102
    11ce:	94 e0       	ldi	r25, 0x04	; 4
    11d0:	27 de       	rcall	.-946    	; 0xe20 <UART_BufferPut>
		// Successfully inserted character into buffer
	}
}
    11d2:	00 00       	nop
    11d4:	0f 90       	pop	r0
    11d6:	df 91       	pop	r29
    11d8:	cf 91       	pop	r28
    11da:	08 95       	ret

000011dc <WriteReceivedCharacterFromUARTInDisplay>:

void WriteReceivedCharacterFromUARTInDisplay() {
    11dc:	cf 93       	push	r28
    11de:	df 93       	push	r29
    11e0:	cd b7       	in	r28, 0x3d	; 61
    11e2:	de b7       	in	r29, 0x3e	; 62
	// Update display with the string
	SSD1306_ClearScreen();
    11e4:	bd d9       	rcall	.-3206   	; 0x560 <SSD1306_ClearScreen>
	SSD1306_SetPosition(0, 0);
    11e6:	60 e0       	ldi	r22, 0x00	; 0
    11e8:	80 e0       	ldi	r24, 0x00	; 0
    11ea:	9f da       	rcall	.-2754   	; 0x72a <SSD1306_SetPosition>
	SSD1306_DrawString(recievedString, NORMAL);
    11ec:	60 e0       	ldi	r22, 0x00	; 0
    11ee:	8d e1       	ldi	r24, 0x1D	; 29
    11f0:	91 e0       	ldi	r25, 0x01	; 1
    11f2:	09 dc       	rcall	.-2030   	; 0xa06 <SSD1306_DrawString>
	SSD1306_UpdateScreen(I2C_Address);
    11f4:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_Address>
    11f8:	32 dc       	rcall	.-1948   	; 0xa5e <SSD1306_UpdateScreen>

	if (SSD1306_UpdateScreen(I2C_Address) == SSD1306_ERROR) {
    11fa:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_Address>
    11fe:	2f dc       	rcall	.-1954   	; 0xa5e <SSD1306_UpdateScreen>
    1200:	81 30       	cpi	r24, 0x01	; 1
    1202:	21 f4       	brne	.+8      	; 0x120c <WriteReceivedCharacterFromUARTInDisplay+0x30>
		printf("Error updating display.\n");
    1204:	80 ec       	ldi	r24, 0xC0	; 192
    1206:	93 e0       	ldi	r25, 0x03	; 3
    1208:	e1 d1       	rcall	.+962    	; 0x15cc <puts>
		} else {
		printf("Display updated successfully.\n");
	}
}
    120a:	03 c0       	rjmp	.+6      	; 0x1212 <WriteReceivedCharacterFromUARTInDisplay+0x36>
	SSD1306_UpdateScreen(I2C_Address);

	if (SSD1306_UpdateScreen(I2C_Address) == SSD1306_ERROR) {
		printf("Error updating display.\n");
		} else {
		printf("Display updated successfully.\n");
    120c:	88 ed       	ldi	r24, 0xD8	; 216
    120e:	93 e0       	ldi	r25, 0x03	; 3
    1210:	dd d1       	rcall	.+954    	; 0x15cc <puts>
    1212:	00 00       	nop
	}
}
    1214:	df 91       	pop	r29
    1216:	cf 91       	pop	r28
    1218:	08 95       	ret

0000121a <ProcessRecievedCharacters>:
    121a:	cf 93       	push	r28

void ProcessRecievedCharacters() {
    121c:	df 93       	push	r29
    121e:	1f 92       	push	r1
    1220:	cd b7       	in	r28, 0x3d	; 61
    1222:	de b7       	in	r29, 0x3e	; 62
	char recievedCharacter;

	//printf("Buffer available: %d\n", UART_BufferAvailable(&uart_rx_buffer));  // Debug buffer state

	if (UART_BufferAvailable(&uart_rx_buffer) > 0) {
    1224:	86 e6       	ldi	r24, 0x66	; 102
    1226:	94 e0       	ldi	r25, 0x04	; 4
    1228:	16 df       	rcall	.-468    	; 0x1056 <UART_BufferAvailable>
    122a:	18 16       	cp	r1, r24
    122c:	19 06       	cpc	r1, r25
    122e:	0c f0       	brlt	.+2      	; 0x1232 <ProcessRecievedCharacters+0x18>
    1230:	8b c0       	rjmp	.+278    	; 0x1348 <ProcessRecievedCharacters+0x12e>
		while (UART_BufferGet(&uart_rx_buffer, &recievedCharacter) == 0) {
    1232:	81 c0       	rjmp	.+258    	; 0x1336 <ProcessRecievedCharacters+0x11c>
			printf("Received character: %c\n", recievedCharacter);
    1234:	89 81       	ldd	r24, Y+1	; 0x01
    1236:	88 2f       	mov	r24, r24
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	29 2f       	mov	r18, r25
    123c:	2f 93       	push	r18
    123e:	8f 93       	push	r24
    1240:	86 ef       	ldi	r24, 0xF6	; 246
    1242:	93 e0       	ldi	r25, 0x03	; 3
    1244:	89 2f       	mov	r24, r25
    1246:	8f 93       	push	r24
    1248:	86 ef       	ldi	r24, 0xF6	; 246
    124a:	93 e0       	ldi	r25, 0x03	; 3
    124c:	8f 93       	push	r24
    124e:	ab d1       	rcall	.+854    	; 0x15a6 <printf>
    1250:	0f 90       	pop	r0
    1252:	0f 90       	pop	r0
    1254:	0f 90       	pop	r0
    1256:	0f 90       	pop	r0
			printf("String length: %d\n", stringIndex);  // Debug string length
    1258:	80 91 ad 04 	lds	r24, 0x04AD	; 0x8004ad <stringIndex>
    125c:	88 2f       	mov	r24, r24
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	29 2f       	mov	r18, r25
    1262:	2f 93       	push	r18
    1264:	8f 93       	push	r24
    1266:	8e e0       	ldi	r24, 0x0E	; 14
    1268:	94 e0       	ldi	r25, 0x04	; 4
    126a:	89 2f       	mov	r24, r25
    126c:	8f 93       	push	r24
    126e:	8e e0       	ldi	r24, 0x0E	; 14
    1270:	94 e0       	ldi	r25, 0x04	; 4
    1272:	8f 93       	push	r24
    1274:	98 d1       	rcall	.+816    	; 0x15a6 <printf>
    1276:	0f 90       	pop	r0
    1278:	0f 90       	pop	r0
    127a:	0f 90       	pop	r0
    127c:	0f 90       	pop	r0

			if (recievedCharacter == '\n' || stringIndex >= MAX_STRING_LENGHT - 1) {
    127e:	89 81       	ldd	r24, Y+1	; 0x01
    1280:	8a 30       	cpi	r24, 0x0A	; 10
    1282:	29 f0       	breq	.+10     	; 0x128e <ProcessRecievedCharacters+0x74>
    1284:	80 91 ad 04 	lds	r24, 0x04AD	; 0x8004ad <stringIndex>
    1288:	87 30       	cpi	r24, 0x07	; 7
    128a:	08 f4       	brcc	.+2      	; 0x128e <ProcessRecievedCharacters+0x74>
    128c:	47 c0       	rjmp	.+142    	; 0x131c <ProcessRecievedCharacters+0x102>
				recievedString[stringIndex] = '\0';  // Null-terminate string
    128e:	80 91 ad 04 	lds	r24, 0x04AD	; 0x8004ad <stringIndex>
    1292:	88 2f       	mov	r24, r24
    1294:	90 e0       	ldi	r25, 0x00	; 0
    1296:	83 5e       	subi	r24, 0xE3	; 227
    1298:	9e 4f       	sbci	r25, 0xFE	; 254
    129a:	fc 01       	movw	r30, r24
    129c:	10 82       	st	Z, r1
				printf("Final string: %s\n", recievedString);
    129e:	8d e1       	ldi	r24, 0x1D	; 29
    12a0:	91 e0       	ldi	r25, 0x01	; 1
    12a2:	89 2f       	mov	r24, r25
    12a4:	8f 93       	push	r24
    12a6:	8d e1       	ldi	r24, 0x1D	; 29
    12a8:	91 e0       	ldi	r25, 0x01	; 1
    12aa:	8f 93       	push	r24
    12ac:	81 e2       	ldi	r24, 0x21	; 33
    12ae:	94 e0       	ldi	r25, 0x04	; 4
    12b0:	89 2f       	mov	r24, r25
    12b2:	8f 93       	push	r24
    12b4:	81 e2       	ldi	r24, 0x21	; 33
    12b6:	94 e0       	ldi	r25, 0x04	; 4
    12b8:	8f 93       	push	r24
    12ba:	75 d1       	rcall	.+746    	; 0x15a6 <printf>
    12bc:	0f 90       	pop	r0
    12be:	0f 90       	pop	r0
    12c0:	0f 90       	pop	r0
    12c2:	0f 90       	pop	r0
				printf("String length before display: %d\n", stringIndex);
    12c4:	80 91 ad 04 	lds	r24, 0x04AD	; 0x8004ad <stringIndex>
    12c8:	88 2f       	mov	r24, r24
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	29 2f       	mov	r18, r25
    12ce:	2f 93       	push	r18
    12d0:	8f 93       	push	r24
    12d2:	83 e3       	ldi	r24, 0x33	; 51
    12d4:	94 e0       	ldi	r25, 0x04	; 4
    12d6:	89 2f       	mov	r24, r25
    12d8:	8f 93       	push	r24
    12da:	83 e3       	ldi	r24, 0x33	; 51
    12dc:	94 e0       	ldi	r25, 0x04	; 4
    12de:	8f 93       	push	r24
    12e0:	62 d1       	rcall	.+708    	; 0x15a6 <printf>
    12e2:	0f 90       	pop	r0
    12e4:	0f 90       	pop	r0
    12e6:	0f 90       	pop	r0

				WriteReceivedCharacterFromUARTInDisplay();  // Update display
    12e8:	0f 90       	pop	r0
    12ea:	78 df       	rcall	.-272    	; 0x11dc <WriteReceivedCharacterFromUARTInDisplay>

				stringIndex = 0;
    12ec:	10 92 ad 04 	sts	0x04AD, r1	; 0x8004ad <stringIndex>
				DisplayLineCounter = (DisplayLineCounter + 1) % 8;
    12f0:	80 91 ac 04 	lds	r24, 0x04AC	; 0x8004ac <DisplayLineCounter>
    12f4:	88 2f       	mov	r24, r24
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	01 96       	adiw	r24, 0x01	; 1
    12fa:	87 70       	andi	r24, 0x07	; 7
    12fc:	90 78       	andi	r25, 0x80	; 128
    12fe:	99 23       	and	r25, r25
    1300:	24 f4       	brge	.+8      	; 0x130a <ProcessRecievedCharacters+0xf0>
    1302:	01 97       	sbiw	r24, 0x01	; 1
    1304:	88 6f       	ori	r24, 0xF8	; 248
    1306:	9f 6f       	ori	r25, 0xFF	; 255
    1308:	01 96       	adiw	r24, 0x01	; 1
    130a:	80 93 ac 04 	sts	0x04AC, r24	; 0x8004ac <DisplayLineCounter>
				SSD1306_ClearScreen();
    130e:	28 d9       	rcall	.-3504   	; 0x560 <SSD1306_ClearScreen>
				SSD1306_SetPosition(0, DisplayLineCounter);
    1310:	80 91 ac 04 	lds	r24, 0x04AC	; 0x8004ac <DisplayLineCounter>
    1314:	68 2f       	mov	r22, r24
    1316:	80 e0       	ldi	r24, 0x00	; 0
    1318:	08 da       	rcall	.-3056   	; 0x72a <SSD1306_SetPosition>
    131a:	0d c0       	rjmp	.+26     	; 0x1336 <ProcessRecievedCharacters+0x11c>
    131c:	80 91 ad 04 	lds	r24, 0x04AD	; 0x8004ad <stringIndex>
				} else {
				recievedString[stringIndex++] = recievedCharacter;
    1320:	91 e0       	ldi	r25, 0x01	; 1
    1322:	98 0f       	add	r25, r24
    1324:	90 93 ad 04 	sts	0x04AD, r25	; 0x8004ad <stringIndex>
    1328:	88 2f       	mov	r24, r24
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	29 81       	ldd	r18, Y+1	; 0x01
    132e:	83 5e       	subi	r24, 0xE3	; 227
    1330:	9e 4f       	sbci	r25, 0xFE	; 254
    1332:	fc 01       	movw	r30, r24
    1334:	20 83       	st	Z, r18
	char recievedCharacter;

	//printf("Buffer available: %d\n", UART_BufferAvailable(&uart_rx_buffer));  // Debug buffer state

	if (UART_BufferAvailable(&uart_rx_buffer) > 0) {
		while (UART_BufferGet(&uart_rx_buffer, &recievedCharacter) == 0) {
    1336:	ce 01       	movw	r24, r28
    1338:	01 96       	adiw	r24, 0x01	; 1
    133a:	bc 01       	movw	r22, r24
    133c:	86 e6       	ldi	r24, 0x66	; 102
    133e:	94 e0       	ldi	r25, 0x04	; 4
    1340:	ff dd       	rcall	.-1026   	; 0xf40 <UART_BufferGet>
    1342:	89 2b       	or	r24, r25
    1344:	09 f4       	brne	.+2      	; 0x1348 <ProcessRecievedCharacters+0x12e>
    1346:	76 cf       	rjmp	.-276    	; 0x1234 <ProcessRecievedCharacters+0x1a>
    1348:	00 00       	nop
				} else {
				recievedString[stringIndex++] = recievedCharacter;
			}
		}
	}
}
    134a:	0f 90       	pop	r0
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	08 95       	ret

00001352 <main>:
    1352:	cf 93       	push	r28


int main(void) {
    1354:	df 93       	push	r29
    1356:	cd b7       	in	r28, 0x3d	; 61
    1358:	de b7       	in	r29, 0x3e	; 62
	RS232Init();
    135a:	e5 dc       	rcall	.-1590   	; 0xd26 <RS232Init>
	setupFunctionCallPointer(&RecieveCharacterFromUart);
    135c:	8c ed       	ldi	r24, 0xDC	; 220
    135e:	98 e0       	ldi	r25, 0x08	; 8
	Enable_UART_Receive_Interrupt();
    1360:	cf dc       	rcall	.-1634   	; 0xd00 <setupFunctionCallPointer>
	
	SSD1306_Init(I2C_Address);
    1362:	13 dd       	rcall	.-1498   	; 0xd8a <Enable_UART_Receive_Interrupt>
    1364:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_Address>
	SSD1306_ClearScreen();
    1368:	04 d8       	rcall	.-4088   	; 0x372 <SSD1306_Init>
	SSD1306_SetPosition(0, 0);
    136a:	fa d8       	rcall	.-3596   	; 0x560 <SSD1306_ClearScreen>
    136c:	60 e0       	ldi	r22, 0x00	; 0
    136e:	80 e0       	ldi	r24, 0x00	; 0
	SSD1306_DrawString("Test Message", NORMAL);
    1370:	dc d9       	rcall	.-3144   	; 0x72a <SSD1306_SetPosition>
    1372:	60 e0       	ldi	r22, 0x00	; 0
    1374:	85 e5       	ldi	r24, 0x55	; 85
    1376:	94 e0       	ldi	r25, 0x04	; 4
	SSD1306_UpdateScreen(I2C_Address);
    1378:	46 db       	rcall	.-2420   	; 0xa06 <SSD1306_DrawString>
    137a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_Address>


	sei();  // Enable global interrupts
    137e:	6f db       	rcall	.-2338   	; 0xa5e <SSD1306_UpdateScreen>

	uart_rx_buffer.head = 0;
    1380:	78 94       	sei
    1382:	10 92 a6 04 	sts	0x04A6, r1	; 0x8004a6 <uart_rx_buffer+0x40>
	uart_rx_buffer.tail = 0;
    1386:	10 92 a7 04 	sts	0x04A7, r1	; 0x8004a7 <uart_rx_buffer+0x41>

	while (1) {
		ProcessRecievedCharacters();  // Process received UART characters
    138a:	47 df       	rcall	.-370    	; 0x121a <ProcessRecievedCharacters>
	}
    138c:	fe cf       	rjmp	.-4      	; 0x138a <main+0x38>

0000138e <__cmpsf2>:
    138e:	2f d0       	rcall	.+94     	; 0x13ee <__fp_cmp>
    1390:	08 f4       	brcc	.+2      	; 0x1394 <__cmpsf2+0x6>
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	08 95       	ret

00001396 <__fixunssfsi>:
    1396:	57 d0       	rcall	.+174    	; 0x1446 <__fp_splitA>
    1398:	88 f0       	brcs	.+34     	; 0x13bc <__fixunssfsi+0x26>
    139a:	9f 57       	subi	r25, 0x7F	; 127
    139c:	90 f0       	brcs	.+36     	; 0x13c2 <__fixunssfsi+0x2c>
    139e:	b9 2f       	mov	r27, r25
    13a0:	99 27       	eor	r25, r25
    13a2:	b7 51       	subi	r27, 0x17	; 23
    13a4:	a0 f0       	brcs	.+40     	; 0x13ce <__fixunssfsi+0x38>
    13a6:	d1 f0       	breq	.+52     	; 0x13dc <__fixunssfsi+0x46>
    13a8:	66 0f       	add	r22, r22
    13aa:	77 1f       	adc	r23, r23
    13ac:	88 1f       	adc	r24, r24
    13ae:	99 1f       	adc	r25, r25
    13b0:	1a f0       	brmi	.+6      	; 0x13b8 <__fixunssfsi+0x22>
    13b2:	ba 95       	dec	r27
    13b4:	c9 f7       	brne	.-14     	; 0x13a8 <__fixunssfsi+0x12>
    13b6:	12 c0       	rjmp	.+36     	; 0x13dc <__fixunssfsi+0x46>
    13b8:	b1 30       	cpi	r27, 0x01	; 1
    13ba:	81 f0       	breq	.+32     	; 0x13dc <__fixunssfsi+0x46>
    13bc:	5e d0       	rcall	.+188    	; 0x147a <__fp_zero>
    13be:	b1 e0       	ldi	r27, 0x01	; 1
    13c0:	08 95       	ret
    13c2:	5b c0       	rjmp	.+182    	; 0x147a <__fp_zero>
    13c4:	67 2f       	mov	r22, r23
    13c6:	78 2f       	mov	r23, r24
    13c8:	88 27       	eor	r24, r24
    13ca:	b8 5f       	subi	r27, 0xF8	; 248
    13cc:	39 f0       	breq	.+14     	; 0x13dc <__fixunssfsi+0x46>
    13ce:	b9 3f       	cpi	r27, 0xF9	; 249
    13d0:	cc f3       	brlt	.-14     	; 0x13c4 <__fixunssfsi+0x2e>
    13d2:	86 95       	lsr	r24
    13d4:	77 95       	ror	r23
    13d6:	67 95       	ror	r22
    13d8:	b3 95       	inc	r27
    13da:	d9 f7       	brne	.-10     	; 0x13d2 <__fixunssfsi+0x3c>
    13dc:	3e f4       	brtc	.+14     	; 0x13ec <__fixunssfsi+0x56>
    13de:	90 95       	com	r25
    13e0:	80 95       	com	r24
    13e2:	70 95       	com	r23
    13e4:	61 95       	neg	r22
    13e6:	7f 4f       	sbci	r23, 0xFF	; 255
    13e8:	8f 4f       	sbci	r24, 0xFF	; 255
    13ea:	9f 4f       	sbci	r25, 0xFF	; 255
    13ec:	08 95       	ret

000013ee <__fp_cmp>:
    13ee:	99 0f       	add	r25, r25
    13f0:	00 08       	sbc	r0, r0
    13f2:	55 0f       	add	r21, r21
    13f4:	aa 0b       	sbc	r26, r26
    13f6:	e0 e8       	ldi	r30, 0x80	; 128
    13f8:	fe ef       	ldi	r31, 0xFE	; 254
    13fa:	16 16       	cp	r1, r22
    13fc:	17 06       	cpc	r1, r23
    13fe:	e8 07       	cpc	r30, r24
    1400:	f9 07       	cpc	r31, r25
    1402:	c0 f0       	brcs	.+48     	; 0x1434 <__fp_cmp+0x46>
    1404:	12 16       	cp	r1, r18
    1406:	13 06       	cpc	r1, r19
    1408:	e4 07       	cpc	r30, r20
    140a:	f5 07       	cpc	r31, r21
    140c:	98 f0       	brcs	.+38     	; 0x1434 <__fp_cmp+0x46>
    140e:	62 1b       	sub	r22, r18
    1410:	73 0b       	sbc	r23, r19
    1412:	84 0b       	sbc	r24, r20
    1414:	95 0b       	sbc	r25, r21
    1416:	39 f4       	brne	.+14     	; 0x1426 <__fp_cmp+0x38>
    1418:	0a 26       	eor	r0, r26
    141a:	61 f0       	breq	.+24     	; 0x1434 <__fp_cmp+0x46>
    141c:	23 2b       	or	r18, r19
    141e:	24 2b       	or	r18, r20
    1420:	25 2b       	or	r18, r21
    1422:	21 f4       	brne	.+8      	; 0x142c <__fp_cmp+0x3e>
    1424:	08 95       	ret
    1426:	0a 26       	eor	r0, r26
    1428:	09 f4       	brne	.+2      	; 0x142c <__fp_cmp+0x3e>
    142a:	a1 40       	sbci	r26, 0x01	; 1
    142c:	a6 95       	lsr	r26
    142e:	8f ef       	ldi	r24, 0xFF	; 255
    1430:	81 1d       	adc	r24, r1
    1432:	81 1d       	adc	r24, r1
    1434:	08 95       	ret

00001436 <__fp_split3>:
    1436:	57 fd       	sbrc	r21, 7
    1438:	90 58       	subi	r25, 0x80	; 128
    143a:	44 0f       	add	r20, r20
    143c:	55 1f       	adc	r21, r21
    143e:	59 f0       	breq	.+22     	; 0x1456 <__fp_splitA+0x10>
    1440:	5f 3f       	cpi	r21, 0xFF	; 255
    1442:	71 f0       	breq	.+28     	; 0x1460 <__fp_splitA+0x1a>
    1444:	47 95       	ror	r20

00001446 <__fp_splitA>:
    1446:	88 0f       	add	r24, r24
    1448:	97 fb       	bst	r25, 7
    144a:	99 1f       	adc	r25, r25
    144c:	61 f0       	breq	.+24     	; 0x1466 <__fp_splitA+0x20>
    144e:	9f 3f       	cpi	r25, 0xFF	; 255
    1450:	79 f0       	breq	.+30     	; 0x1470 <__fp_splitA+0x2a>
    1452:	87 95       	ror	r24
    1454:	08 95       	ret
    1456:	12 16       	cp	r1, r18
    1458:	13 06       	cpc	r1, r19
    145a:	14 06       	cpc	r1, r20
    145c:	55 1f       	adc	r21, r21
    145e:	f2 cf       	rjmp	.-28     	; 0x1444 <__fp_split3+0xe>
    1460:	46 95       	lsr	r20
    1462:	f1 df       	rcall	.-30     	; 0x1446 <__fp_splitA>
    1464:	08 c0       	rjmp	.+16     	; 0x1476 <__fp_splitA+0x30>
    1466:	16 16       	cp	r1, r22
    1468:	17 06       	cpc	r1, r23
    146a:	18 06       	cpc	r1, r24
    146c:	99 1f       	adc	r25, r25
    146e:	f1 cf       	rjmp	.-30     	; 0x1452 <__fp_splitA+0xc>
    1470:	86 95       	lsr	r24
    1472:	71 05       	cpc	r23, r1
    1474:	61 05       	cpc	r22, r1
    1476:	08 94       	sec
    1478:	08 95       	ret

0000147a <__fp_zero>:
    147a:	e8 94       	clt

0000147c <__fp_szero>:
    147c:	bb 27       	eor	r27, r27
    147e:	66 27       	eor	r22, r22
    1480:	77 27       	eor	r23, r23
    1482:	cb 01       	movw	r24, r22
    1484:	97 f9       	bld	r25, 7
    1486:	08 95       	ret

00001488 <__gesf2>:
    1488:	b2 df       	rcall	.-156    	; 0x13ee <__fp_cmp>
    148a:	08 f4       	brcc	.+2      	; 0x148e <__gesf2+0x6>
    148c:	8f ef       	ldi	r24, 0xFF	; 255
    148e:	08 95       	ret

00001490 <__mulsf3>:
    1490:	0b d0       	rcall	.+22     	; 0x14a8 <__mulsf3x>
    1492:	78 c0       	rjmp	.+240    	; 0x1584 <__fp_round>
    1494:	69 d0       	rcall	.+210    	; 0x1568 <__fp_pscA>
    1496:	28 f0       	brcs	.+10     	; 0x14a2 <__mulsf3+0x12>
    1498:	6e d0       	rcall	.+220    	; 0x1576 <__fp_pscB>
    149a:	18 f0       	brcs	.+6      	; 0x14a2 <__mulsf3+0x12>
    149c:	95 23       	and	r25, r21
    149e:	09 f0       	breq	.+2      	; 0x14a2 <__mulsf3+0x12>
    14a0:	5a c0       	rjmp	.+180    	; 0x1556 <__fp_inf>
    14a2:	5f c0       	rjmp	.+190    	; 0x1562 <__fp_nan>
    14a4:	11 24       	eor	r1, r1
    14a6:	ea cf       	rjmp	.-44     	; 0x147c <__fp_szero>

000014a8 <__mulsf3x>:
    14a8:	c6 df       	rcall	.-116    	; 0x1436 <__fp_split3>
    14aa:	a0 f3       	brcs	.-24     	; 0x1494 <__mulsf3+0x4>

000014ac <__mulsf3_pse>:
    14ac:	95 9f       	mul	r25, r21
    14ae:	d1 f3       	breq	.-12     	; 0x14a4 <__mulsf3+0x14>
    14b0:	95 0f       	add	r25, r21
    14b2:	50 e0       	ldi	r21, 0x00	; 0
    14b4:	55 1f       	adc	r21, r21
    14b6:	62 9f       	mul	r22, r18
    14b8:	f0 01       	movw	r30, r0
    14ba:	72 9f       	mul	r23, r18
    14bc:	bb 27       	eor	r27, r27
    14be:	f0 0d       	add	r31, r0
    14c0:	b1 1d       	adc	r27, r1
    14c2:	63 9f       	mul	r22, r19
    14c4:	aa 27       	eor	r26, r26
    14c6:	f0 0d       	add	r31, r0
    14c8:	b1 1d       	adc	r27, r1
    14ca:	aa 1f       	adc	r26, r26
    14cc:	64 9f       	mul	r22, r20
    14ce:	66 27       	eor	r22, r22
    14d0:	b0 0d       	add	r27, r0
    14d2:	a1 1d       	adc	r26, r1
    14d4:	66 1f       	adc	r22, r22
    14d6:	82 9f       	mul	r24, r18
    14d8:	22 27       	eor	r18, r18
    14da:	b0 0d       	add	r27, r0
    14dc:	a1 1d       	adc	r26, r1
    14de:	62 1f       	adc	r22, r18
    14e0:	73 9f       	mul	r23, r19
    14e2:	b0 0d       	add	r27, r0
    14e4:	a1 1d       	adc	r26, r1
    14e6:	62 1f       	adc	r22, r18
    14e8:	83 9f       	mul	r24, r19
    14ea:	a0 0d       	add	r26, r0
    14ec:	61 1d       	adc	r22, r1
    14ee:	22 1f       	adc	r18, r18
    14f0:	74 9f       	mul	r23, r20
    14f2:	33 27       	eor	r19, r19
    14f4:	a0 0d       	add	r26, r0
    14f6:	61 1d       	adc	r22, r1
    14f8:	23 1f       	adc	r18, r19
    14fa:	84 9f       	mul	r24, r20
    14fc:	60 0d       	add	r22, r0
    14fe:	21 1d       	adc	r18, r1
    1500:	82 2f       	mov	r24, r18
    1502:	76 2f       	mov	r23, r22
    1504:	6a 2f       	mov	r22, r26
    1506:	11 24       	eor	r1, r1
    1508:	9f 57       	subi	r25, 0x7F	; 127
    150a:	50 40       	sbci	r21, 0x00	; 0
    150c:	8a f0       	brmi	.+34     	; 0x1530 <__mulsf3_pse+0x84>
    150e:	e1 f0       	breq	.+56     	; 0x1548 <__mulsf3_pse+0x9c>
    1510:	88 23       	and	r24, r24
    1512:	4a f0       	brmi	.+18     	; 0x1526 <__mulsf3_pse+0x7a>
    1514:	ee 0f       	add	r30, r30
    1516:	ff 1f       	adc	r31, r31
    1518:	bb 1f       	adc	r27, r27
    151a:	66 1f       	adc	r22, r22
    151c:	77 1f       	adc	r23, r23
    151e:	88 1f       	adc	r24, r24
    1520:	91 50       	subi	r25, 0x01	; 1
    1522:	50 40       	sbci	r21, 0x00	; 0
    1524:	a9 f7       	brne	.-22     	; 0x1510 <__mulsf3_pse+0x64>
    1526:	9e 3f       	cpi	r25, 0xFE	; 254
    1528:	51 05       	cpc	r21, r1
    152a:	70 f0       	brcs	.+28     	; 0x1548 <__mulsf3_pse+0x9c>
    152c:	14 c0       	rjmp	.+40     	; 0x1556 <__fp_inf>
    152e:	a6 cf       	rjmp	.-180    	; 0x147c <__fp_szero>
    1530:	5f 3f       	cpi	r21, 0xFF	; 255
    1532:	ec f3       	brlt	.-6      	; 0x152e <__mulsf3_pse+0x82>
    1534:	98 3e       	cpi	r25, 0xE8	; 232
    1536:	dc f3       	brlt	.-10     	; 0x152e <__mulsf3_pse+0x82>
    1538:	86 95       	lsr	r24
    153a:	77 95       	ror	r23
    153c:	67 95       	ror	r22
    153e:	b7 95       	ror	r27
    1540:	f7 95       	ror	r31
    1542:	e7 95       	ror	r30
    1544:	9f 5f       	subi	r25, 0xFF	; 255
    1546:	c1 f7       	brne	.-16     	; 0x1538 <__mulsf3_pse+0x8c>
    1548:	fe 2b       	or	r31, r30
    154a:	88 0f       	add	r24, r24
    154c:	91 1d       	adc	r25, r1
    154e:	96 95       	lsr	r25
    1550:	87 95       	ror	r24
    1552:	97 f9       	bld	r25, 7
    1554:	08 95       	ret

00001556 <__fp_inf>:
    1556:	97 f9       	bld	r25, 7
    1558:	9f 67       	ori	r25, 0x7F	; 127
    155a:	80 e8       	ldi	r24, 0x80	; 128
    155c:	70 e0       	ldi	r23, 0x00	; 0
    155e:	60 e0       	ldi	r22, 0x00	; 0
    1560:	08 95       	ret

00001562 <__fp_nan>:
    1562:	9f ef       	ldi	r25, 0xFF	; 255
    1564:	80 ec       	ldi	r24, 0xC0	; 192
    1566:	08 95       	ret

00001568 <__fp_pscA>:
    1568:	00 24       	eor	r0, r0
    156a:	0a 94       	dec	r0
    156c:	16 16       	cp	r1, r22
    156e:	17 06       	cpc	r1, r23
    1570:	18 06       	cpc	r1, r24
    1572:	09 06       	cpc	r0, r25
    1574:	08 95       	ret

00001576 <__fp_pscB>:
    1576:	00 24       	eor	r0, r0
    1578:	0a 94       	dec	r0
    157a:	12 16       	cp	r1, r18
    157c:	13 06       	cpc	r1, r19
    157e:	14 06       	cpc	r1, r20
    1580:	05 06       	cpc	r0, r21
    1582:	08 95       	ret

00001584 <__fp_round>:
    1584:	09 2e       	mov	r0, r25
    1586:	03 94       	inc	r0
    1588:	00 0c       	add	r0, r0
    158a:	11 f4       	brne	.+4      	; 0x1590 <__fp_round+0xc>
    158c:	88 23       	and	r24, r24
    158e:	52 f0       	brmi	.+20     	; 0x15a4 <__fp_round+0x20>
    1590:	bb 0f       	add	r27, r27
    1592:	40 f4       	brcc	.+16     	; 0x15a4 <__fp_round+0x20>
    1594:	bf 2b       	or	r27, r31
    1596:	11 f4       	brne	.+4      	; 0x159c <__fp_round+0x18>
    1598:	60 ff       	sbrs	r22, 0
    159a:	04 c0       	rjmp	.+8      	; 0x15a4 <__fp_round+0x20>
    159c:	6f 5f       	subi	r22, 0xFF	; 255
    159e:	7f 4f       	sbci	r23, 0xFF	; 255
    15a0:	8f 4f       	sbci	r24, 0xFF	; 255
    15a2:	9f 4f       	sbci	r25, 0xFF	; 255
    15a4:	08 95       	ret

000015a6 <printf>:
    15a6:	a0 e0       	ldi	r26, 0x00	; 0
    15a8:	b0 e0       	ldi	r27, 0x00	; 0
    15aa:	e8 ed       	ldi	r30, 0xD8	; 216
    15ac:	fa e0       	ldi	r31, 0x0A	; 10
    15ae:	d0 c2       	rjmp	.+1440   	; 0x1b50 <__prologue_saves__+0x20>
    15b0:	ae 01       	movw	r20, r28
    15b2:	4b 5f       	subi	r20, 0xFB	; 251
    15b4:	5f 4f       	sbci	r21, 0xFF	; 255
    15b6:	fa 01       	movw	r30, r20
    15b8:	61 91       	ld	r22, Z+
    15ba:	71 91       	ld	r23, Z+
    15bc:	af 01       	movw	r20, r30
    15be:	80 91 b0 04 	lds	r24, 0x04B0	; 0x8004b0 <__iob+0x2>
    15c2:	90 91 b1 04 	lds	r25, 0x04B1	; 0x8004b1 <__iob+0x3>
    15c6:	32 d0       	rcall	.+100    	; 0x162c <vfprintf>
    15c8:	e2 e0       	ldi	r30, 0x02	; 2
    15ca:	de c2       	rjmp	.+1468   	; 0x1b88 <__epilogue_restores__+0x20>

000015cc <puts>:
    15cc:	0f 93       	push	r16
    15ce:	1f 93       	push	r17
    15d0:	cf 93       	push	r28
    15d2:	df 93       	push	r29
    15d4:	e0 91 b0 04 	lds	r30, 0x04B0	; 0x8004b0 <__iob+0x2>
    15d8:	f0 91 b1 04 	lds	r31, 0x04B1	; 0x8004b1 <__iob+0x3>
    15dc:	23 81       	ldd	r18, Z+3	; 0x03
    15de:	21 ff       	sbrs	r18, 1
    15e0:	1b c0       	rjmp	.+54     	; 0x1618 <puts+0x4c>
    15e2:	8c 01       	movw	r16, r24
    15e4:	d0 e0       	ldi	r29, 0x00	; 0
    15e6:	c0 e0       	ldi	r28, 0x00	; 0
    15e8:	f8 01       	movw	r30, r16
    15ea:	81 91       	ld	r24, Z+
    15ec:	8f 01       	movw	r16, r30
    15ee:	60 91 b0 04 	lds	r22, 0x04B0	; 0x8004b0 <__iob+0x2>
    15f2:	70 91 b1 04 	lds	r23, 0x04B1	; 0x8004b1 <__iob+0x3>
    15f6:	db 01       	movw	r26, r22
    15f8:	18 96       	adiw	r26, 0x08	; 8
    15fa:	ed 91       	ld	r30, X+
    15fc:	fc 91       	ld	r31, X
    15fe:	19 97       	sbiw	r26, 0x09	; 9
    1600:	88 23       	and	r24, r24
    1602:	31 f0       	breq	.+12     	; 0x1610 <puts+0x44>
    1604:	09 95       	icall
    1606:	89 2b       	or	r24, r25
    1608:	79 f3       	breq	.-34     	; 0x15e8 <puts+0x1c>
    160a:	df ef       	ldi	r29, 0xFF	; 255
    160c:	cf ef       	ldi	r28, 0xFF	; 255
    160e:	ec cf       	rjmp	.-40     	; 0x15e8 <puts+0x1c>
    1610:	8a e0       	ldi	r24, 0x0A	; 10
    1612:	09 95       	icall
    1614:	89 2b       	or	r24, r25
    1616:	19 f0       	breq	.+6      	; 0x161e <puts+0x52>
    1618:	8f ef       	ldi	r24, 0xFF	; 255
    161a:	9f ef       	ldi	r25, 0xFF	; 255
    161c:	02 c0       	rjmp	.+4      	; 0x1622 <puts+0x56>
    161e:	8d 2f       	mov	r24, r29
    1620:	9c 2f       	mov	r25, r28
    1622:	df 91       	pop	r29
    1624:	cf 91       	pop	r28
    1626:	1f 91       	pop	r17
    1628:	0f 91       	pop	r16
    162a:	08 95       	ret

0000162c <vfprintf>:
    162c:	ab e0       	ldi	r26, 0x0B	; 11
    162e:	b0 e0       	ldi	r27, 0x00	; 0
    1630:	eb e1       	ldi	r30, 0x1B	; 27
    1632:	fb e0       	ldi	r31, 0x0B	; 11
    1634:	7d c2       	rjmp	.+1274   	; 0x1b30 <__prologue_saves__>
    1636:	6c 01       	movw	r12, r24
    1638:	7b 01       	movw	r14, r22
    163a:	8a 01       	movw	r16, r20
    163c:	fc 01       	movw	r30, r24
    163e:	17 82       	std	Z+7, r1	; 0x07
    1640:	16 82       	std	Z+6, r1	; 0x06
    1642:	83 81       	ldd	r24, Z+3	; 0x03
    1644:	81 ff       	sbrs	r24, 1
    1646:	bf c1       	rjmp	.+894    	; 0x19c6 <vfprintf+0x39a>
    1648:	ce 01       	movw	r24, r28
    164a:	01 96       	adiw	r24, 0x01	; 1
    164c:	3c 01       	movw	r6, r24
    164e:	f6 01       	movw	r30, r12
    1650:	93 81       	ldd	r25, Z+3	; 0x03
    1652:	f7 01       	movw	r30, r14
    1654:	93 fd       	sbrc	r25, 3
    1656:	85 91       	lpm	r24, Z+
    1658:	93 ff       	sbrs	r25, 3
    165a:	81 91       	ld	r24, Z+
    165c:	7f 01       	movw	r14, r30
    165e:	88 23       	and	r24, r24
    1660:	09 f4       	brne	.+2      	; 0x1664 <vfprintf+0x38>
    1662:	ad c1       	rjmp	.+858    	; 0x19be <vfprintf+0x392>
    1664:	85 32       	cpi	r24, 0x25	; 37
    1666:	39 f4       	brne	.+14     	; 0x1676 <vfprintf+0x4a>
    1668:	93 fd       	sbrc	r25, 3
    166a:	85 91       	lpm	r24, Z+
    166c:	93 ff       	sbrs	r25, 3
    166e:	81 91       	ld	r24, Z+
    1670:	7f 01       	movw	r14, r30
    1672:	85 32       	cpi	r24, 0x25	; 37
    1674:	21 f4       	brne	.+8      	; 0x167e <vfprintf+0x52>
    1676:	b6 01       	movw	r22, r12
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	c0 d1       	rcall	.+896    	; 0x19fc <fputc>
    167c:	e8 cf       	rjmp	.-48     	; 0x164e <vfprintf+0x22>
    167e:	91 2c       	mov	r9, r1
    1680:	21 2c       	mov	r2, r1
    1682:	31 2c       	mov	r3, r1
    1684:	ff e1       	ldi	r31, 0x1F	; 31
    1686:	f3 15       	cp	r31, r3
    1688:	d8 f0       	brcs	.+54     	; 0x16c0 <vfprintf+0x94>
    168a:	8b 32       	cpi	r24, 0x2B	; 43
    168c:	79 f0       	breq	.+30     	; 0x16ac <vfprintf+0x80>
    168e:	38 f4       	brcc	.+14     	; 0x169e <vfprintf+0x72>
    1690:	80 32       	cpi	r24, 0x20	; 32
    1692:	79 f0       	breq	.+30     	; 0x16b2 <vfprintf+0x86>
    1694:	83 32       	cpi	r24, 0x23	; 35
    1696:	a1 f4       	brne	.+40     	; 0x16c0 <vfprintf+0x94>
    1698:	23 2d       	mov	r18, r3
    169a:	20 61       	ori	r18, 0x10	; 16
    169c:	1d c0       	rjmp	.+58     	; 0x16d8 <vfprintf+0xac>
    169e:	8d 32       	cpi	r24, 0x2D	; 45
    16a0:	61 f0       	breq	.+24     	; 0x16ba <vfprintf+0x8e>
    16a2:	80 33       	cpi	r24, 0x30	; 48
    16a4:	69 f4       	brne	.+26     	; 0x16c0 <vfprintf+0x94>
    16a6:	23 2d       	mov	r18, r3
    16a8:	21 60       	ori	r18, 0x01	; 1
    16aa:	16 c0       	rjmp	.+44     	; 0x16d8 <vfprintf+0xac>
    16ac:	83 2d       	mov	r24, r3
    16ae:	82 60       	ori	r24, 0x02	; 2
    16b0:	38 2e       	mov	r3, r24
    16b2:	e3 2d       	mov	r30, r3
    16b4:	e4 60       	ori	r30, 0x04	; 4
    16b6:	3e 2e       	mov	r3, r30
    16b8:	2a c0       	rjmp	.+84     	; 0x170e <vfprintf+0xe2>
    16ba:	f3 2d       	mov	r31, r3
    16bc:	f8 60       	ori	r31, 0x08	; 8
    16be:	1d c0       	rjmp	.+58     	; 0x16fa <vfprintf+0xce>
    16c0:	37 fc       	sbrc	r3, 7
    16c2:	2d c0       	rjmp	.+90     	; 0x171e <vfprintf+0xf2>
    16c4:	20 ed       	ldi	r18, 0xD0	; 208
    16c6:	28 0f       	add	r18, r24
    16c8:	2a 30       	cpi	r18, 0x0A	; 10
    16ca:	40 f0       	brcs	.+16     	; 0x16dc <vfprintf+0xb0>
    16cc:	8e 32       	cpi	r24, 0x2E	; 46
    16ce:	b9 f4       	brne	.+46     	; 0x16fe <vfprintf+0xd2>
    16d0:	36 fc       	sbrc	r3, 6
    16d2:	75 c1       	rjmp	.+746    	; 0x19be <vfprintf+0x392>
    16d4:	23 2d       	mov	r18, r3
    16d6:	20 64       	ori	r18, 0x40	; 64
    16d8:	32 2e       	mov	r3, r18
    16da:	19 c0       	rjmp	.+50     	; 0x170e <vfprintf+0xe2>
    16dc:	36 fe       	sbrs	r3, 6
    16de:	06 c0       	rjmp	.+12     	; 0x16ec <vfprintf+0xc0>
    16e0:	8a e0       	ldi	r24, 0x0A	; 10
    16e2:	98 9e       	mul	r9, r24
    16e4:	20 0d       	add	r18, r0
    16e6:	11 24       	eor	r1, r1
    16e8:	92 2e       	mov	r9, r18
    16ea:	11 c0       	rjmp	.+34     	; 0x170e <vfprintf+0xe2>
    16ec:	ea e0       	ldi	r30, 0x0A	; 10
    16ee:	2e 9e       	mul	r2, r30
    16f0:	20 0d       	add	r18, r0
    16f2:	11 24       	eor	r1, r1
    16f4:	22 2e       	mov	r2, r18
    16f6:	f3 2d       	mov	r31, r3
    16f8:	f0 62       	ori	r31, 0x20	; 32
    16fa:	3f 2e       	mov	r3, r31
    16fc:	08 c0       	rjmp	.+16     	; 0x170e <vfprintf+0xe2>
    16fe:	8c 36       	cpi	r24, 0x6C	; 108
    1700:	21 f4       	brne	.+8      	; 0x170a <vfprintf+0xde>
    1702:	83 2d       	mov	r24, r3
    1704:	80 68       	ori	r24, 0x80	; 128
    1706:	38 2e       	mov	r3, r24
    1708:	02 c0       	rjmp	.+4      	; 0x170e <vfprintf+0xe2>
    170a:	88 36       	cpi	r24, 0x68	; 104
    170c:	41 f4       	brne	.+16     	; 0x171e <vfprintf+0xf2>
    170e:	f7 01       	movw	r30, r14
    1710:	93 fd       	sbrc	r25, 3
    1712:	85 91       	lpm	r24, Z+
    1714:	93 ff       	sbrs	r25, 3
    1716:	81 91       	ld	r24, Z+
    1718:	7f 01       	movw	r14, r30
    171a:	81 11       	cpse	r24, r1
    171c:	b3 cf       	rjmp	.-154    	; 0x1684 <vfprintf+0x58>
    171e:	98 2f       	mov	r25, r24
    1720:	9f 7d       	andi	r25, 0xDF	; 223
    1722:	95 54       	subi	r25, 0x45	; 69
    1724:	93 30       	cpi	r25, 0x03	; 3
    1726:	28 f4       	brcc	.+10     	; 0x1732 <vfprintf+0x106>
    1728:	0c 5f       	subi	r16, 0xFC	; 252
    172a:	1f 4f       	sbci	r17, 0xFF	; 255
    172c:	9f e3       	ldi	r25, 0x3F	; 63
    172e:	99 83       	std	Y+1, r25	; 0x01
    1730:	0d c0       	rjmp	.+26     	; 0x174c <vfprintf+0x120>
    1732:	83 36       	cpi	r24, 0x63	; 99
    1734:	31 f0       	breq	.+12     	; 0x1742 <vfprintf+0x116>
    1736:	83 37       	cpi	r24, 0x73	; 115
    1738:	71 f0       	breq	.+28     	; 0x1756 <vfprintf+0x12a>
    173a:	83 35       	cpi	r24, 0x53	; 83
    173c:	09 f0       	breq	.+2      	; 0x1740 <vfprintf+0x114>
    173e:	55 c0       	rjmp	.+170    	; 0x17ea <vfprintf+0x1be>
    1740:	20 c0       	rjmp	.+64     	; 0x1782 <vfprintf+0x156>
    1742:	f8 01       	movw	r30, r16
    1744:	80 81       	ld	r24, Z
    1746:	89 83       	std	Y+1, r24	; 0x01
    1748:	0e 5f       	subi	r16, 0xFE	; 254
    174a:	1f 4f       	sbci	r17, 0xFF	; 255
    174c:	88 24       	eor	r8, r8
    174e:	83 94       	inc	r8
    1750:	91 2c       	mov	r9, r1
    1752:	53 01       	movw	r10, r6
    1754:	12 c0       	rjmp	.+36     	; 0x177a <vfprintf+0x14e>
    1756:	28 01       	movw	r4, r16
    1758:	f2 e0       	ldi	r31, 0x02	; 2
    175a:	4f 0e       	add	r4, r31
    175c:	51 1c       	adc	r5, r1
    175e:	f8 01       	movw	r30, r16
    1760:	a0 80       	ld	r10, Z
    1762:	b1 80       	ldd	r11, Z+1	; 0x01
    1764:	36 fe       	sbrs	r3, 6
    1766:	03 c0       	rjmp	.+6      	; 0x176e <vfprintf+0x142>
    1768:	69 2d       	mov	r22, r9
    176a:	70 e0       	ldi	r23, 0x00	; 0
    176c:	02 c0       	rjmp	.+4      	; 0x1772 <vfprintf+0x146>
    176e:	6f ef       	ldi	r22, 0xFF	; 255
    1770:	7f ef       	ldi	r23, 0xFF	; 255
    1772:	c5 01       	movw	r24, r10
    1774:	38 d1       	rcall	.+624    	; 0x19e6 <strnlen>
    1776:	4c 01       	movw	r8, r24
    1778:	82 01       	movw	r16, r4
    177a:	f3 2d       	mov	r31, r3
    177c:	ff 77       	andi	r31, 0x7F	; 127
    177e:	3f 2e       	mov	r3, r31
    1780:	15 c0       	rjmp	.+42     	; 0x17ac <vfprintf+0x180>
    1782:	28 01       	movw	r4, r16
    1784:	22 e0       	ldi	r18, 0x02	; 2
    1786:	42 0e       	add	r4, r18
    1788:	51 1c       	adc	r5, r1
    178a:	f8 01       	movw	r30, r16
    178c:	a0 80       	ld	r10, Z
    178e:	b1 80       	ldd	r11, Z+1	; 0x01
    1790:	36 fe       	sbrs	r3, 6
    1792:	03 c0       	rjmp	.+6      	; 0x179a <vfprintf+0x16e>
    1794:	69 2d       	mov	r22, r9
    1796:	70 e0       	ldi	r23, 0x00	; 0
    1798:	02 c0       	rjmp	.+4      	; 0x179e <vfprintf+0x172>
    179a:	6f ef       	ldi	r22, 0xFF	; 255
    179c:	7f ef       	ldi	r23, 0xFF	; 255
    179e:	c5 01       	movw	r24, r10
    17a0:	17 d1       	rcall	.+558    	; 0x19d0 <strnlen_P>
    17a2:	4c 01       	movw	r8, r24
    17a4:	f3 2d       	mov	r31, r3
    17a6:	f0 68       	ori	r31, 0x80	; 128
    17a8:	3f 2e       	mov	r3, r31
    17aa:	82 01       	movw	r16, r4
    17ac:	33 fc       	sbrc	r3, 3
    17ae:	19 c0       	rjmp	.+50     	; 0x17e2 <vfprintf+0x1b6>
    17b0:	82 2d       	mov	r24, r2
    17b2:	90 e0       	ldi	r25, 0x00	; 0
    17b4:	88 16       	cp	r8, r24
    17b6:	99 06       	cpc	r9, r25
    17b8:	a0 f4       	brcc	.+40     	; 0x17e2 <vfprintf+0x1b6>
    17ba:	b6 01       	movw	r22, r12
    17bc:	80 e2       	ldi	r24, 0x20	; 32
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	1d d1       	rcall	.+570    	; 0x19fc <fputc>
    17c2:	2a 94       	dec	r2
    17c4:	f5 cf       	rjmp	.-22     	; 0x17b0 <vfprintf+0x184>
    17c6:	f5 01       	movw	r30, r10
    17c8:	37 fc       	sbrc	r3, 7
    17ca:	85 91       	lpm	r24, Z+
    17cc:	37 fe       	sbrs	r3, 7
    17ce:	81 91       	ld	r24, Z+
    17d0:	5f 01       	movw	r10, r30
    17d2:	b6 01       	movw	r22, r12
    17d4:	90 e0       	ldi	r25, 0x00	; 0
    17d6:	12 d1       	rcall	.+548    	; 0x19fc <fputc>
    17d8:	21 10       	cpse	r2, r1
    17da:	2a 94       	dec	r2
    17dc:	21 e0       	ldi	r18, 0x01	; 1
    17de:	82 1a       	sub	r8, r18
    17e0:	91 08       	sbc	r9, r1
    17e2:	81 14       	cp	r8, r1
    17e4:	91 04       	cpc	r9, r1
    17e6:	79 f7       	brne	.-34     	; 0x17c6 <vfprintf+0x19a>
    17e8:	e1 c0       	rjmp	.+450    	; 0x19ac <vfprintf+0x380>
    17ea:	84 36       	cpi	r24, 0x64	; 100
    17ec:	11 f0       	breq	.+4      	; 0x17f2 <vfprintf+0x1c6>
    17ee:	89 36       	cpi	r24, 0x69	; 105
    17f0:	39 f5       	brne	.+78     	; 0x1840 <vfprintf+0x214>
    17f2:	f8 01       	movw	r30, r16
    17f4:	37 fe       	sbrs	r3, 7
    17f6:	07 c0       	rjmp	.+14     	; 0x1806 <vfprintf+0x1da>
    17f8:	60 81       	ld	r22, Z
    17fa:	71 81       	ldd	r23, Z+1	; 0x01
    17fc:	82 81       	ldd	r24, Z+2	; 0x02
    17fe:	93 81       	ldd	r25, Z+3	; 0x03
    1800:	0c 5f       	subi	r16, 0xFC	; 252
    1802:	1f 4f       	sbci	r17, 0xFF	; 255
    1804:	08 c0       	rjmp	.+16     	; 0x1816 <vfprintf+0x1ea>
    1806:	60 81       	ld	r22, Z
    1808:	71 81       	ldd	r23, Z+1	; 0x01
    180a:	07 2e       	mov	r0, r23
    180c:	00 0c       	add	r0, r0
    180e:	88 0b       	sbc	r24, r24
    1810:	99 0b       	sbc	r25, r25
    1812:	0e 5f       	subi	r16, 0xFE	; 254
    1814:	1f 4f       	sbci	r17, 0xFF	; 255
    1816:	f3 2d       	mov	r31, r3
    1818:	ff 76       	andi	r31, 0x6F	; 111
    181a:	3f 2e       	mov	r3, r31
    181c:	97 ff       	sbrs	r25, 7
    181e:	09 c0       	rjmp	.+18     	; 0x1832 <vfprintf+0x206>
    1820:	90 95       	com	r25
    1822:	80 95       	com	r24
    1824:	70 95       	com	r23
    1826:	61 95       	neg	r22
    1828:	7f 4f       	sbci	r23, 0xFF	; 255
    182a:	8f 4f       	sbci	r24, 0xFF	; 255
    182c:	9f 4f       	sbci	r25, 0xFF	; 255
    182e:	f0 68       	ori	r31, 0x80	; 128
    1830:	3f 2e       	mov	r3, r31
    1832:	2a e0       	ldi	r18, 0x0A	; 10
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	a3 01       	movw	r20, r6
    1838:	1d d1       	rcall	.+570    	; 0x1a74 <__ultoa_invert>
    183a:	88 2e       	mov	r8, r24
    183c:	86 18       	sub	r8, r6
    183e:	44 c0       	rjmp	.+136    	; 0x18c8 <vfprintf+0x29c>
    1840:	85 37       	cpi	r24, 0x75	; 117
    1842:	31 f4       	brne	.+12     	; 0x1850 <vfprintf+0x224>
    1844:	23 2d       	mov	r18, r3
    1846:	2f 7e       	andi	r18, 0xEF	; 239
    1848:	b2 2e       	mov	r11, r18
    184a:	2a e0       	ldi	r18, 0x0A	; 10
    184c:	30 e0       	ldi	r19, 0x00	; 0
    184e:	25 c0       	rjmp	.+74     	; 0x189a <vfprintf+0x26e>
    1850:	93 2d       	mov	r25, r3
    1852:	99 7f       	andi	r25, 0xF9	; 249
    1854:	b9 2e       	mov	r11, r25
    1856:	8f 36       	cpi	r24, 0x6F	; 111
    1858:	c1 f0       	breq	.+48     	; 0x188a <vfprintf+0x25e>
    185a:	18 f4       	brcc	.+6      	; 0x1862 <vfprintf+0x236>
    185c:	88 35       	cpi	r24, 0x58	; 88
    185e:	79 f0       	breq	.+30     	; 0x187e <vfprintf+0x252>
    1860:	ae c0       	rjmp	.+348    	; 0x19be <vfprintf+0x392>
    1862:	80 37       	cpi	r24, 0x70	; 112
    1864:	19 f0       	breq	.+6      	; 0x186c <vfprintf+0x240>
    1866:	88 37       	cpi	r24, 0x78	; 120
    1868:	21 f0       	breq	.+8      	; 0x1872 <vfprintf+0x246>
    186a:	a9 c0       	rjmp	.+338    	; 0x19be <vfprintf+0x392>
    186c:	e9 2f       	mov	r30, r25
    186e:	e0 61       	ori	r30, 0x10	; 16
    1870:	be 2e       	mov	r11, r30
    1872:	b4 fe       	sbrs	r11, 4
    1874:	0d c0       	rjmp	.+26     	; 0x1890 <vfprintf+0x264>
    1876:	fb 2d       	mov	r31, r11
    1878:	f4 60       	ori	r31, 0x04	; 4
    187a:	bf 2e       	mov	r11, r31
    187c:	09 c0       	rjmp	.+18     	; 0x1890 <vfprintf+0x264>
    187e:	34 fe       	sbrs	r3, 4
    1880:	0a c0       	rjmp	.+20     	; 0x1896 <vfprintf+0x26a>
    1882:	29 2f       	mov	r18, r25
    1884:	26 60       	ori	r18, 0x06	; 6
    1886:	b2 2e       	mov	r11, r18
    1888:	06 c0       	rjmp	.+12     	; 0x1896 <vfprintf+0x26a>
    188a:	28 e0       	ldi	r18, 0x08	; 8
    188c:	30 e0       	ldi	r19, 0x00	; 0
    188e:	05 c0       	rjmp	.+10     	; 0x189a <vfprintf+0x26e>
    1890:	20 e1       	ldi	r18, 0x10	; 16
    1892:	30 e0       	ldi	r19, 0x00	; 0
    1894:	02 c0       	rjmp	.+4      	; 0x189a <vfprintf+0x26e>
    1896:	20 e1       	ldi	r18, 0x10	; 16
    1898:	32 e0       	ldi	r19, 0x02	; 2
    189a:	f8 01       	movw	r30, r16
    189c:	b7 fe       	sbrs	r11, 7
    189e:	07 c0       	rjmp	.+14     	; 0x18ae <vfprintf+0x282>
    18a0:	60 81       	ld	r22, Z
    18a2:	71 81       	ldd	r23, Z+1	; 0x01
    18a4:	82 81       	ldd	r24, Z+2	; 0x02
    18a6:	93 81       	ldd	r25, Z+3	; 0x03
    18a8:	0c 5f       	subi	r16, 0xFC	; 252
    18aa:	1f 4f       	sbci	r17, 0xFF	; 255
    18ac:	06 c0       	rjmp	.+12     	; 0x18ba <vfprintf+0x28e>
    18ae:	60 81       	ld	r22, Z
    18b0:	71 81       	ldd	r23, Z+1	; 0x01
    18b2:	80 e0       	ldi	r24, 0x00	; 0
    18b4:	90 e0       	ldi	r25, 0x00	; 0
    18b6:	0e 5f       	subi	r16, 0xFE	; 254
    18b8:	1f 4f       	sbci	r17, 0xFF	; 255
    18ba:	a3 01       	movw	r20, r6
    18bc:	db d0       	rcall	.+438    	; 0x1a74 <__ultoa_invert>
    18be:	88 2e       	mov	r8, r24
    18c0:	86 18       	sub	r8, r6
    18c2:	fb 2d       	mov	r31, r11
    18c4:	ff 77       	andi	r31, 0x7F	; 127
    18c6:	3f 2e       	mov	r3, r31
    18c8:	36 fe       	sbrs	r3, 6
    18ca:	0d c0       	rjmp	.+26     	; 0x18e6 <vfprintf+0x2ba>
    18cc:	23 2d       	mov	r18, r3
    18ce:	2e 7f       	andi	r18, 0xFE	; 254
    18d0:	a2 2e       	mov	r10, r18
    18d2:	89 14       	cp	r8, r9
    18d4:	58 f4       	brcc	.+22     	; 0x18ec <vfprintf+0x2c0>
    18d6:	34 fe       	sbrs	r3, 4
    18d8:	0b c0       	rjmp	.+22     	; 0x18f0 <vfprintf+0x2c4>
    18da:	32 fc       	sbrc	r3, 2
    18dc:	09 c0       	rjmp	.+18     	; 0x18f0 <vfprintf+0x2c4>
    18de:	83 2d       	mov	r24, r3
    18e0:	8e 7e       	andi	r24, 0xEE	; 238
    18e2:	a8 2e       	mov	r10, r24
    18e4:	05 c0       	rjmp	.+10     	; 0x18f0 <vfprintf+0x2c4>
    18e6:	b8 2c       	mov	r11, r8
    18e8:	a3 2c       	mov	r10, r3
    18ea:	03 c0       	rjmp	.+6      	; 0x18f2 <vfprintf+0x2c6>
    18ec:	b8 2c       	mov	r11, r8
    18ee:	01 c0       	rjmp	.+2      	; 0x18f2 <vfprintf+0x2c6>
    18f0:	b9 2c       	mov	r11, r9
    18f2:	a4 fe       	sbrs	r10, 4
    18f4:	0f c0       	rjmp	.+30     	; 0x1914 <vfprintf+0x2e8>
    18f6:	fe 01       	movw	r30, r28
    18f8:	e8 0d       	add	r30, r8
    18fa:	f1 1d       	adc	r31, r1
    18fc:	80 81       	ld	r24, Z
    18fe:	80 33       	cpi	r24, 0x30	; 48
    1900:	21 f4       	brne	.+8      	; 0x190a <vfprintf+0x2de>
    1902:	9a 2d       	mov	r25, r10
    1904:	99 7e       	andi	r25, 0xE9	; 233
    1906:	a9 2e       	mov	r10, r25
    1908:	09 c0       	rjmp	.+18     	; 0x191c <vfprintf+0x2f0>
    190a:	a2 fe       	sbrs	r10, 2
    190c:	06 c0       	rjmp	.+12     	; 0x191a <vfprintf+0x2ee>
    190e:	b3 94       	inc	r11
    1910:	b3 94       	inc	r11
    1912:	04 c0       	rjmp	.+8      	; 0x191c <vfprintf+0x2f0>
    1914:	8a 2d       	mov	r24, r10
    1916:	86 78       	andi	r24, 0x86	; 134
    1918:	09 f0       	breq	.+2      	; 0x191c <vfprintf+0x2f0>
    191a:	b3 94       	inc	r11
    191c:	a3 fc       	sbrc	r10, 3
    191e:	10 c0       	rjmp	.+32     	; 0x1940 <vfprintf+0x314>
    1920:	a0 fe       	sbrs	r10, 0
    1922:	06 c0       	rjmp	.+12     	; 0x1930 <vfprintf+0x304>
    1924:	b2 14       	cp	r11, r2
    1926:	80 f4       	brcc	.+32     	; 0x1948 <vfprintf+0x31c>
    1928:	28 0c       	add	r2, r8
    192a:	92 2c       	mov	r9, r2
    192c:	9b 18       	sub	r9, r11
    192e:	0d c0       	rjmp	.+26     	; 0x194a <vfprintf+0x31e>
    1930:	b2 14       	cp	r11, r2
    1932:	58 f4       	brcc	.+22     	; 0x194a <vfprintf+0x31e>
    1934:	b6 01       	movw	r22, r12
    1936:	80 e2       	ldi	r24, 0x20	; 32
    1938:	90 e0       	ldi	r25, 0x00	; 0
    193a:	60 d0       	rcall	.+192    	; 0x19fc <fputc>
    193c:	b3 94       	inc	r11
    193e:	f8 cf       	rjmp	.-16     	; 0x1930 <vfprintf+0x304>
    1940:	b2 14       	cp	r11, r2
    1942:	18 f4       	brcc	.+6      	; 0x194a <vfprintf+0x31e>
    1944:	2b 18       	sub	r2, r11
    1946:	02 c0       	rjmp	.+4      	; 0x194c <vfprintf+0x320>
    1948:	98 2c       	mov	r9, r8
    194a:	21 2c       	mov	r2, r1
    194c:	a4 fe       	sbrs	r10, 4
    194e:	0f c0       	rjmp	.+30     	; 0x196e <vfprintf+0x342>
    1950:	b6 01       	movw	r22, r12
    1952:	80 e3       	ldi	r24, 0x30	; 48
    1954:	90 e0       	ldi	r25, 0x00	; 0
    1956:	52 d0       	rcall	.+164    	; 0x19fc <fputc>
    1958:	a2 fe       	sbrs	r10, 2
    195a:	16 c0       	rjmp	.+44     	; 0x1988 <vfprintf+0x35c>
    195c:	a1 fc       	sbrc	r10, 1
    195e:	03 c0       	rjmp	.+6      	; 0x1966 <vfprintf+0x33a>
    1960:	88 e7       	ldi	r24, 0x78	; 120
    1962:	90 e0       	ldi	r25, 0x00	; 0
    1964:	02 c0       	rjmp	.+4      	; 0x196a <vfprintf+0x33e>
    1966:	88 e5       	ldi	r24, 0x58	; 88
    1968:	90 e0       	ldi	r25, 0x00	; 0
    196a:	b6 01       	movw	r22, r12
    196c:	0c c0       	rjmp	.+24     	; 0x1986 <vfprintf+0x35a>
    196e:	8a 2d       	mov	r24, r10
    1970:	86 78       	andi	r24, 0x86	; 134
    1972:	51 f0       	breq	.+20     	; 0x1988 <vfprintf+0x35c>
    1974:	a1 fe       	sbrs	r10, 1
    1976:	02 c0       	rjmp	.+4      	; 0x197c <vfprintf+0x350>
    1978:	8b e2       	ldi	r24, 0x2B	; 43
    197a:	01 c0       	rjmp	.+2      	; 0x197e <vfprintf+0x352>
    197c:	80 e2       	ldi	r24, 0x20	; 32
    197e:	a7 fc       	sbrc	r10, 7
    1980:	8d e2       	ldi	r24, 0x2D	; 45
    1982:	b6 01       	movw	r22, r12
    1984:	90 e0       	ldi	r25, 0x00	; 0
    1986:	3a d0       	rcall	.+116    	; 0x19fc <fputc>
    1988:	89 14       	cp	r8, r9
    198a:	30 f4       	brcc	.+12     	; 0x1998 <vfprintf+0x36c>
    198c:	b6 01       	movw	r22, r12
    198e:	80 e3       	ldi	r24, 0x30	; 48
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	34 d0       	rcall	.+104    	; 0x19fc <fputc>
    1994:	9a 94       	dec	r9
    1996:	f8 cf       	rjmp	.-16     	; 0x1988 <vfprintf+0x35c>
    1998:	8a 94       	dec	r8
    199a:	f3 01       	movw	r30, r6
    199c:	e8 0d       	add	r30, r8
    199e:	f1 1d       	adc	r31, r1
    19a0:	80 81       	ld	r24, Z
    19a2:	b6 01       	movw	r22, r12
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	2a d0       	rcall	.+84     	; 0x19fc <fputc>
    19a8:	81 10       	cpse	r8, r1
    19aa:	f6 cf       	rjmp	.-20     	; 0x1998 <vfprintf+0x36c>
    19ac:	22 20       	and	r2, r2
    19ae:	09 f4       	brne	.+2      	; 0x19b2 <vfprintf+0x386>
    19b0:	4e ce       	rjmp	.-868    	; 0x164e <vfprintf+0x22>
    19b2:	b6 01       	movw	r22, r12
    19b4:	80 e2       	ldi	r24, 0x20	; 32
    19b6:	90 e0       	ldi	r25, 0x00	; 0
    19b8:	21 d0       	rcall	.+66     	; 0x19fc <fputc>
    19ba:	2a 94       	dec	r2
    19bc:	f7 cf       	rjmp	.-18     	; 0x19ac <vfprintf+0x380>
    19be:	f6 01       	movw	r30, r12
    19c0:	86 81       	ldd	r24, Z+6	; 0x06
    19c2:	97 81       	ldd	r25, Z+7	; 0x07
    19c4:	02 c0       	rjmp	.+4      	; 0x19ca <vfprintf+0x39e>
    19c6:	8f ef       	ldi	r24, 0xFF	; 255
    19c8:	9f ef       	ldi	r25, 0xFF	; 255
    19ca:	2b 96       	adiw	r28, 0x0b	; 11
    19cc:	e2 e1       	ldi	r30, 0x12	; 18
    19ce:	cc c0       	rjmp	.+408    	; 0x1b68 <__epilogue_restores__>

000019d0 <strnlen_P>:
    19d0:	fc 01       	movw	r30, r24
    19d2:	05 90       	lpm	r0, Z+
    19d4:	61 50       	subi	r22, 0x01	; 1
    19d6:	70 40       	sbci	r23, 0x00	; 0
    19d8:	01 10       	cpse	r0, r1
    19da:	d8 f7       	brcc	.-10     	; 0x19d2 <strnlen_P+0x2>
    19dc:	80 95       	com	r24
    19de:	90 95       	com	r25
    19e0:	8e 0f       	add	r24, r30
    19e2:	9f 1f       	adc	r25, r31
    19e4:	08 95       	ret

000019e6 <strnlen>:
    19e6:	fc 01       	movw	r30, r24
    19e8:	61 50       	subi	r22, 0x01	; 1
    19ea:	70 40       	sbci	r23, 0x00	; 0
    19ec:	01 90       	ld	r0, Z+
    19ee:	01 10       	cpse	r0, r1
    19f0:	d8 f7       	brcc	.-10     	; 0x19e8 <strnlen+0x2>
    19f2:	80 95       	com	r24
    19f4:	90 95       	com	r25
    19f6:	8e 0f       	add	r24, r30
    19f8:	9f 1f       	adc	r25, r31
    19fa:	08 95       	ret

000019fc <fputc>:
    19fc:	0f 93       	push	r16
    19fe:	1f 93       	push	r17
    1a00:	cf 93       	push	r28
    1a02:	df 93       	push	r29
    1a04:	fb 01       	movw	r30, r22
    1a06:	23 81       	ldd	r18, Z+3	; 0x03
    1a08:	21 fd       	sbrc	r18, 1
    1a0a:	03 c0       	rjmp	.+6      	; 0x1a12 <fputc+0x16>
    1a0c:	8f ef       	ldi	r24, 0xFF	; 255
    1a0e:	9f ef       	ldi	r25, 0xFF	; 255
    1a10:	2c c0       	rjmp	.+88     	; 0x1a6a <fputc+0x6e>
    1a12:	22 ff       	sbrs	r18, 2
    1a14:	16 c0       	rjmp	.+44     	; 0x1a42 <fputc+0x46>
    1a16:	46 81       	ldd	r20, Z+6	; 0x06
    1a18:	57 81       	ldd	r21, Z+7	; 0x07
    1a1a:	24 81       	ldd	r18, Z+4	; 0x04
    1a1c:	35 81       	ldd	r19, Z+5	; 0x05
    1a1e:	42 17       	cp	r20, r18
    1a20:	53 07       	cpc	r21, r19
    1a22:	44 f4       	brge	.+16     	; 0x1a34 <fputc+0x38>
    1a24:	a0 81       	ld	r26, Z
    1a26:	b1 81       	ldd	r27, Z+1	; 0x01
    1a28:	9d 01       	movw	r18, r26
    1a2a:	2f 5f       	subi	r18, 0xFF	; 255
    1a2c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a2e:	31 83       	std	Z+1, r19	; 0x01
    1a30:	20 83       	st	Z, r18
    1a32:	8c 93       	st	X, r24
    1a34:	26 81       	ldd	r18, Z+6	; 0x06
    1a36:	37 81       	ldd	r19, Z+7	; 0x07
    1a38:	2f 5f       	subi	r18, 0xFF	; 255
    1a3a:	3f 4f       	sbci	r19, 0xFF	; 255
    1a3c:	37 83       	std	Z+7, r19	; 0x07
    1a3e:	26 83       	std	Z+6, r18	; 0x06
    1a40:	14 c0       	rjmp	.+40     	; 0x1a6a <fputc+0x6e>
    1a42:	8b 01       	movw	r16, r22
    1a44:	ec 01       	movw	r28, r24
    1a46:	fb 01       	movw	r30, r22
    1a48:	00 84       	ldd	r0, Z+8	; 0x08
    1a4a:	f1 85       	ldd	r31, Z+9	; 0x09
    1a4c:	e0 2d       	mov	r30, r0
    1a4e:	09 95       	icall
    1a50:	89 2b       	or	r24, r25
    1a52:	e1 f6       	brne	.-72     	; 0x1a0c <fputc+0x10>
    1a54:	d8 01       	movw	r26, r16
    1a56:	16 96       	adiw	r26, 0x06	; 6
    1a58:	8d 91       	ld	r24, X+
    1a5a:	9c 91       	ld	r25, X
    1a5c:	17 97       	sbiw	r26, 0x07	; 7
    1a5e:	01 96       	adiw	r24, 0x01	; 1
    1a60:	17 96       	adiw	r26, 0x07	; 7
    1a62:	9c 93       	st	X, r25
    1a64:	8e 93       	st	-X, r24
    1a66:	16 97       	sbiw	r26, 0x06	; 6
    1a68:	ce 01       	movw	r24, r28
    1a6a:	df 91       	pop	r29
    1a6c:	cf 91       	pop	r28
    1a6e:	1f 91       	pop	r17
    1a70:	0f 91       	pop	r16
    1a72:	08 95       	ret

00001a74 <__ultoa_invert>:
    1a74:	fa 01       	movw	r30, r20
    1a76:	aa 27       	eor	r26, r26
    1a78:	28 30       	cpi	r18, 0x08	; 8
    1a7a:	51 f1       	breq	.+84     	; 0x1ad0 <__ultoa_invert+0x5c>
    1a7c:	20 31       	cpi	r18, 0x10	; 16
    1a7e:	81 f1       	breq	.+96     	; 0x1ae0 <__ultoa_invert+0x6c>
    1a80:	e8 94       	clt
    1a82:	6f 93       	push	r22
    1a84:	6e 7f       	andi	r22, 0xFE	; 254
    1a86:	6e 5f       	subi	r22, 0xFE	; 254
    1a88:	7f 4f       	sbci	r23, 0xFF	; 255
    1a8a:	8f 4f       	sbci	r24, 0xFF	; 255
    1a8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1a8e:	af 4f       	sbci	r26, 0xFF	; 255
    1a90:	b1 e0       	ldi	r27, 0x01	; 1
    1a92:	3e d0       	rcall	.+124    	; 0x1b10 <__ultoa_invert+0x9c>
    1a94:	b4 e0       	ldi	r27, 0x04	; 4
    1a96:	3c d0       	rcall	.+120    	; 0x1b10 <__ultoa_invert+0x9c>
    1a98:	67 0f       	add	r22, r23
    1a9a:	78 1f       	adc	r23, r24
    1a9c:	89 1f       	adc	r24, r25
    1a9e:	9a 1f       	adc	r25, r26
    1aa0:	a1 1d       	adc	r26, r1
    1aa2:	68 0f       	add	r22, r24
    1aa4:	79 1f       	adc	r23, r25
    1aa6:	8a 1f       	adc	r24, r26
    1aa8:	91 1d       	adc	r25, r1
    1aaa:	a1 1d       	adc	r26, r1
    1aac:	6a 0f       	add	r22, r26
    1aae:	71 1d       	adc	r23, r1
    1ab0:	81 1d       	adc	r24, r1
    1ab2:	91 1d       	adc	r25, r1
    1ab4:	a1 1d       	adc	r26, r1
    1ab6:	20 d0       	rcall	.+64     	; 0x1af8 <__ultoa_invert+0x84>
    1ab8:	09 f4       	brne	.+2      	; 0x1abc <__ultoa_invert+0x48>
    1aba:	68 94       	set
    1abc:	3f 91       	pop	r19
    1abe:	2a e0       	ldi	r18, 0x0A	; 10
    1ac0:	26 9f       	mul	r18, r22
    1ac2:	11 24       	eor	r1, r1
    1ac4:	30 19       	sub	r19, r0
    1ac6:	30 5d       	subi	r19, 0xD0	; 208
    1ac8:	31 93       	st	Z+, r19
    1aca:	de f6       	brtc	.-74     	; 0x1a82 <__ultoa_invert+0xe>
    1acc:	cf 01       	movw	r24, r30
    1ace:	08 95       	ret
    1ad0:	46 2f       	mov	r20, r22
    1ad2:	47 70       	andi	r20, 0x07	; 7
    1ad4:	40 5d       	subi	r20, 0xD0	; 208
    1ad6:	41 93       	st	Z+, r20
    1ad8:	b3 e0       	ldi	r27, 0x03	; 3
    1ada:	0f d0       	rcall	.+30     	; 0x1afa <__ultoa_invert+0x86>
    1adc:	c9 f7       	brne	.-14     	; 0x1ad0 <__ultoa_invert+0x5c>
    1ade:	f6 cf       	rjmp	.-20     	; 0x1acc <__ultoa_invert+0x58>
    1ae0:	46 2f       	mov	r20, r22
    1ae2:	4f 70       	andi	r20, 0x0F	; 15
    1ae4:	40 5d       	subi	r20, 0xD0	; 208
    1ae6:	4a 33       	cpi	r20, 0x3A	; 58
    1ae8:	18 f0       	brcs	.+6      	; 0x1af0 <__ultoa_invert+0x7c>
    1aea:	49 5d       	subi	r20, 0xD9	; 217
    1aec:	31 fd       	sbrc	r19, 1
    1aee:	40 52       	subi	r20, 0x20	; 32
    1af0:	41 93       	st	Z+, r20
    1af2:	02 d0       	rcall	.+4      	; 0x1af8 <__ultoa_invert+0x84>
    1af4:	a9 f7       	brne	.-22     	; 0x1ae0 <__ultoa_invert+0x6c>
    1af6:	ea cf       	rjmp	.-44     	; 0x1acc <__ultoa_invert+0x58>
    1af8:	b4 e0       	ldi	r27, 0x04	; 4
    1afa:	a6 95       	lsr	r26
    1afc:	97 95       	ror	r25
    1afe:	87 95       	ror	r24
    1b00:	77 95       	ror	r23
    1b02:	67 95       	ror	r22
    1b04:	ba 95       	dec	r27
    1b06:	c9 f7       	brne	.-14     	; 0x1afa <__ultoa_invert+0x86>
    1b08:	00 97       	sbiw	r24, 0x00	; 0
    1b0a:	61 05       	cpc	r22, r1
    1b0c:	71 05       	cpc	r23, r1
    1b0e:	08 95       	ret
    1b10:	9b 01       	movw	r18, r22
    1b12:	ac 01       	movw	r20, r24
    1b14:	0a 2e       	mov	r0, r26
    1b16:	06 94       	lsr	r0
    1b18:	57 95       	ror	r21
    1b1a:	47 95       	ror	r20
    1b1c:	37 95       	ror	r19
    1b1e:	27 95       	ror	r18
    1b20:	ba 95       	dec	r27
    1b22:	c9 f7       	brne	.-14     	; 0x1b16 <__ultoa_invert+0xa2>
    1b24:	62 0f       	add	r22, r18
    1b26:	73 1f       	adc	r23, r19
    1b28:	84 1f       	adc	r24, r20
    1b2a:	95 1f       	adc	r25, r21
    1b2c:	a0 1d       	adc	r26, r0
    1b2e:	08 95       	ret

00001b30 <__prologue_saves__>:
    1b30:	2f 92       	push	r2
    1b32:	3f 92       	push	r3
    1b34:	4f 92       	push	r4
    1b36:	5f 92       	push	r5
    1b38:	6f 92       	push	r6
    1b3a:	7f 92       	push	r7
    1b3c:	8f 92       	push	r8
    1b3e:	9f 92       	push	r9
    1b40:	af 92       	push	r10
    1b42:	bf 92       	push	r11
    1b44:	cf 92       	push	r12
    1b46:	df 92       	push	r13
    1b48:	ef 92       	push	r14
    1b4a:	ff 92       	push	r15
    1b4c:	0f 93       	push	r16
    1b4e:	1f 93       	push	r17
    1b50:	cf 93       	push	r28
    1b52:	df 93       	push	r29
    1b54:	cd b7       	in	r28, 0x3d	; 61
    1b56:	de b7       	in	r29, 0x3e	; 62
    1b58:	ca 1b       	sub	r28, r26
    1b5a:	db 0b       	sbc	r29, r27
    1b5c:	0f b6       	in	r0, 0x3f	; 63
    1b5e:	f8 94       	cli
    1b60:	de bf       	out	0x3e, r29	; 62
    1b62:	0f be       	out	0x3f, r0	; 63
    1b64:	cd bf       	out	0x3d, r28	; 61
    1b66:	09 94       	ijmp

00001b68 <__epilogue_restores__>:
    1b68:	2a 88       	ldd	r2, Y+18	; 0x12
    1b6a:	39 88       	ldd	r3, Y+17	; 0x11
    1b6c:	48 88       	ldd	r4, Y+16	; 0x10
    1b6e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b70:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b72:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b74:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b76:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b78:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b7a:	b9 84       	ldd	r11, Y+9	; 0x09
    1b7c:	c8 84       	ldd	r12, Y+8	; 0x08
    1b7e:	df 80       	ldd	r13, Y+7	; 0x07
    1b80:	ee 80       	ldd	r14, Y+6	; 0x06
    1b82:	fd 80       	ldd	r15, Y+5	; 0x05
    1b84:	0c 81       	ldd	r16, Y+4	; 0x04
    1b86:	1b 81       	ldd	r17, Y+3	; 0x03
    1b88:	aa 81       	ldd	r26, Y+2	; 0x02
    1b8a:	b9 81       	ldd	r27, Y+1	; 0x01
    1b8c:	ce 0f       	add	r28, r30
    1b8e:	d1 1d       	adc	r29, r1
    1b90:	0f b6       	in	r0, 0x3f	; 63
    1b92:	f8 94       	cli
    1b94:	de bf       	out	0x3e, r29	; 62
    1b96:	0f be       	out	0x3f, r0	; 63
    1b98:	cd bf       	out	0x3d, r28	; 61
    1b9a:	ed 01       	movw	r28, r26
    1b9c:	08 95       	ret

00001b9e <_exit>:
    1b9e:	f8 94       	cli

00001ba0 <__stop_program>:
    1ba0:	ff cf       	rjmp	.-2      	; 0x1ba0 <__stop_program>
