
External_Interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000090  00800100  00000b58  00000bec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800190  00800190  00000c7c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c7c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000cd8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ef4  00000000  00000000  00000dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bb9  00000000  00000000  00001ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bdf  00000000  00000000  00002885  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c8  00000000  00000000  00003464  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008735  00000000  00000000  0000372c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005a4  00000000  00000000  0000be61  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  0000c405  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002e5a  00000000  00000000  0000c495  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	59 c0       	rjmp	.+178    	; 0xb4 <__ctors_end>
   2:	00 00       	nop
   4:	f1 c0       	rjmp	.+482    	; 0x1e8 <__vector_1>
   6:	00 00       	nop
   8:	2d c1       	rjmp	.+602    	; 0x264 <__vector_2>
   a:	00 00       	nop
   c:	6e c0       	rjmp	.+220    	; 0xea <__bad_interrupt>
   e:	00 00       	nop
  10:	6c c0       	rjmp	.+216    	; 0xea <__bad_interrupt>
  12:	00 00       	nop
  14:	6a c0       	rjmp	.+212    	; 0xea <__bad_interrupt>
  16:	00 00       	nop
  18:	68 c0       	rjmp	.+208    	; 0xea <__bad_interrupt>
  1a:	00 00       	nop
  1c:	66 c0       	rjmp	.+204    	; 0xea <__bad_interrupt>
  1e:	00 00       	nop
  20:	64 c0       	rjmp	.+200    	; 0xea <__bad_interrupt>
  22:	00 00       	nop
  24:	62 c0       	rjmp	.+196    	; 0xea <__bad_interrupt>
  26:	00 00       	nop
  28:	60 c0       	rjmp	.+192    	; 0xea <__bad_interrupt>
  2a:	00 00       	nop
  2c:	5e c0       	rjmp	.+188    	; 0xea <__bad_interrupt>
  2e:	00 00       	nop
  30:	5c c0       	rjmp	.+184    	; 0xea <__bad_interrupt>
  32:	00 00       	nop
  34:	5a c0       	rjmp	.+180    	; 0xea <__bad_interrupt>
  36:	00 00       	nop
  38:	58 c0       	rjmp	.+176    	; 0xea <__bad_interrupt>
  3a:	00 00       	nop
  3c:	56 c0       	rjmp	.+172    	; 0xea <__bad_interrupt>
  3e:	00 00       	nop
  40:	54 c0       	rjmp	.+168    	; 0xea <__bad_interrupt>
  42:	00 00       	nop
  44:	52 c0       	rjmp	.+164    	; 0xea <__bad_interrupt>
  46:	00 00       	nop
  48:	50 c0       	rjmp	.+160    	; 0xea <__bad_interrupt>
  4a:	00 00       	nop
  4c:	4e c0       	rjmp	.+156    	; 0xea <__bad_interrupt>
  4e:	00 00       	nop
  50:	4c c0       	rjmp	.+152    	; 0xea <__bad_interrupt>
  52:	00 00       	nop
  54:	4a c0       	rjmp	.+148    	; 0xea <__bad_interrupt>
  56:	00 00       	nop
  58:	48 c0       	rjmp	.+144    	; 0xea <__bad_interrupt>
  5a:	00 00       	nop
  5c:	46 c0       	rjmp	.+140    	; 0xea <__bad_interrupt>
  5e:	00 00       	nop
  60:	44 c0       	rjmp	.+136    	; 0xea <__bad_interrupt>
  62:	00 00       	nop
  64:	42 c0       	rjmp	.+132    	; 0xea <__bad_interrupt>
  66:	00 00       	nop
  68:	40 c0       	rjmp	.+128    	; 0xea <__bad_interrupt>
  6a:	00 00       	nop
  6c:	3e c0       	rjmp	.+124    	; 0xea <__bad_interrupt>
  6e:	00 00       	nop
  70:	27 c2       	rjmp	.+1102   	; 0x4c0 <__vector_28>
  72:	00 00       	nop
  74:	3a c0       	rjmp	.+116    	; 0xea <__bad_interrupt>
  76:	00 00       	nop
  78:	38 c0       	rjmp	.+112    	; 0xea <__bad_interrupt>
  7a:	00 00       	nop
  7c:	36 c0       	rjmp	.+108    	; 0xea <__bad_interrupt>
  7e:	00 00       	nop
  80:	34 c0       	rjmp	.+104    	; 0xea <__bad_interrupt>
  82:	00 00       	nop
  84:	32 c0       	rjmp	.+100    	; 0xea <__bad_interrupt>
  86:	00 00       	nop
  88:	30 c0       	rjmp	.+96     	; 0xea <__bad_interrupt>
  8a:	00 00       	nop
  8c:	2e c0       	rjmp	.+92     	; 0xea <__bad_interrupt>
  8e:	00 00       	nop
  90:	2c c0       	rjmp	.+88     	; 0xea <__bad_interrupt>
  92:	00 00       	nop
  94:	2a c0       	rjmp	.+84     	; 0xea <__bad_interrupt>
  96:	00 00       	nop
  98:	28 c0       	rjmp	.+80     	; 0xea <__bad_interrupt>
  9a:	00 00       	nop
  9c:	26 c0       	rjmp	.+76     	; 0xea <__bad_interrupt>
  9e:	00 00       	nop
  a0:	24 c0       	rjmp	.+72     	; 0xea <__bad_interrupt>
  a2:	00 00       	nop
  a4:	22 c0       	rjmp	.+68     	; 0xea <__bad_interrupt>
  a6:	00 00       	nop
  a8:	20 c0       	rjmp	.+64     	; 0xea <__bad_interrupt>
  aa:	00 00       	nop
  ac:	1e c0       	rjmp	.+60     	; 0xea <__bad_interrupt>
  ae:	00 00       	nop
  b0:	1c c0       	rjmp	.+56     	; 0xea <__bad_interrupt>
	...

000000b4 <__ctors_end>:
  b4:	11 24       	eor	r1, r1
  b6:	1f be       	out	0x3f, r1	; 63
  b8:	cf ef       	ldi	r28, 0xFF	; 255
  ba:	d8 e0       	ldi	r29, 0x08	; 8
  bc:	de bf       	out	0x3e, r29	; 62
  be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	e8 e5       	ldi	r30, 0x58	; 88
  c8:	fb e0       	ldi	r31, 0x0B	; 11
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
  cc:	05 90       	lpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a0 39       	cpi	r26, 0x90	; 144
  d2:	b1 07       	cpc	r27, r17
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
  d6:	21 e0       	ldi	r18, 0x01	; 1
  d8:	a0 e9       	ldi	r26, 0x90	; 144
  da:	b1 e0       	ldi	r27, 0x01	; 1
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
  de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
  e0:	ab 39       	cpi	r26, 0x9B	; 155
  e2:	b2 07       	cpc	r27, r18
  e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
  e6:	1b d1       	rcall	.+566    	; 0x31e <main>
  e8:	35 c5       	rjmp	.+2666   	; 0xb54 <_exit>

000000ea <__bad_interrupt>:
  ea:	8a cf       	rjmp	.-236    	; 0x0 <__vectors>

000000ec <NoCallbackIsPerformedOnExternalInterrupt>:
	}
	else
	{
		return (false);
	}
}
  ec:	cf 93       	push	r28
  ee:	df 93       	push	r29
  f0:	00 d0       	rcall	.+0      	; 0xf2 <NoCallbackIsPerformedOnExternalInterrupt+0x6>
  f2:	cd b7       	in	r28, 0x3d	; 61
  f4:	de b7       	in	r29, 0x3e	; 62
  f6:	9a 83       	std	Y+2, r25	; 0x02
  f8:	89 83       	std	Y+1, r24	; 0x01
  fa:	00 00       	nop
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	df 91       	pop	r29
 102:	cf 91       	pop	r28
 104:	08 95       	ret

00000106 <AttachAndEnableExternalInterrupt>:
 106:	cf 93       	push	r28
 108:	df 93       	push	r29
 10a:	00 d0       	rcall	.+0      	; 0x10c <AttachAndEnableExternalInterrupt+0x6>
 10c:	00 d0       	rcall	.+0      	; 0x10e <AttachAndEnableExternalInterrupt+0x8>
 10e:	cd b7       	in	r28, 0x3d	; 61
 110:	de b7       	in	r29, 0x3e	; 62
 112:	89 83       	std	Y+1, r24	; 0x01
 114:	7b 83       	std	Y+3, r23	; 0x03
 116:	6a 83       	std	Y+2, r22	; 0x02
 118:	4c 83       	std	Y+4, r20	; 0x04
 11a:	89 81       	ldd	r24, Y+1	; 0x01
 11c:	82 30       	cpi	r24, 0x02	; 2
 11e:	08 f0       	brcs	.+2      	; 0x122 <AttachAndEnableExternalInterrupt+0x1c>
 120:	5b c0       	rjmp	.+182    	; 0x1d8 <AttachAndEnableExternalInterrupt+0xd2>
 122:	89 81       	ldd	r24, Y+1	; 0x01
 124:	88 2f       	mov	r24, r24
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	88 0f       	add	r24, r24
 12a:	99 1f       	adc	r25, r25
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	80 50       	subi	r24, 0x00	; 0
 132:	9f 4f       	sbci	r25, 0xFF	; 255
 134:	fc 01       	movw	r30, r24
 136:	80 81       	ld	r24, Z
 138:	91 81       	ldd	r25, Z+1	; 0x01
 13a:	86 57       	subi	r24, 0x76	; 118
 13c:	90 40       	sbci	r25, 0x00	; 0
 13e:	11 f0       	breq	.+4      	; 0x144 <AttachAndEnableExternalInterrupt+0x3e>
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	4b c0       	rjmp	.+150    	; 0x1da <AttachAndEnableExternalInterrupt+0xd4>
 144:	89 81       	ldd	r24, Y+1	; 0x01
 146:	88 2f       	mov	r24, r24
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	00 97       	sbiw	r24, 0x00	; 0
 14c:	19 f0       	breq	.+6      	; 0x154 <AttachAndEnableExternalInterrupt+0x4e>
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	b9 f0       	breq	.+46     	; 0x180 <AttachAndEnableExternalInterrupt+0x7a>
 152:	32 c0       	rjmp	.+100    	; 0x1b8 <AttachAndEnableExternalInterrupt+0xb2>
 154:	89 e6       	ldi	r24, 0x69	; 105
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	29 e6       	ldi	r18, 0x69	; 105
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	f9 01       	movw	r30, r18
 15e:	20 81       	ld	r18, Z
 160:	32 2f       	mov	r19, r18
 162:	3c 7f       	andi	r19, 0xFC	; 252
 164:	2c 81       	ldd	r18, Y+4	; 0x04
 166:	23 2b       	or	r18, r19
 168:	fc 01       	movw	r30, r24
 16a:	20 83       	st	Z, r18
 16c:	8d e3       	ldi	r24, 0x3D	; 61
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	2d e3       	ldi	r18, 0x3D	; 61
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	f9 01       	movw	r30, r18
 176:	20 81       	ld	r18, Z
 178:	21 60       	ori	r18, 0x01	; 1
 17a:	fc 01       	movw	r30, r24
 17c:	20 83       	st	Z, r18
 17e:	1c c0       	rjmp	.+56     	; 0x1b8 <AttachAndEnableExternalInterrupt+0xb2>
 180:	89 e6       	ldi	r24, 0x69	; 105
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	29 e6       	ldi	r18, 0x69	; 105
 186:	30 e0       	ldi	r19, 0x00	; 0
 188:	f9 01       	movw	r30, r18
 18a:	20 81       	ld	r18, Z
 18c:	42 2f       	mov	r20, r18
 18e:	43 7f       	andi	r20, 0xF3	; 243
 190:	2c 81       	ldd	r18, Y+4	; 0x04
 192:	22 2f       	mov	r18, r18
 194:	30 e0       	ldi	r19, 0x00	; 0
 196:	22 0f       	add	r18, r18
 198:	33 1f       	adc	r19, r19
 19a:	22 0f       	add	r18, r18
 19c:	33 1f       	adc	r19, r19
 19e:	24 2b       	or	r18, r20
 1a0:	fc 01       	movw	r30, r24
 1a2:	20 83       	st	Z, r18
 1a4:	8d e3       	ldi	r24, 0x3D	; 61
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	2d e3       	ldi	r18, 0x3D	; 61
 1aa:	30 e0       	ldi	r19, 0x00	; 0
 1ac:	f9 01       	movw	r30, r18
 1ae:	20 81       	ld	r18, Z
 1b0:	22 60       	ori	r18, 0x02	; 2
 1b2:	fc 01       	movw	r30, r24
 1b4:	20 83       	st	Z, r18
 1b6:	00 00       	nop
 1b8:	89 81       	ldd	r24, Y+1	; 0x01
 1ba:	88 2f       	mov	r24, r24
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	88 0f       	add	r24, r24
 1c0:	99 1f       	adc	r25, r25
 1c2:	88 0f       	add	r24, r24
 1c4:	99 1f       	adc	r25, r25
 1c6:	80 50       	subi	r24, 0x00	; 0
 1c8:	9f 4f       	sbci	r25, 0xFF	; 255
 1ca:	2a 81       	ldd	r18, Y+2	; 0x02
 1cc:	3b 81       	ldd	r19, Y+3	; 0x03
 1ce:	fc 01       	movw	r30, r24
 1d0:	31 83       	std	Z+1, r19	; 0x01
 1d2:	20 83       	st	Z, r18
 1d4:	81 e0       	ldi	r24, 0x01	; 1
 1d6:	01 c0       	rjmp	.+2      	; 0x1da <AttachAndEnableExternalInterrupt+0xd4>
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	0f 90       	pop	r0
 1dc:	0f 90       	pop	r0
 1de:	0f 90       	pop	r0
 1e0:	0f 90       	pop	r0
 1e2:	df 91       	pop	r29
 1e4:	cf 91       	pop	r28
 1e6:	08 95       	ret

000001e8 <__vector_1>:

ISR(INT0_vect)
{
 1e8:	1f 92       	push	r1
 1ea:	0f 92       	push	r0
 1ec:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 1f0:	0f 92       	push	r0
 1f2:	11 24       	eor	r1, r1
 1f4:	2f 93       	push	r18
 1f6:	3f 93       	push	r19
 1f8:	4f 93       	push	r20
 1fa:	5f 93       	push	r21
 1fc:	6f 93       	push	r22
 1fe:	7f 93       	push	r23
 200:	8f 93       	push	r24
 202:	9f 93       	push	r25
 204:	af 93       	push	r26
 206:	bf 93       	push	r27
 208:	ef 93       	push	r30
 20a:	ff 93       	push	r31
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	cd b7       	in	r28, 0x3d	; 61
 212:	de b7       	in	r29, 0x3e	; 62
	ExternalInterruptCallbackStructArray[0].NumberOfExternalInterruptsOnPin++;
 214:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 218:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 21c:	01 96       	adiw	r24, 0x01	; 1
 21e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 222:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
	ExternalInterruptCallbackStructArray[0].ThisFunctionPointer(ExternalInterruptCallbackStructArray[0].NumberOfExternalInterruptsOnPin); 	
 226:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 22a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 22e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 232:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 236:	f9 01       	movw	r30, r18
 238:	09 95       	icall
}
 23a:	00 00       	nop
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	ff 91       	pop	r31
 242:	ef 91       	pop	r30
 244:	bf 91       	pop	r27
 246:	af 91       	pop	r26
 248:	9f 91       	pop	r25
 24a:	8f 91       	pop	r24
 24c:	7f 91       	pop	r23
 24e:	6f 91       	pop	r22
 250:	5f 91       	pop	r21
 252:	4f 91       	pop	r20
 254:	3f 91       	pop	r19
 256:	2f 91       	pop	r18
 258:	0f 90       	pop	r0
 25a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 25e:	0f 90       	pop	r0
 260:	1f 90       	pop	r1
 262:	18 95       	reti

00000264 <__vector_2>:

ISR(INT1_vect)
{
 264:	1f 92       	push	r1
 266:	0f 92       	push	r0
 268:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 26c:	0f 92       	push	r0
 26e:	11 24       	eor	r1, r1
 270:	2f 93       	push	r18
 272:	3f 93       	push	r19
 274:	4f 93       	push	r20
 276:	5f 93       	push	r21
 278:	6f 93       	push	r22
 27a:	7f 93       	push	r23
 27c:	8f 93       	push	r24
 27e:	9f 93       	push	r25
 280:	af 93       	push	r26
 282:	bf 93       	push	r27
 284:	ef 93       	push	r30
 286:	ff 93       	push	r31
 288:	cf 93       	push	r28
 28a:	df 93       	push	r29
 28c:	cd b7       	in	r28, 0x3d	; 61
 28e:	de b7       	in	r29, 0x3e	; 62
	ExternalInterruptCallbackStructArray[1].NumberOfExternalInterruptsOnPin++;
 290:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
 294:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
 298:	01 96       	adiw	r24, 0x01	; 1
 29a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
 29e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
	ExternalInterruptCallbackStructArray[1].ThisFunctionPointer(ExternalInterruptCallbackStructArray[1].NumberOfExternalInterruptsOnPin);
 2a2:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
 2a6:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
 2aa:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
 2ae:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
 2b2:	f9 01       	movw	r30, r18
 2b4:	09 95       	icall
}
 2b6:	00 00       	nop
 2b8:	df 91       	pop	r29
 2ba:	cf 91       	pop	r28
 2bc:	ff 91       	pop	r31
 2be:	ef 91       	pop	r30
 2c0:	bf 91       	pop	r27
 2c2:	af 91       	pop	r26
 2c4:	9f 91       	pop	r25
 2c6:	8f 91       	pop	r24
 2c8:	7f 91       	pop	r23
 2ca:	6f 91       	pop	r22
 2cc:	5f 91       	pop	r21
 2ce:	4f 91       	pop	r20
 2d0:	3f 91       	pop	r19
 2d2:	2f 91       	pop	r18
 2d4:	0f 90       	pop	r0
 2d6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 2da:	0f 90       	pop	r0
 2dc:	1f 90       	pop	r1
 2de:	18 95       	reti

000002e0 <ExternalInterruptFunction_0>:
static volatile uint16_t NumberOfExternalInterruptsOnPin0 = 0;
static volatile uint16_t NumberOfExternalInterruptsOnPin0FromCallback = 0;
static volatile bool InterruptOnExternalPin0 = false;

void ExternalInterruptFunction_0(uint16_t NumberOfExternalInterruptsOnPin0FromCallbackHere)
{
 2e0:	cf 93       	push	r28
 2e2:	df 93       	push	r29
 2e4:	00 d0       	rcall	.+0      	; 0x2e6 <ExternalInterruptFunction_0+0x6>
 2e6:	cd b7       	in	r28, 0x3d	; 61
 2e8:	de b7       	in	r29, 0x3e	; 62
 2ea:	9a 83       	std	Y+2, r25	; 0x02
 2ec:	89 83       	std	Y+1, r24	; 0x01
	NumberOfExternalInterruptsOnPin0++;
 2ee:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <__data_end>
 2f2:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <__data_end+0x1>
 2f6:	01 96       	adiw	r24, 0x01	; 1
 2f8:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <__data_end+0x1>
 2fc:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <__data_end>
	NumberOfExternalInterruptsOnPin0FromCallback = NumberOfExternalInterruptsOnPin0FromCallbackHere;
 300:	89 81       	ldd	r24, Y+1	; 0x01
 302:	9a 81       	ldd	r25, Y+2	; 0x02
 304:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <NumberOfExternalInterruptsOnPin0FromCallback+0x1>
 308:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <NumberOfExternalInterruptsOnPin0FromCallback>
	InterruptOnExternalPin0 = true;
 30c:	81 e0       	ldi	r24, 0x01	; 1
 30e:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <InterruptOnExternalPin0>
}
 312:	00 00       	nop
 314:	0f 90       	pop	r0
 316:	0f 90       	pop	r0
 318:	df 91       	pop	r29
 31a:	cf 91       	pop	r28
 31c:	08 95       	ret

0000031e <main>:

int main(void)
 {
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	00 d0       	rcall	.+0      	; 0x324 <main+0x6>
 324:	00 d0       	rcall	.+0      	; 0x326 <main+0x8>
 326:	00 d0       	rcall	.+0      	; 0x328 <main+0xa>
 328:	cd b7       	in	r28, 0x3d	; 61
 32a:	de b7       	in	r29, 0x3e	; 62
	char OutputCharArray[6];
	 
	AttachAndEnableExternalInterrupt(EXTERNAL_INTERRUPT_0, ExternalInterruptFunction_0, FALLING_EDGE_GENERATE_INTERRUPT);
 32c:	42 e0       	ldi	r20, 0x02	; 2
 32e:	60 e7       	ldi	r22, 0x70	; 112
 330:	71 e0       	ldi	r23, 0x01	; 1
 332:	80 e0       	ldi	r24, 0x00	; 0
 334:	e8 de       	rcall	.-560    	; 0x106 <AttachAndEnableExternalInterrupt>
		
	RS232Init();
 336:	3c d0       	rcall	.+120    	; 0x3b0 <RS232Init>
	Enable_UART_Receive_Interrupt();
 338:	b2 d0       	rcall	.+356    	; 0x49e <Enable_UART_Receive_Interrupt>
 33a:	78 94       	sei
	
	sei();
	
	printf("\nEmbedded styrer for vildt !!!\n");
 33c:	84 e2       	ldi	r24, 0x24	; 36
 33e:	91 e0       	ldi	r25, 0x01	; 1
 340:	01 d1       	rcall	.+514    	; 0x544 <puts>
 342:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <InterruptOnExternalPin0>
    /* Replace with your application code */
    while (1) 
    {
		if (true == InterruptOnExternalPin0)
 346:	88 23       	and	r24, r24
 348:	e1 f3       	breq	.-8      	; 0x342 <main+0x24>
 34a:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <InterruptOnExternalPin0>
		{
			InterruptOnExternalPin0 = false;
			
			// Output info to UART
			printf("\nInterrupt on External Pin 0. \n");
 34e:	83 e4       	ldi	r24, 0x43	; 67
 350:	91 e0       	ldi	r25, 0x01	; 1
 352:	f8 d0       	rcall	.+496    	; 0x544 <puts>
 354:	82 e6       	ldi	r24, 0x62	; 98
			printf("Number of Interrupts on ExternalPin 0 : ");
 356:	91 e0       	ldi	r25, 0x01	; 1
 358:	89 2f       	mov	r24, r25
 35a:	8f 93       	push	r24
 35c:	82 e6       	ldi	r24, 0x62	; 98
 35e:	91 e0       	ldi	r25, 0x01	; 1
 360:	8f 93       	push	r24
 362:	d8 d0       	rcall	.+432    	; 0x514 <printf>
 364:	0f 90       	pop	r0
 366:	0f 90       	pop	r0
 368:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <__data_end>
			sprintf(OutputCharArray, "%05d", NumberOfExternalInterruptsOnPin0);
 36c:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <__data_end+0x1>
 370:	29 2f       	mov	r18, r25
 372:	2f 93       	push	r18
 374:	8f 93       	push	r24
 376:	8b e8       	ldi	r24, 0x8B	; 139
 378:	91 e0       	ldi	r25, 0x01	; 1
 37a:	89 2f       	mov	r24, r25
 37c:	8f 93       	push	r24
 37e:	8b e8       	ldi	r24, 0x8B	; 139
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	8f 93       	push	r24
 384:	ce 01       	movw	r24, r28
 386:	01 96       	adiw	r24, 0x01	; 1
 388:	9f 93       	push	r25
 38a:	8f 93       	push	r24
 38c:	0b d1       	rcall	.+534    	; 0x5a4 <sprintf>
 38e:	0f 90       	pop	r0
 390:	0f 90       	pop	r0
 392:	0f 90       	pop	r0
 394:	0f 90       	pop	r0
 396:	0f 90       	pop	r0
 398:	0f 90       	pop	r0
			printf(OutputCharArray);
 39a:	ce 01       	movw	r24, r28
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	9f 93       	push	r25
 3a0:	8f 93       	push	r24
 3a2:	b8 d0       	rcall	.+368    	; 0x514 <printf>
 3a4:	0f 90       	pop	r0
 3a6:	0f 90       	pop	r0
			printf("\n");
 3a8:	8a e0       	ldi	r24, 0x0A	; 10
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	c6 d0       	rcall	.+396    	; 0x53a <putchar>
 3ae:	c9 cf       	rjmp	.-110    	; 0x342 <main+0x24>

000003b0 <RS232Init>:
		}
    }
 3b0:	cf 93       	push	r28
}

void Disable_UART_Receive_Interupt()
{
	UCSRB &= ~(1 << RXCIE); // Disable the USART Recieve Complete interrupt (USART_RXC)
}
 3b2:	df 93       	push	r29
 3b4:	cd b7       	in	r28, 0x3d	; 61
 3b6:	de b7       	in	r29, 0x3e	; 62
 3b8:	8c ec       	ldi	r24, 0xCC	; 204
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	27 e6       	ldi	r18, 0x67	; 103
 3be:	fc 01       	movw	r30, r24
 3c0:	20 83       	st	Z, r18
 3c2:	8d ec       	ldi	r24, 0xCD	; 205
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	fc 01       	movw	r30, r24
 3c8:	10 82       	st	Z, r1
 3ca:	88 ec       	ldi	r24, 0xC8	; 200
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	fc 01       	movw	r30, r24
 3d0:	10 82       	st	Z, r1
 3d2:	89 ec       	ldi	r24, 0xC9	; 201
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	28 e1       	ldi	r18, 0x18	; 24
 3d8:	fc 01       	movw	r30, r24
 3da:	20 83       	st	Z, r18
 3dc:	8a ec       	ldi	r24, 0xCA	; 202
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	26 e0       	ldi	r18, 0x06	; 6
 3e2:	fc 01       	movw	r30, r24
 3e4:	20 83       	st	Z, r18
 3e6:	05 d0       	rcall	.+10     	; 0x3f2 <SetupOutputStreamToUart>
 3e8:	12 d0       	rcall	.+36     	; 0x40e <SetupInputStreamToUart>
 3ea:	00 00       	nop
 3ec:	df 91       	pop	r29
 3ee:	cf 91       	pop	r28
 3f0:	08 95       	ret

000003f2 <SetupOutputStreamToUart>:
 3f2:	cf 93       	push	r28
 3f4:	df 93       	push	r29
 3f6:	cd b7       	in	r28, 0x3d	; 61
 3f8:	de b7       	in	r29, 0x3e	; 62
 3fa:	88 e0       	ldi	r24, 0x08	; 8
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	90 93 98 01 	sts	0x0198, r25	; 0x800198 <__iob+0x3>
 402:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <__iob+0x2>
 406:	00 00       	nop
 408:	df 91       	pop	r29
 40a:	cf 91       	pop	r28
 40c:	08 95       	ret

0000040e <SetupInputStreamToUart>:
 40e:	cf 93       	push	r28
 410:	df 93       	push	r29
 412:	cd b7       	in	r28, 0x3d	; 61
 414:	de b7       	in	r29, 0x3e	; 62
 416:	86 e1       	ldi	r24, 0x16	; 22
 418:	91 e0       	ldi	r25, 0x01	; 1
 41a:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <__iob+0x1>
 41e:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <__iob>
 422:	00 00       	nop
 424:	df 91       	pop	r29
 426:	cf 91       	pop	r28
 428:	08 95       	ret

0000042a <uart_getch>:
 42a:	cf 93       	push	r28
 42c:	df 93       	push	r29
 42e:	00 d0       	rcall	.+0      	; 0x430 <uart_getch+0x6>
 430:	cd b7       	in	r28, 0x3d	; 61
 432:	de b7       	in	r29, 0x3e	; 62
 434:	9a 83       	std	Y+2, r25	; 0x02
 436:	89 83       	std	Y+1, r24	; 0x01
 438:	00 00       	nop
 43a:	88 ec       	ldi	r24, 0xC8	; 200
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	fc 01       	movw	r30, r24
 440:	80 81       	ld	r24, Z
 442:	88 23       	and	r24, r24
 444:	d4 f7       	brge	.-12     	; 0x43a <uart_getch+0x10>
 446:	8e ec       	ldi	r24, 0xCE	; 206
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	fc 01       	movw	r30, r24
 44c:	80 81       	ld	r24, Z
 44e:	88 2f       	mov	r24, r24
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0f 90       	pop	r0
 454:	0f 90       	pop	r0
 456:	df 91       	pop	r29
 458:	cf 91       	pop	r28
 45a:	08 95       	ret

0000045c <uart_putch>:
 45c:	cf 93       	push	r28
 45e:	df 93       	push	r29
 460:	00 d0       	rcall	.+0      	; 0x462 <uart_putch+0x6>
 462:	1f 92       	push	r1
 464:	cd b7       	in	r28, 0x3d	; 61
 466:	de b7       	in	r29, 0x3e	; 62
 468:	89 83       	std	Y+1, r24	; 0x01
 46a:	7b 83       	std	Y+3, r23	; 0x03
 46c:	6a 83       	std	Y+2, r22	; 0x02
 46e:	00 00       	nop
 470:	88 ec       	ldi	r24, 0xC8	; 200
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	fc 01       	movw	r30, r24
 476:	80 81       	ld	r24, Z
 478:	88 2f       	mov	r24, r24
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	80 72       	andi	r24, 0x20	; 32
 47e:	99 27       	eor	r25, r25
 480:	89 2b       	or	r24, r25
 482:	b1 f3       	breq	.-20     	; 0x470 <uart_putch+0x14>
 484:	8e ec       	ldi	r24, 0xCE	; 206
 486:	90 e0       	ldi	r25, 0x00	; 0
 488:	29 81       	ldd	r18, Y+1	; 0x01
 48a:	fc 01       	movw	r30, r24
 48c:	20 83       	st	Z, r18
 48e:	80 e0       	ldi	r24, 0x00	; 0
 490:	90 e0       	ldi	r25, 0x00	; 0
 492:	0f 90       	pop	r0
 494:	0f 90       	pop	r0
 496:	0f 90       	pop	r0
 498:	df 91       	pop	r29
 49a:	cf 91       	pop	r28
 49c:	08 95       	ret

0000049e <Enable_UART_Receive_Interrupt>:
 49e:	cf 93       	push	r28
 4a0:	df 93       	push	r29
 4a2:	cd b7       	in	r28, 0x3d	; 61
 4a4:	de b7       	in	r29, 0x3e	; 62
 4a6:	89 ec       	ldi	r24, 0xC9	; 201
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	29 ec       	ldi	r18, 0xC9	; 201
 4ac:	30 e0       	ldi	r19, 0x00	; 0
 4ae:	f9 01       	movw	r30, r18
 4b0:	20 81       	ld	r18, Z
 4b2:	20 68       	ori	r18, 0x80	; 128
 4b4:	fc 01       	movw	r30, r24
 4b6:	20 83       	st	Z, r18
 4b8:	00 00       	nop
 4ba:	df 91       	pop	r29
 4bc:	cf 91       	pop	r28
 4be:	08 95       	ret

000004c0 <__vector_28>:

ISR(UART_ISR_VECTOR)
{
 4c0:	1f 92       	push	r1
 4c2:	0f 92       	push	r0
 4c4:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 4c8:	0f 92       	push	r0
 4ca:	11 24       	eor	r1, r1
 4cc:	2f 93       	push	r18
 4ce:	8f 93       	push	r24
 4d0:	9f 93       	push	r25
 4d2:	ef 93       	push	r30
 4d4:	ff 93       	push	r31
 4d6:	cf 93       	push	r28
 4d8:	df 93       	push	r29
 4da:	1f 92       	push	r1
 4dc:	cd b7       	in	r28, 0x3d	; 61
 4de:	de b7       	in	r29, 0x3e	; 62
	char ReceivedChar;
	ReceivedChar = UDR;
 4e0:	8e ec       	ldi	r24, 0xCE	; 206
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	fc 01       	movw	r30, r24
 4e6:	80 81       	ld	r24, Z
 4e8:	89 83       	std	Y+1, r24	; 0x01
	//TreatReceivedCharOnUART(ReceivedChar);
	UDR = ReceivedChar; // Echo back the received byte converted to the computer
 4ea:	8e ec       	ldi	r24, 0xCE	; 206
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	29 81       	ldd	r18, Y+1	; 0x01
 4f0:	fc 01       	movw	r30, r24
 4f2:	20 83       	st	Z, r18
	sei();
 4f4:	78 94       	sei
}
 4f6:	00 00       	nop
 4f8:	0f 90       	pop	r0
 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	ff 91       	pop	r31
 500:	ef 91       	pop	r30
 502:	9f 91       	pop	r25
 504:	8f 91       	pop	r24
 506:	2f 91       	pop	r18
 508:	0f 90       	pop	r0
 50a:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7f805f>
 50e:	0f 90       	pop	r0
 510:	1f 90       	pop	r1
 512:	18 95       	reti

00000514 <printf>:
 514:	a0 e0       	ldi	r26, 0x00	; 0
 516:	b0 e0       	ldi	r27, 0x00	; 0
 518:	ef e8       	ldi	r30, 0x8F	; 143
 51a:	f2 e0       	ldi	r31, 0x02	; 2
 51c:	f4 c2       	rjmp	.+1512   	; 0xb06 <__prologue_saves__+0x20>
 51e:	ae 01       	movw	r20, r28
 520:	4b 5f       	subi	r20, 0xFB	; 251
 522:	5f 4f       	sbci	r21, 0xFF	; 255
 524:	fa 01       	movw	r30, r20
 526:	61 91       	ld	r22, Z+
 528:	71 91       	ld	r23, Z+
 52a:	af 01       	movw	r20, r30
 52c:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <__iob+0x2>
 530:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <__iob+0x3>
 534:	56 d0       	rcall	.+172    	; 0x5e2 <vfprintf>
 536:	e2 e0       	ldi	r30, 0x02	; 2
 538:	02 c3       	rjmp	.+1540   	; 0xb3e <__epilogue_restores__+0x20>

0000053a <putchar>:
 53a:	60 91 97 01 	lds	r22, 0x0197	; 0x800197 <__iob+0x2>
 53e:	70 91 98 01 	lds	r23, 0x0198	; 0x800198 <__iob+0x3>
 542:	37 c2       	rjmp	.+1134   	; 0x9b2 <fputc>

00000544 <puts>:
 544:	0f 93       	push	r16
 546:	1f 93       	push	r17
 548:	cf 93       	push	r28
 54a:	df 93       	push	r29
 54c:	e0 91 97 01 	lds	r30, 0x0197	; 0x800197 <__iob+0x2>
 550:	f0 91 98 01 	lds	r31, 0x0198	; 0x800198 <__iob+0x3>
 554:	23 81       	ldd	r18, Z+3	; 0x03
 556:	21 ff       	sbrs	r18, 1
 558:	1b c0       	rjmp	.+54     	; 0x590 <puts+0x4c>
 55a:	8c 01       	movw	r16, r24
 55c:	d0 e0       	ldi	r29, 0x00	; 0
 55e:	c0 e0       	ldi	r28, 0x00	; 0
 560:	f8 01       	movw	r30, r16
 562:	81 91       	ld	r24, Z+
 564:	8f 01       	movw	r16, r30
 566:	60 91 97 01 	lds	r22, 0x0197	; 0x800197 <__iob+0x2>
 56a:	70 91 98 01 	lds	r23, 0x0198	; 0x800198 <__iob+0x3>
 56e:	db 01       	movw	r26, r22
 570:	18 96       	adiw	r26, 0x08	; 8
 572:	ed 91       	ld	r30, X+
 574:	fc 91       	ld	r31, X
 576:	19 97       	sbiw	r26, 0x09	; 9
 578:	88 23       	and	r24, r24
 57a:	31 f0       	breq	.+12     	; 0x588 <puts+0x44>
 57c:	09 95       	icall
 57e:	89 2b       	or	r24, r25
 580:	79 f3       	breq	.-34     	; 0x560 <puts+0x1c>
 582:	df ef       	ldi	r29, 0xFF	; 255
 584:	cf ef       	ldi	r28, 0xFF	; 255
 586:	ec cf       	rjmp	.-40     	; 0x560 <puts+0x1c>
 588:	8a e0       	ldi	r24, 0x0A	; 10
 58a:	09 95       	icall
 58c:	89 2b       	or	r24, r25
 58e:	19 f0       	breq	.+6      	; 0x596 <puts+0x52>
 590:	8f ef       	ldi	r24, 0xFF	; 255
 592:	9f ef       	ldi	r25, 0xFF	; 255
 594:	02 c0       	rjmp	.+4      	; 0x59a <puts+0x56>
 596:	8d 2f       	mov	r24, r29
 598:	9c 2f       	mov	r25, r28
 59a:	df 91       	pop	r29
 59c:	cf 91       	pop	r28
 59e:	1f 91       	pop	r17
 5a0:	0f 91       	pop	r16
 5a2:	08 95       	ret

000005a4 <sprintf>:
 5a4:	ae e0       	ldi	r26, 0x0E	; 14
 5a6:	b0 e0       	ldi	r27, 0x00	; 0
 5a8:	e7 ed       	ldi	r30, 0xD7	; 215
 5aa:	f2 e0       	ldi	r31, 0x02	; 2
 5ac:	aa c2       	rjmp	.+1364   	; 0xb02 <__prologue_saves__+0x1c>
 5ae:	0d 89       	ldd	r16, Y+21	; 0x15
 5b0:	1e 89       	ldd	r17, Y+22	; 0x16
 5b2:	86 e0       	ldi	r24, 0x06	; 6
 5b4:	8c 83       	std	Y+4, r24	; 0x04
 5b6:	1a 83       	std	Y+2, r17	; 0x02
 5b8:	09 83       	std	Y+1, r16	; 0x01
 5ba:	8f ef       	ldi	r24, 0xFF	; 255
 5bc:	9f e7       	ldi	r25, 0x7F	; 127
 5be:	9e 83       	std	Y+6, r25	; 0x06
 5c0:	8d 83       	std	Y+5, r24	; 0x05
 5c2:	ae 01       	movw	r20, r28
 5c4:	47 5e       	subi	r20, 0xE7	; 231
 5c6:	5f 4f       	sbci	r21, 0xFF	; 255
 5c8:	6f 89       	ldd	r22, Y+23	; 0x17
 5ca:	78 8d       	ldd	r23, Y+24	; 0x18
 5cc:	ce 01       	movw	r24, r28
 5ce:	01 96       	adiw	r24, 0x01	; 1
 5d0:	08 d0       	rcall	.+16     	; 0x5e2 <vfprintf>
 5d2:	ef 81       	ldd	r30, Y+7	; 0x07
 5d4:	f8 85       	ldd	r31, Y+8	; 0x08
 5d6:	e0 0f       	add	r30, r16
 5d8:	f1 1f       	adc	r31, r17
 5da:	10 82       	st	Z, r1
 5dc:	2e 96       	adiw	r28, 0x0e	; 14
 5de:	e4 e0       	ldi	r30, 0x04	; 4
 5e0:	ac c2       	rjmp	.+1368   	; 0xb3a <__epilogue_restores__+0x1c>

000005e2 <vfprintf>:
 5e2:	ab e0       	ldi	r26, 0x0B	; 11
 5e4:	b0 e0       	ldi	r27, 0x00	; 0
 5e6:	e6 ef       	ldi	r30, 0xF6	; 246
 5e8:	f2 e0       	ldi	r31, 0x02	; 2
 5ea:	7d c2       	rjmp	.+1274   	; 0xae6 <__prologue_saves__>
 5ec:	6c 01       	movw	r12, r24
 5ee:	7b 01       	movw	r14, r22
 5f0:	8a 01       	movw	r16, r20
 5f2:	fc 01       	movw	r30, r24
 5f4:	17 82       	std	Z+7, r1	; 0x07
 5f6:	16 82       	std	Z+6, r1	; 0x06
 5f8:	83 81       	ldd	r24, Z+3	; 0x03
 5fa:	81 ff       	sbrs	r24, 1
 5fc:	bf c1       	rjmp	.+894    	; 0x97c <__stack+0x7d>
 5fe:	ce 01       	movw	r24, r28
 600:	01 96       	adiw	r24, 0x01	; 1
 602:	3c 01       	movw	r6, r24
 604:	f6 01       	movw	r30, r12
 606:	93 81       	ldd	r25, Z+3	; 0x03
 608:	f7 01       	movw	r30, r14
 60a:	93 fd       	sbrc	r25, 3
 60c:	85 91       	lpm	r24, Z+
 60e:	93 ff       	sbrs	r25, 3
 610:	81 91       	ld	r24, Z+
 612:	7f 01       	movw	r14, r30
 614:	88 23       	and	r24, r24
 616:	09 f4       	brne	.+2      	; 0x61a <vfprintf+0x38>
 618:	ad c1       	rjmp	.+858    	; 0x974 <__stack+0x75>
 61a:	85 32       	cpi	r24, 0x25	; 37
 61c:	39 f4       	brne	.+14     	; 0x62c <vfprintf+0x4a>
 61e:	93 fd       	sbrc	r25, 3
 620:	85 91       	lpm	r24, Z+
 622:	93 ff       	sbrs	r25, 3
 624:	81 91       	ld	r24, Z+
 626:	7f 01       	movw	r14, r30
 628:	85 32       	cpi	r24, 0x25	; 37
 62a:	21 f4       	brne	.+8      	; 0x634 <vfprintf+0x52>
 62c:	b6 01       	movw	r22, r12
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	c0 d1       	rcall	.+896    	; 0x9b2 <fputc>
 632:	e8 cf       	rjmp	.-48     	; 0x604 <vfprintf+0x22>
 634:	91 2c       	mov	r9, r1
 636:	21 2c       	mov	r2, r1
 638:	31 2c       	mov	r3, r1
 63a:	ff e1       	ldi	r31, 0x1F	; 31
 63c:	f3 15       	cp	r31, r3
 63e:	d8 f0       	brcs	.+54     	; 0x676 <vfprintf+0x94>
 640:	8b 32       	cpi	r24, 0x2B	; 43
 642:	79 f0       	breq	.+30     	; 0x662 <vfprintf+0x80>
 644:	38 f4       	brcc	.+14     	; 0x654 <vfprintf+0x72>
 646:	80 32       	cpi	r24, 0x20	; 32
 648:	79 f0       	breq	.+30     	; 0x668 <vfprintf+0x86>
 64a:	83 32       	cpi	r24, 0x23	; 35
 64c:	a1 f4       	brne	.+40     	; 0x676 <vfprintf+0x94>
 64e:	23 2d       	mov	r18, r3
 650:	20 61       	ori	r18, 0x10	; 16
 652:	1d c0       	rjmp	.+58     	; 0x68e <vfprintf+0xac>
 654:	8d 32       	cpi	r24, 0x2D	; 45
 656:	61 f0       	breq	.+24     	; 0x670 <vfprintf+0x8e>
 658:	80 33       	cpi	r24, 0x30	; 48
 65a:	69 f4       	brne	.+26     	; 0x676 <vfprintf+0x94>
 65c:	23 2d       	mov	r18, r3
 65e:	21 60       	ori	r18, 0x01	; 1
 660:	16 c0       	rjmp	.+44     	; 0x68e <vfprintf+0xac>
 662:	83 2d       	mov	r24, r3
 664:	82 60       	ori	r24, 0x02	; 2
 666:	38 2e       	mov	r3, r24
 668:	e3 2d       	mov	r30, r3
 66a:	e4 60       	ori	r30, 0x04	; 4
 66c:	3e 2e       	mov	r3, r30
 66e:	2a c0       	rjmp	.+84     	; 0x6c4 <vfprintf+0xe2>
 670:	f3 2d       	mov	r31, r3
 672:	f8 60       	ori	r31, 0x08	; 8
 674:	1d c0       	rjmp	.+58     	; 0x6b0 <vfprintf+0xce>
 676:	37 fc       	sbrc	r3, 7
 678:	2d c0       	rjmp	.+90     	; 0x6d4 <vfprintf+0xf2>
 67a:	20 ed       	ldi	r18, 0xD0	; 208
 67c:	28 0f       	add	r18, r24
 67e:	2a 30       	cpi	r18, 0x0A	; 10
 680:	40 f0       	brcs	.+16     	; 0x692 <vfprintf+0xb0>
 682:	8e 32       	cpi	r24, 0x2E	; 46
 684:	b9 f4       	brne	.+46     	; 0x6b4 <vfprintf+0xd2>
 686:	36 fc       	sbrc	r3, 6
 688:	75 c1       	rjmp	.+746    	; 0x974 <__stack+0x75>
 68a:	23 2d       	mov	r18, r3
 68c:	20 64       	ori	r18, 0x40	; 64
 68e:	32 2e       	mov	r3, r18
 690:	19 c0       	rjmp	.+50     	; 0x6c4 <vfprintf+0xe2>
 692:	36 fe       	sbrs	r3, 6
 694:	06 c0       	rjmp	.+12     	; 0x6a2 <vfprintf+0xc0>
 696:	8a e0       	ldi	r24, 0x0A	; 10
 698:	98 9e       	mul	r9, r24
 69a:	20 0d       	add	r18, r0
 69c:	11 24       	eor	r1, r1
 69e:	92 2e       	mov	r9, r18
 6a0:	11 c0       	rjmp	.+34     	; 0x6c4 <vfprintf+0xe2>
 6a2:	ea e0       	ldi	r30, 0x0A	; 10
 6a4:	2e 9e       	mul	r2, r30
 6a6:	20 0d       	add	r18, r0
 6a8:	11 24       	eor	r1, r1
 6aa:	22 2e       	mov	r2, r18
 6ac:	f3 2d       	mov	r31, r3
 6ae:	f0 62       	ori	r31, 0x20	; 32
 6b0:	3f 2e       	mov	r3, r31
 6b2:	08 c0       	rjmp	.+16     	; 0x6c4 <vfprintf+0xe2>
 6b4:	8c 36       	cpi	r24, 0x6C	; 108
 6b6:	21 f4       	brne	.+8      	; 0x6c0 <vfprintf+0xde>
 6b8:	83 2d       	mov	r24, r3
 6ba:	80 68       	ori	r24, 0x80	; 128
 6bc:	38 2e       	mov	r3, r24
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <vfprintf+0xe2>
 6c0:	88 36       	cpi	r24, 0x68	; 104
 6c2:	41 f4       	brne	.+16     	; 0x6d4 <vfprintf+0xf2>
 6c4:	f7 01       	movw	r30, r14
 6c6:	93 fd       	sbrc	r25, 3
 6c8:	85 91       	lpm	r24, Z+
 6ca:	93 ff       	sbrs	r25, 3
 6cc:	81 91       	ld	r24, Z+
 6ce:	7f 01       	movw	r14, r30
 6d0:	81 11       	cpse	r24, r1
 6d2:	b3 cf       	rjmp	.-154    	; 0x63a <vfprintf+0x58>
 6d4:	98 2f       	mov	r25, r24
 6d6:	9f 7d       	andi	r25, 0xDF	; 223
 6d8:	95 54       	subi	r25, 0x45	; 69
 6da:	93 30       	cpi	r25, 0x03	; 3
 6dc:	28 f4       	brcc	.+10     	; 0x6e8 <vfprintf+0x106>
 6de:	0c 5f       	subi	r16, 0xFC	; 252
 6e0:	1f 4f       	sbci	r17, 0xFF	; 255
 6e2:	9f e3       	ldi	r25, 0x3F	; 63
 6e4:	99 83       	std	Y+1, r25	; 0x01
 6e6:	0d c0       	rjmp	.+26     	; 0x702 <vfprintf+0x120>
 6e8:	83 36       	cpi	r24, 0x63	; 99
 6ea:	31 f0       	breq	.+12     	; 0x6f8 <vfprintf+0x116>
 6ec:	83 37       	cpi	r24, 0x73	; 115
 6ee:	71 f0       	breq	.+28     	; 0x70c <vfprintf+0x12a>
 6f0:	83 35       	cpi	r24, 0x53	; 83
 6f2:	09 f0       	breq	.+2      	; 0x6f6 <vfprintf+0x114>
 6f4:	55 c0       	rjmp	.+170    	; 0x7a0 <vfprintf+0x1be>
 6f6:	20 c0       	rjmp	.+64     	; 0x738 <vfprintf+0x156>
 6f8:	f8 01       	movw	r30, r16
 6fa:	80 81       	ld	r24, Z
 6fc:	89 83       	std	Y+1, r24	; 0x01
 6fe:	0e 5f       	subi	r16, 0xFE	; 254
 700:	1f 4f       	sbci	r17, 0xFF	; 255
 702:	88 24       	eor	r8, r8
 704:	83 94       	inc	r8
 706:	91 2c       	mov	r9, r1
 708:	53 01       	movw	r10, r6
 70a:	12 c0       	rjmp	.+36     	; 0x730 <vfprintf+0x14e>
 70c:	28 01       	movw	r4, r16
 70e:	f2 e0       	ldi	r31, 0x02	; 2
 710:	4f 0e       	add	r4, r31
 712:	51 1c       	adc	r5, r1
 714:	f8 01       	movw	r30, r16
 716:	a0 80       	ld	r10, Z
 718:	b1 80       	ldd	r11, Z+1	; 0x01
 71a:	36 fe       	sbrs	r3, 6
 71c:	03 c0       	rjmp	.+6      	; 0x724 <vfprintf+0x142>
 71e:	69 2d       	mov	r22, r9
 720:	70 e0       	ldi	r23, 0x00	; 0
 722:	02 c0       	rjmp	.+4      	; 0x728 <vfprintf+0x146>
 724:	6f ef       	ldi	r22, 0xFF	; 255
 726:	7f ef       	ldi	r23, 0xFF	; 255
 728:	c5 01       	movw	r24, r10
 72a:	38 d1       	rcall	.+624    	; 0x99c <strnlen>
 72c:	4c 01       	movw	r8, r24
 72e:	82 01       	movw	r16, r4
 730:	f3 2d       	mov	r31, r3
 732:	ff 77       	andi	r31, 0x7F	; 127
 734:	3f 2e       	mov	r3, r31
 736:	15 c0       	rjmp	.+42     	; 0x762 <vfprintf+0x180>
 738:	28 01       	movw	r4, r16
 73a:	22 e0       	ldi	r18, 0x02	; 2
 73c:	42 0e       	add	r4, r18
 73e:	51 1c       	adc	r5, r1
 740:	f8 01       	movw	r30, r16
 742:	a0 80       	ld	r10, Z
 744:	b1 80       	ldd	r11, Z+1	; 0x01
 746:	36 fe       	sbrs	r3, 6
 748:	03 c0       	rjmp	.+6      	; 0x750 <vfprintf+0x16e>
 74a:	69 2d       	mov	r22, r9
 74c:	70 e0       	ldi	r23, 0x00	; 0
 74e:	02 c0       	rjmp	.+4      	; 0x754 <vfprintf+0x172>
 750:	6f ef       	ldi	r22, 0xFF	; 255
 752:	7f ef       	ldi	r23, 0xFF	; 255
 754:	c5 01       	movw	r24, r10
 756:	17 d1       	rcall	.+558    	; 0x986 <strnlen_P>
 758:	4c 01       	movw	r8, r24
 75a:	f3 2d       	mov	r31, r3
 75c:	f0 68       	ori	r31, 0x80	; 128
 75e:	3f 2e       	mov	r3, r31
 760:	82 01       	movw	r16, r4
 762:	33 fc       	sbrc	r3, 3
 764:	19 c0       	rjmp	.+50     	; 0x798 <vfprintf+0x1b6>
 766:	82 2d       	mov	r24, r2
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	88 16       	cp	r8, r24
 76c:	99 06       	cpc	r9, r25
 76e:	a0 f4       	brcc	.+40     	; 0x798 <vfprintf+0x1b6>
 770:	b6 01       	movw	r22, r12
 772:	80 e2       	ldi	r24, 0x20	; 32
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	1d d1       	rcall	.+570    	; 0x9b2 <fputc>
 778:	2a 94       	dec	r2
 77a:	f5 cf       	rjmp	.-22     	; 0x766 <vfprintf+0x184>
 77c:	f5 01       	movw	r30, r10
 77e:	37 fc       	sbrc	r3, 7
 780:	85 91       	lpm	r24, Z+
 782:	37 fe       	sbrs	r3, 7
 784:	81 91       	ld	r24, Z+
 786:	5f 01       	movw	r10, r30
 788:	b6 01       	movw	r22, r12
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	12 d1       	rcall	.+548    	; 0x9b2 <fputc>
 78e:	21 10       	cpse	r2, r1
 790:	2a 94       	dec	r2
 792:	21 e0       	ldi	r18, 0x01	; 1
 794:	82 1a       	sub	r8, r18
 796:	91 08       	sbc	r9, r1
 798:	81 14       	cp	r8, r1
 79a:	91 04       	cpc	r9, r1
 79c:	79 f7       	brne	.-34     	; 0x77c <vfprintf+0x19a>
 79e:	e1 c0       	rjmp	.+450    	; 0x962 <__stack+0x63>
 7a0:	84 36       	cpi	r24, 0x64	; 100
 7a2:	11 f0       	breq	.+4      	; 0x7a8 <vfprintf+0x1c6>
 7a4:	89 36       	cpi	r24, 0x69	; 105
 7a6:	39 f5       	brne	.+78     	; 0x7f6 <vfprintf+0x214>
 7a8:	f8 01       	movw	r30, r16
 7aa:	37 fe       	sbrs	r3, 7
 7ac:	07 c0       	rjmp	.+14     	; 0x7bc <vfprintf+0x1da>
 7ae:	60 81       	ld	r22, Z
 7b0:	71 81       	ldd	r23, Z+1	; 0x01
 7b2:	82 81       	ldd	r24, Z+2	; 0x02
 7b4:	93 81       	ldd	r25, Z+3	; 0x03
 7b6:	0c 5f       	subi	r16, 0xFC	; 252
 7b8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ba:	08 c0       	rjmp	.+16     	; 0x7cc <vfprintf+0x1ea>
 7bc:	60 81       	ld	r22, Z
 7be:	71 81       	ldd	r23, Z+1	; 0x01
 7c0:	07 2e       	mov	r0, r23
 7c2:	00 0c       	add	r0, r0
 7c4:	88 0b       	sbc	r24, r24
 7c6:	99 0b       	sbc	r25, r25
 7c8:	0e 5f       	subi	r16, 0xFE	; 254
 7ca:	1f 4f       	sbci	r17, 0xFF	; 255
 7cc:	f3 2d       	mov	r31, r3
 7ce:	ff 76       	andi	r31, 0x6F	; 111
 7d0:	3f 2e       	mov	r3, r31
 7d2:	97 ff       	sbrs	r25, 7
 7d4:	09 c0       	rjmp	.+18     	; 0x7e8 <vfprintf+0x206>
 7d6:	90 95       	com	r25
 7d8:	80 95       	com	r24
 7da:	70 95       	com	r23
 7dc:	61 95       	neg	r22
 7de:	7f 4f       	sbci	r23, 0xFF	; 255
 7e0:	8f 4f       	sbci	r24, 0xFF	; 255
 7e2:	9f 4f       	sbci	r25, 0xFF	; 255
 7e4:	f0 68       	ori	r31, 0x80	; 128
 7e6:	3f 2e       	mov	r3, r31
 7e8:	2a e0       	ldi	r18, 0x0A	; 10
 7ea:	30 e0       	ldi	r19, 0x00	; 0
 7ec:	a3 01       	movw	r20, r6
 7ee:	1d d1       	rcall	.+570    	; 0xa2a <__ultoa_invert>
 7f0:	88 2e       	mov	r8, r24
 7f2:	86 18       	sub	r8, r6
 7f4:	44 c0       	rjmp	.+136    	; 0x87e <__DATA_REGION_LENGTH__+0x7e>
 7f6:	85 37       	cpi	r24, 0x75	; 117
 7f8:	31 f4       	brne	.+12     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7fa:	23 2d       	mov	r18, r3
 7fc:	2f 7e       	andi	r18, 0xEF	; 239
 7fe:	b2 2e       	mov	r11, r18
 800:	2a e0       	ldi	r18, 0x0A	; 10
 802:	30 e0       	ldi	r19, 0x00	; 0
 804:	25 c0       	rjmp	.+74     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 806:	93 2d       	mov	r25, r3
 808:	99 7f       	andi	r25, 0xF9	; 249
 80a:	b9 2e       	mov	r11, r25
 80c:	8f 36       	cpi	r24, 0x6F	; 111
 80e:	c1 f0       	breq	.+48     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 810:	18 f4       	brcc	.+6      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 812:	88 35       	cpi	r24, 0x58	; 88
 814:	79 f0       	breq	.+30     	; 0x834 <__DATA_REGION_LENGTH__+0x34>
 816:	ae c0       	rjmp	.+348    	; 0x974 <__stack+0x75>
 818:	80 37       	cpi	r24, 0x70	; 112
 81a:	19 f0       	breq	.+6      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 81c:	88 37       	cpi	r24, 0x78	; 120
 81e:	21 f0       	breq	.+8      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 820:	a9 c0       	rjmp	.+338    	; 0x974 <__stack+0x75>
 822:	e9 2f       	mov	r30, r25
 824:	e0 61       	ori	r30, 0x10	; 16
 826:	be 2e       	mov	r11, r30
 828:	b4 fe       	sbrs	r11, 4
 82a:	0d c0       	rjmp	.+26     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 82c:	fb 2d       	mov	r31, r11
 82e:	f4 60       	ori	r31, 0x04	; 4
 830:	bf 2e       	mov	r11, r31
 832:	09 c0       	rjmp	.+18     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 834:	34 fe       	sbrs	r3, 4
 836:	0a c0       	rjmp	.+20     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 838:	29 2f       	mov	r18, r25
 83a:	26 60       	ori	r18, 0x06	; 6
 83c:	b2 2e       	mov	r11, r18
 83e:	06 c0       	rjmp	.+12     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 840:	28 e0       	ldi	r18, 0x08	; 8
 842:	30 e0       	ldi	r19, 0x00	; 0
 844:	05 c0       	rjmp	.+10     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 846:	20 e1       	ldi	r18, 0x10	; 16
 848:	30 e0       	ldi	r19, 0x00	; 0
 84a:	02 c0       	rjmp	.+4      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 84c:	20 e1       	ldi	r18, 0x10	; 16
 84e:	32 e0       	ldi	r19, 0x02	; 2
 850:	f8 01       	movw	r30, r16
 852:	b7 fe       	sbrs	r11, 7
 854:	07 c0       	rjmp	.+14     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 856:	60 81       	ld	r22, Z
 858:	71 81       	ldd	r23, Z+1	; 0x01
 85a:	82 81       	ldd	r24, Z+2	; 0x02
 85c:	93 81       	ldd	r25, Z+3	; 0x03
 85e:	0c 5f       	subi	r16, 0xFC	; 252
 860:	1f 4f       	sbci	r17, 0xFF	; 255
 862:	06 c0       	rjmp	.+12     	; 0x870 <__DATA_REGION_LENGTH__+0x70>
 864:	60 81       	ld	r22, Z
 866:	71 81       	ldd	r23, Z+1	; 0x01
 868:	80 e0       	ldi	r24, 0x00	; 0
 86a:	90 e0       	ldi	r25, 0x00	; 0
 86c:	0e 5f       	subi	r16, 0xFE	; 254
 86e:	1f 4f       	sbci	r17, 0xFF	; 255
 870:	a3 01       	movw	r20, r6
 872:	db d0       	rcall	.+438    	; 0xa2a <__ultoa_invert>
 874:	88 2e       	mov	r8, r24
 876:	86 18       	sub	r8, r6
 878:	fb 2d       	mov	r31, r11
 87a:	ff 77       	andi	r31, 0x7F	; 127
 87c:	3f 2e       	mov	r3, r31
 87e:	36 fe       	sbrs	r3, 6
 880:	0d c0       	rjmp	.+26     	; 0x89c <__DATA_REGION_LENGTH__+0x9c>
 882:	23 2d       	mov	r18, r3
 884:	2e 7f       	andi	r18, 0xFE	; 254
 886:	a2 2e       	mov	r10, r18
 888:	89 14       	cp	r8, r9
 88a:	58 f4       	brcc	.+22     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
 88c:	34 fe       	sbrs	r3, 4
 88e:	0b c0       	rjmp	.+22     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 890:	32 fc       	sbrc	r3, 2
 892:	09 c0       	rjmp	.+18     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 894:	83 2d       	mov	r24, r3
 896:	8e 7e       	andi	r24, 0xEE	; 238
 898:	a8 2e       	mov	r10, r24
 89a:	05 c0       	rjmp	.+10     	; 0x8a6 <__DATA_REGION_LENGTH__+0xa6>
 89c:	b8 2c       	mov	r11, r8
 89e:	a3 2c       	mov	r10, r3
 8a0:	03 c0       	rjmp	.+6      	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 8a2:	b8 2c       	mov	r11, r8
 8a4:	01 c0       	rjmp	.+2      	; 0x8a8 <__DATA_REGION_LENGTH__+0xa8>
 8a6:	b9 2c       	mov	r11, r9
 8a8:	a4 fe       	sbrs	r10, 4
 8aa:	0f c0       	rjmp	.+30     	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8ac:	fe 01       	movw	r30, r28
 8ae:	e8 0d       	add	r30, r8
 8b0:	f1 1d       	adc	r31, r1
 8b2:	80 81       	ld	r24, Z
 8b4:	80 33       	cpi	r24, 0x30	; 48
 8b6:	21 f4       	brne	.+8      	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 8b8:	9a 2d       	mov	r25, r10
 8ba:	99 7e       	andi	r25, 0xE9	; 233
 8bc:	a9 2e       	mov	r10, r25
 8be:	09 c0       	rjmp	.+18     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8c0:	a2 fe       	sbrs	r10, 2
 8c2:	06 c0       	rjmp	.+12     	; 0x8d0 <__DATA_REGION_LENGTH__+0xd0>
 8c4:	b3 94       	inc	r11
 8c6:	b3 94       	inc	r11
 8c8:	04 c0       	rjmp	.+8      	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8ca:	8a 2d       	mov	r24, r10
 8cc:	86 78       	andi	r24, 0x86	; 134
 8ce:	09 f0       	breq	.+2      	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
 8d0:	b3 94       	inc	r11
 8d2:	a3 fc       	sbrc	r10, 3
 8d4:	10 c0       	rjmp	.+32     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 8d6:	a0 fe       	sbrs	r10, 0
 8d8:	06 c0       	rjmp	.+12     	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
 8da:	b2 14       	cp	r11, r2
 8dc:	80 f4       	brcc	.+32     	; 0x8fe <__DATA_REGION_LENGTH__+0xfe>
 8de:	28 0c       	add	r2, r8
 8e0:	92 2c       	mov	r9, r2
 8e2:	9b 18       	sub	r9, r11
 8e4:	0d c0       	rjmp	.+26     	; 0x900 <__stack+0x1>
 8e6:	b2 14       	cp	r11, r2
 8e8:	58 f4       	brcc	.+22     	; 0x900 <__stack+0x1>
 8ea:	b6 01       	movw	r22, r12
 8ec:	80 e2       	ldi	r24, 0x20	; 32
 8ee:	90 e0       	ldi	r25, 0x00	; 0
 8f0:	60 d0       	rcall	.+192    	; 0x9b2 <fputc>
 8f2:	b3 94       	inc	r11
 8f4:	f8 cf       	rjmp	.-16     	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
 8f6:	b2 14       	cp	r11, r2
 8f8:	18 f4       	brcc	.+6      	; 0x900 <__stack+0x1>
 8fa:	2b 18       	sub	r2, r11
 8fc:	02 c0       	rjmp	.+4      	; 0x902 <__stack+0x3>
 8fe:	98 2c       	mov	r9, r8
 900:	21 2c       	mov	r2, r1
 902:	a4 fe       	sbrs	r10, 4
 904:	0f c0       	rjmp	.+30     	; 0x924 <__stack+0x25>
 906:	b6 01       	movw	r22, r12
 908:	80 e3       	ldi	r24, 0x30	; 48
 90a:	90 e0       	ldi	r25, 0x00	; 0
 90c:	52 d0       	rcall	.+164    	; 0x9b2 <fputc>
 90e:	a2 fe       	sbrs	r10, 2
 910:	16 c0       	rjmp	.+44     	; 0x93e <__stack+0x3f>
 912:	a1 fc       	sbrc	r10, 1
 914:	03 c0       	rjmp	.+6      	; 0x91c <__stack+0x1d>
 916:	88 e7       	ldi	r24, 0x78	; 120
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	02 c0       	rjmp	.+4      	; 0x920 <__stack+0x21>
 91c:	88 e5       	ldi	r24, 0x58	; 88
 91e:	90 e0       	ldi	r25, 0x00	; 0
 920:	b6 01       	movw	r22, r12
 922:	0c c0       	rjmp	.+24     	; 0x93c <__stack+0x3d>
 924:	8a 2d       	mov	r24, r10
 926:	86 78       	andi	r24, 0x86	; 134
 928:	51 f0       	breq	.+20     	; 0x93e <__stack+0x3f>
 92a:	a1 fe       	sbrs	r10, 1
 92c:	02 c0       	rjmp	.+4      	; 0x932 <__stack+0x33>
 92e:	8b e2       	ldi	r24, 0x2B	; 43
 930:	01 c0       	rjmp	.+2      	; 0x934 <__stack+0x35>
 932:	80 e2       	ldi	r24, 0x20	; 32
 934:	a7 fc       	sbrc	r10, 7
 936:	8d e2       	ldi	r24, 0x2D	; 45
 938:	b6 01       	movw	r22, r12
 93a:	90 e0       	ldi	r25, 0x00	; 0
 93c:	3a d0       	rcall	.+116    	; 0x9b2 <fputc>
 93e:	89 14       	cp	r8, r9
 940:	30 f4       	brcc	.+12     	; 0x94e <__stack+0x4f>
 942:	b6 01       	movw	r22, r12
 944:	80 e3       	ldi	r24, 0x30	; 48
 946:	90 e0       	ldi	r25, 0x00	; 0
 948:	34 d0       	rcall	.+104    	; 0x9b2 <fputc>
 94a:	9a 94       	dec	r9
 94c:	f8 cf       	rjmp	.-16     	; 0x93e <__stack+0x3f>
 94e:	8a 94       	dec	r8
 950:	f3 01       	movw	r30, r6
 952:	e8 0d       	add	r30, r8
 954:	f1 1d       	adc	r31, r1
 956:	80 81       	ld	r24, Z
 958:	b6 01       	movw	r22, r12
 95a:	90 e0       	ldi	r25, 0x00	; 0
 95c:	2a d0       	rcall	.+84     	; 0x9b2 <fputc>
 95e:	81 10       	cpse	r8, r1
 960:	f6 cf       	rjmp	.-20     	; 0x94e <__stack+0x4f>
 962:	22 20       	and	r2, r2
 964:	09 f4       	brne	.+2      	; 0x968 <__stack+0x69>
 966:	4e ce       	rjmp	.-868    	; 0x604 <vfprintf+0x22>
 968:	b6 01       	movw	r22, r12
 96a:	80 e2       	ldi	r24, 0x20	; 32
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	21 d0       	rcall	.+66     	; 0x9b2 <fputc>
 970:	2a 94       	dec	r2
 972:	f7 cf       	rjmp	.-18     	; 0x962 <__stack+0x63>
 974:	f6 01       	movw	r30, r12
 976:	86 81       	ldd	r24, Z+6	; 0x06
 978:	97 81       	ldd	r25, Z+7	; 0x07
 97a:	02 c0       	rjmp	.+4      	; 0x980 <__stack+0x81>
 97c:	8f ef       	ldi	r24, 0xFF	; 255
 97e:	9f ef       	ldi	r25, 0xFF	; 255
 980:	2b 96       	adiw	r28, 0x0b	; 11
 982:	e2 e1       	ldi	r30, 0x12	; 18
 984:	cc c0       	rjmp	.+408    	; 0xb1e <__epilogue_restores__>

00000986 <strnlen_P>:
 986:	fc 01       	movw	r30, r24
 988:	05 90       	lpm	r0, Z+
 98a:	61 50       	subi	r22, 0x01	; 1
 98c:	70 40       	sbci	r23, 0x00	; 0
 98e:	01 10       	cpse	r0, r1
 990:	d8 f7       	brcc	.-10     	; 0x988 <strnlen_P+0x2>
 992:	80 95       	com	r24
 994:	90 95       	com	r25
 996:	8e 0f       	add	r24, r30
 998:	9f 1f       	adc	r25, r31
 99a:	08 95       	ret

0000099c <strnlen>:
 99c:	fc 01       	movw	r30, r24
 99e:	61 50       	subi	r22, 0x01	; 1
 9a0:	70 40       	sbci	r23, 0x00	; 0
 9a2:	01 90       	ld	r0, Z+
 9a4:	01 10       	cpse	r0, r1
 9a6:	d8 f7       	brcc	.-10     	; 0x99e <strnlen+0x2>
 9a8:	80 95       	com	r24
 9aa:	90 95       	com	r25
 9ac:	8e 0f       	add	r24, r30
 9ae:	9f 1f       	adc	r25, r31
 9b0:	08 95       	ret

000009b2 <fputc>:
 9b2:	0f 93       	push	r16
 9b4:	1f 93       	push	r17
 9b6:	cf 93       	push	r28
 9b8:	df 93       	push	r29
 9ba:	fb 01       	movw	r30, r22
 9bc:	23 81       	ldd	r18, Z+3	; 0x03
 9be:	21 fd       	sbrc	r18, 1
 9c0:	03 c0       	rjmp	.+6      	; 0x9c8 <fputc+0x16>
 9c2:	8f ef       	ldi	r24, 0xFF	; 255
 9c4:	9f ef       	ldi	r25, 0xFF	; 255
 9c6:	2c c0       	rjmp	.+88     	; 0xa20 <fputc+0x6e>
 9c8:	22 ff       	sbrs	r18, 2
 9ca:	16 c0       	rjmp	.+44     	; 0x9f8 <fputc+0x46>
 9cc:	46 81       	ldd	r20, Z+6	; 0x06
 9ce:	57 81       	ldd	r21, Z+7	; 0x07
 9d0:	24 81       	ldd	r18, Z+4	; 0x04
 9d2:	35 81       	ldd	r19, Z+5	; 0x05
 9d4:	42 17       	cp	r20, r18
 9d6:	53 07       	cpc	r21, r19
 9d8:	44 f4       	brge	.+16     	; 0x9ea <fputc+0x38>
 9da:	a0 81       	ld	r26, Z
 9dc:	b1 81       	ldd	r27, Z+1	; 0x01
 9de:	9d 01       	movw	r18, r26
 9e0:	2f 5f       	subi	r18, 0xFF	; 255
 9e2:	3f 4f       	sbci	r19, 0xFF	; 255
 9e4:	31 83       	std	Z+1, r19	; 0x01
 9e6:	20 83       	st	Z, r18
 9e8:	8c 93       	st	X, r24
 9ea:	26 81       	ldd	r18, Z+6	; 0x06
 9ec:	37 81       	ldd	r19, Z+7	; 0x07
 9ee:	2f 5f       	subi	r18, 0xFF	; 255
 9f0:	3f 4f       	sbci	r19, 0xFF	; 255
 9f2:	37 83       	std	Z+7, r19	; 0x07
 9f4:	26 83       	std	Z+6, r18	; 0x06
 9f6:	14 c0       	rjmp	.+40     	; 0xa20 <fputc+0x6e>
 9f8:	8b 01       	movw	r16, r22
 9fa:	ec 01       	movw	r28, r24
 9fc:	fb 01       	movw	r30, r22
 9fe:	00 84       	ldd	r0, Z+8	; 0x08
 a00:	f1 85       	ldd	r31, Z+9	; 0x09
 a02:	e0 2d       	mov	r30, r0
 a04:	09 95       	icall
 a06:	89 2b       	or	r24, r25
 a08:	e1 f6       	brne	.-72     	; 0x9c2 <fputc+0x10>
 a0a:	d8 01       	movw	r26, r16
 a0c:	16 96       	adiw	r26, 0x06	; 6
 a0e:	8d 91       	ld	r24, X+
 a10:	9c 91       	ld	r25, X
 a12:	17 97       	sbiw	r26, 0x07	; 7
 a14:	01 96       	adiw	r24, 0x01	; 1
 a16:	17 96       	adiw	r26, 0x07	; 7
 a18:	9c 93       	st	X, r25
 a1a:	8e 93       	st	-X, r24
 a1c:	16 97       	sbiw	r26, 0x06	; 6
 a1e:	ce 01       	movw	r24, r28
 a20:	df 91       	pop	r29
 a22:	cf 91       	pop	r28
 a24:	1f 91       	pop	r17
 a26:	0f 91       	pop	r16
 a28:	08 95       	ret

00000a2a <__ultoa_invert>:
 a2a:	fa 01       	movw	r30, r20
 a2c:	aa 27       	eor	r26, r26
 a2e:	28 30       	cpi	r18, 0x08	; 8
 a30:	51 f1       	breq	.+84     	; 0xa86 <__ultoa_invert+0x5c>
 a32:	20 31       	cpi	r18, 0x10	; 16
 a34:	81 f1       	breq	.+96     	; 0xa96 <__ultoa_invert+0x6c>
 a36:	e8 94       	clt
 a38:	6f 93       	push	r22
 a3a:	6e 7f       	andi	r22, 0xFE	; 254
 a3c:	6e 5f       	subi	r22, 0xFE	; 254
 a3e:	7f 4f       	sbci	r23, 0xFF	; 255
 a40:	8f 4f       	sbci	r24, 0xFF	; 255
 a42:	9f 4f       	sbci	r25, 0xFF	; 255
 a44:	af 4f       	sbci	r26, 0xFF	; 255
 a46:	b1 e0       	ldi	r27, 0x01	; 1
 a48:	3e d0       	rcall	.+124    	; 0xac6 <__ultoa_invert+0x9c>
 a4a:	b4 e0       	ldi	r27, 0x04	; 4
 a4c:	3c d0       	rcall	.+120    	; 0xac6 <__ultoa_invert+0x9c>
 a4e:	67 0f       	add	r22, r23
 a50:	78 1f       	adc	r23, r24
 a52:	89 1f       	adc	r24, r25
 a54:	9a 1f       	adc	r25, r26
 a56:	a1 1d       	adc	r26, r1
 a58:	68 0f       	add	r22, r24
 a5a:	79 1f       	adc	r23, r25
 a5c:	8a 1f       	adc	r24, r26
 a5e:	91 1d       	adc	r25, r1
 a60:	a1 1d       	adc	r26, r1
 a62:	6a 0f       	add	r22, r26
 a64:	71 1d       	adc	r23, r1
 a66:	81 1d       	adc	r24, r1
 a68:	91 1d       	adc	r25, r1
 a6a:	a1 1d       	adc	r26, r1
 a6c:	20 d0       	rcall	.+64     	; 0xaae <__ultoa_invert+0x84>
 a6e:	09 f4       	brne	.+2      	; 0xa72 <__ultoa_invert+0x48>
 a70:	68 94       	set
 a72:	3f 91       	pop	r19
 a74:	2a e0       	ldi	r18, 0x0A	; 10
 a76:	26 9f       	mul	r18, r22
 a78:	11 24       	eor	r1, r1
 a7a:	30 19       	sub	r19, r0
 a7c:	30 5d       	subi	r19, 0xD0	; 208
 a7e:	31 93       	st	Z+, r19
 a80:	de f6       	brtc	.-74     	; 0xa38 <__ultoa_invert+0xe>
 a82:	cf 01       	movw	r24, r30
 a84:	08 95       	ret
 a86:	46 2f       	mov	r20, r22
 a88:	47 70       	andi	r20, 0x07	; 7
 a8a:	40 5d       	subi	r20, 0xD0	; 208
 a8c:	41 93       	st	Z+, r20
 a8e:	b3 e0       	ldi	r27, 0x03	; 3
 a90:	0f d0       	rcall	.+30     	; 0xab0 <__ultoa_invert+0x86>
 a92:	c9 f7       	brne	.-14     	; 0xa86 <__ultoa_invert+0x5c>
 a94:	f6 cf       	rjmp	.-20     	; 0xa82 <__ultoa_invert+0x58>
 a96:	46 2f       	mov	r20, r22
 a98:	4f 70       	andi	r20, 0x0F	; 15
 a9a:	40 5d       	subi	r20, 0xD0	; 208
 a9c:	4a 33       	cpi	r20, 0x3A	; 58
 a9e:	18 f0       	brcs	.+6      	; 0xaa6 <__ultoa_invert+0x7c>
 aa0:	49 5d       	subi	r20, 0xD9	; 217
 aa2:	31 fd       	sbrc	r19, 1
 aa4:	40 52       	subi	r20, 0x20	; 32
 aa6:	41 93       	st	Z+, r20
 aa8:	02 d0       	rcall	.+4      	; 0xaae <__ultoa_invert+0x84>
 aaa:	a9 f7       	brne	.-22     	; 0xa96 <__ultoa_invert+0x6c>
 aac:	ea cf       	rjmp	.-44     	; 0xa82 <__ultoa_invert+0x58>
 aae:	b4 e0       	ldi	r27, 0x04	; 4
 ab0:	a6 95       	lsr	r26
 ab2:	97 95       	ror	r25
 ab4:	87 95       	ror	r24
 ab6:	77 95       	ror	r23
 ab8:	67 95       	ror	r22
 aba:	ba 95       	dec	r27
 abc:	c9 f7       	brne	.-14     	; 0xab0 <__ultoa_invert+0x86>
 abe:	00 97       	sbiw	r24, 0x00	; 0
 ac0:	61 05       	cpc	r22, r1
 ac2:	71 05       	cpc	r23, r1
 ac4:	08 95       	ret
 ac6:	9b 01       	movw	r18, r22
 ac8:	ac 01       	movw	r20, r24
 aca:	0a 2e       	mov	r0, r26
 acc:	06 94       	lsr	r0
 ace:	57 95       	ror	r21
 ad0:	47 95       	ror	r20
 ad2:	37 95       	ror	r19
 ad4:	27 95       	ror	r18
 ad6:	ba 95       	dec	r27
 ad8:	c9 f7       	brne	.-14     	; 0xacc <__ultoa_invert+0xa2>
 ada:	62 0f       	add	r22, r18
 adc:	73 1f       	adc	r23, r19
 ade:	84 1f       	adc	r24, r20
 ae0:	95 1f       	adc	r25, r21
 ae2:	a0 1d       	adc	r26, r0
 ae4:	08 95       	ret

00000ae6 <__prologue_saves__>:
 ae6:	2f 92       	push	r2
 ae8:	3f 92       	push	r3
 aea:	4f 92       	push	r4
 aec:	5f 92       	push	r5
 aee:	6f 92       	push	r6
 af0:	7f 92       	push	r7
 af2:	8f 92       	push	r8
 af4:	9f 92       	push	r9
 af6:	af 92       	push	r10
 af8:	bf 92       	push	r11
 afa:	cf 92       	push	r12
 afc:	df 92       	push	r13
 afe:	ef 92       	push	r14
 b00:	ff 92       	push	r15
 b02:	0f 93       	push	r16
 b04:	1f 93       	push	r17
 b06:	cf 93       	push	r28
 b08:	df 93       	push	r29
 b0a:	cd b7       	in	r28, 0x3d	; 61
 b0c:	de b7       	in	r29, 0x3e	; 62
 b0e:	ca 1b       	sub	r28, r26
 b10:	db 0b       	sbc	r29, r27
 b12:	0f b6       	in	r0, 0x3f	; 63
 b14:	f8 94       	cli
 b16:	de bf       	out	0x3e, r29	; 62
 b18:	0f be       	out	0x3f, r0	; 63
 b1a:	cd bf       	out	0x3d, r28	; 61
 b1c:	09 94       	ijmp

00000b1e <__epilogue_restores__>:
 b1e:	2a 88       	ldd	r2, Y+18	; 0x12
 b20:	39 88       	ldd	r3, Y+17	; 0x11
 b22:	48 88       	ldd	r4, Y+16	; 0x10
 b24:	5f 84       	ldd	r5, Y+15	; 0x0f
 b26:	6e 84       	ldd	r6, Y+14	; 0x0e
 b28:	7d 84       	ldd	r7, Y+13	; 0x0d
 b2a:	8c 84       	ldd	r8, Y+12	; 0x0c
 b2c:	9b 84       	ldd	r9, Y+11	; 0x0b
 b2e:	aa 84       	ldd	r10, Y+10	; 0x0a
 b30:	b9 84       	ldd	r11, Y+9	; 0x09
 b32:	c8 84       	ldd	r12, Y+8	; 0x08
 b34:	df 80       	ldd	r13, Y+7	; 0x07
 b36:	ee 80       	ldd	r14, Y+6	; 0x06
 b38:	fd 80       	ldd	r15, Y+5	; 0x05
 b3a:	0c 81       	ldd	r16, Y+4	; 0x04
 b3c:	1b 81       	ldd	r17, Y+3	; 0x03
 b3e:	aa 81       	ldd	r26, Y+2	; 0x02
 b40:	b9 81       	ldd	r27, Y+1	; 0x01
 b42:	ce 0f       	add	r28, r30
 b44:	d1 1d       	adc	r29, r1
 b46:	0f b6       	in	r0, 0x3f	; 63
 b48:	f8 94       	cli
 b4a:	de bf       	out	0x3e, r29	; 62
 b4c:	0f be       	out	0x3f, r0	; 63
 b4e:	cd bf       	out	0x3d, r28	; 61
 b50:	ed 01       	movw	r28, r26
 b52:	08 95       	ret

00000b54 <_exit>:
 b54:	f8 94       	cli

00000b56 <__stop_program>:
 b56:	ff cf       	rjmp	.-2      	; 0xb56 <__stop_program>
